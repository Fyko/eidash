--
-- PostgreSQL database dump
--

-- Dumped from database version 16.0
-- Dumped by pg_dump version 16.1
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
SET default_tablespace = '';
SET default_table_access_method = heap;
--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);
ALTER TABLE public.auth_group OWNER TO authentik;
--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.auth_group
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.auth_group_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.auth_group_permissions (
    id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);
ALTER TABLE public.auth_group_permissions OWNER TO authentik;
--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.auth_group_permissions
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.auth_group_permissions_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);
ALTER TABLE public.auth_permission OWNER TO authentik;
--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.auth_permission
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.auth_permission_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_blueprints_blueprintinstance; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_blueprints_blueprintinstance (
    created timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    managed text,
    instance_uuid uuid NOT NULL,
    name text NOT NULL,
    metadata jsonb NOT NULL,
    path text NOT NULL,
    context jsonb NOT NULL,
    last_applied timestamp with time zone NOT NULL,
    last_applied_hash text NOT NULL,
    status text NOT NULL,
    enabled boolean NOT NULL,
    managed_models text [] NOT NULL,
    content text NOT NULL
);
ALTER TABLE public.authentik_blueprints_blueprintinstance OWNER TO authentik;
--
-- Name: authentik_core_application; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_application (
    policybindingmodel_ptr_id uuid NOT NULL,
    name text NOT NULL,
    slug character varying(50) NOT NULL,
    meta_launch_url text NOT NULL,
    meta_description text NOT NULL,
    meta_publisher text NOT NULL,
    provider_id integer,
    meta_icon character varying(500),
    "group" text NOT NULL,
    open_in_new_tab boolean NOT NULL
);
ALTER TABLE public.authentik_core_application OWNER TO authentik;
--
-- Name: authentik_core_authenticatedsession; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_authenticatedsession (
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    uuid uuid NOT NULL,
    session_key character varying(40) NOT NULL,
    last_ip text NOT NULL,
    last_user_agent text NOT NULL,
    last_used timestamp with time zone NOT NULL,
    user_id integer NOT NULL
);
ALTER TABLE public.authentik_core_authenticatedsession OWNER TO authentik;
--
-- Name: authentik_core_group; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_group (
    group_uuid uuid NOT NULL,
    name character varying(80) NOT NULL,
    attributes jsonb NOT NULL,
    parent_id uuid,
    is_superuser boolean NOT NULL
);
ALTER TABLE public.authentik_core_group OWNER TO authentik;
--
-- Name: authentik_core_group_roles; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_group_roles (
    id integer NOT NULL,
    group_id uuid NOT NULL,
    role_id uuid NOT NULL
);
ALTER TABLE public.authentik_core_group_roles OWNER TO authentik;
--
-- Name: authentik_core_group_roles_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_group_roles
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_group_roles_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_propertymapping; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_propertymapping (
    pm_uuid uuid NOT NULL,
    name text NOT NULL,
    expression text NOT NULL,
    managed text
);
ALTER TABLE public.authentik_core_propertymapping OWNER TO authentik;
--
-- Name: authentik_core_provider; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_provider (
    id integer NOT NULL,
    authorization_flow_id uuid,
    name text NOT NULL,
    authentication_flow_id uuid,
    backchannel_application_id uuid,
    is_backchannel boolean NOT NULL
);
ALTER TABLE public.authentik_core_provider OWNER TO authentik;
--
-- Name: authentik_core_provider_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_provider
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_provider_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_provider_property_mappings; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_provider_property_mappings (
    id integer NOT NULL,
    provider_id integer NOT NULL,
    propertymapping_id uuid NOT NULL
);
ALTER TABLE public.authentik_core_provider_property_mappings OWNER TO authentik;
--
-- Name: authentik_core_provider_property_mappings_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_provider_property_mappings
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_provider_property_mappings_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_source; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_source (
    policybindingmodel_ptr_id uuid NOT NULL,
    name text NOT NULL,
    slug character varying(50) NOT NULL,
    enabled boolean NOT NULL,
    authentication_flow_id uuid,
    enrollment_flow_id uuid,
    managed text,
    user_matching_mode text NOT NULL,
    user_path_template text NOT NULL,
    icon character varying(500)
);
ALTER TABLE public.authentik_core_source OWNER TO authentik;
--
-- Name: authentik_core_source_property_mappings; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_source_property_mappings (
    id integer NOT NULL,
    source_id uuid NOT NULL,
    propertymapping_id uuid NOT NULL
);
ALTER TABLE public.authentik_core_source_property_mappings OWNER TO authentik;
--
-- Name: authentik_core_source_property_mappings_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_source_property_mappings
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_source_property_mappings_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_token; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_token (
    token_uuid uuid NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    description text NOT NULL,
    user_id integer NOT NULL,
    intent text NOT NULL,
    identifier character varying(255) NOT NULL,
    key text NOT NULL,
    managed text
);
ALTER TABLE public.authentik_core_token OWNER TO authentik;
--
-- Name: authentik_core_user; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    uuid uuid NOT NULL,
    name text NOT NULL,
    password_change_date timestamp with time zone NOT NULL,
    attributes jsonb NOT NULL,
    path text NOT NULL,
    type text NOT NULL
);
ALTER TABLE public.authentik_core_user OWNER TO authentik;
--
-- Name: authentik_core_user_ak_groups; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_user_ak_groups (
    id integer NOT NULL,
    user_id integer NOT NULL,
    group_id uuid NOT NULL
);
ALTER TABLE public.authentik_core_user_ak_groups OWNER TO authentik;
--
-- Name: authentik_core_user_groups; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_user_groups (
    id integer NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);
ALTER TABLE public.authentik_core_user_groups OWNER TO authentik;
--
-- Name: authentik_core_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_user_groups
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_user_groups_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_user_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_user
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_user_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_user_pb_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_user_ak_groups
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_user_pb_groups_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_user_user_permissions; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_user_user_permissions (
    id integer NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);
ALTER TABLE public.authentik_core_user_user_permissions OWNER TO authentik;
--
-- Name: authentik_core_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_user_user_permissions
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_user_user_permissions_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_core_usersourceconnection; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_core_usersourceconnection (
    id integer NOT NULL,
    created timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    source_id uuid NOT NULL,
    user_id integer NOT NULL
);
ALTER TABLE public.authentik_core_usersourceconnection OWNER TO authentik;
--
-- Name: authentik_core_usersourceconnection_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_core_usersourceconnection
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_core_usersourceconnection_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_crypto_certificatekeypair; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_crypto_certificatekeypair (
    created timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    kp_uuid uuid NOT NULL,
    name text NOT NULL,
    certificate_data text NOT NULL,
    key_data text NOT NULL,
    managed text
);
ALTER TABLE public.authentik_crypto_certificatekeypair OWNER TO authentik;
--
-- Name: authentik_enterprise_license; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_enterprise_license (
    license_uuid uuid NOT NULL,
    key text NOT NULL,
    name text NOT NULL,
    expiry timestamp with time zone NOT NULL,
    internal_users bigint NOT NULL,
    external_users bigint NOT NULL
);
ALTER TABLE public.authentik_enterprise_license OWNER TO authentik;
--
-- Name: authentik_enterprise_licenseusage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_enterprise_licenseusage (
    expiring boolean NOT NULL,
    expires timestamp with time zone NOT NULL,
    usage_uuid uuid NOT NULL,
    user_count bigint NOT NULL,
    external_user_count bigint NOT NULL,
    within_limits boolean NOT NULL,
    record_date timestamp with time zone NOT NULL
);
ALTER TABLE public.authentik_enterprise_licenseusage OWNER TO authentik;
--
-- Name: authentik_events_event; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_events_event (
    event_uuid uuid NOT NULL,
    action text NOT NULL,
    app text NOT NULL,
    context jsonb NOT NULL,
    client_ip inet,
    created timestamp with time zone NOT NULL,
    "user" jsonb NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    tenant jsonb NOT NULL
);
ALTER TABLE public.authentik_events_event OWNER TO authentik;
--
-- Name: authentik_events_notification; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_events_notification (
    uuid uuid NOT NULL,
    severity text NOT NULL,
    body text NOT NULL,
    created timestamp with time zone NOT NULL,
    seen boolean NOT NULL,
    event_id uuid,
    user_id integer NOT NULL
);
ALTER TABLE public.authentik_events_notification OWNER TO authentik;
--
-- Name: authentik_events_notificationrule; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_events_notificationrule (
    policybindingmodel_ptr_id uuid NOT NULL,
    name text NOT NULL,
    severity text NOT NULL,
    group_id uuid
);
ALTER TABLE public.authentik_events_notificationrule OWNER TO authentik;
--
-- Name: authentik_events_notificationrule_transports; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_events_notificationrule_transports (
    id integer NOT NULL,
    notificationrule_id uuid NOT NULL,
    notificationtransport_id uuid NOT NULL
);
ALTER TABLE public.authentik_events_notificationrule_transports OWNER TO authentik;
--
-- Name: authentik_events_notificationrule_transports_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_events_notificationrule_transports
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_events_notificationrule_transports_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_events_notificationtransport; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_events_notificationtransport (
    uuid uuid NOT NULL,
    name text NOT NULL,
    mode text NOT NULL,
    webhook_url text NOT NULL,
    send_once boolean NOT NULL,
    webhook_mapping_id uuid
);
ALTER TABLE public.authentik_events_notificationtransport OWNER TO authentik;
--
-- Name: authentik_events_notificationwebhookmapping; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_events_notificationwebhookmapping (propertymapping_ptr_id uuid NOT NULL);
ALTER TABLE public.authentik_events_notificationwebhookmapping OWNER TO authentik;
--
-- Name: authentik_flows_flow; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_flows_flow (
    flow_uuid uuid NOT NULL,
    name text NOT NULL,
    slug character varying(50) NOT NULL,
    designation character varying(100) NOT NULL,
    policybindingmodel_ptr_id uuid NOT NULL,
    title text NOT NULL,
    background character varying(500),
    compatibility_mode boolean NOT NULL,
    layout text NOT NULL,
    denied_action text NOT NULL,
    authentication text NOT NULL
);
ALTER TABLE public.authentik_flows_flow OWNER TO authentik;
--
-- Name: authentik_flows_flowstagebinding; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_flows_flowstagebinding (
    policybindingmodel_ptr_id uuid NOT NULL,
    fsb_uuid uuid NOT NULL,
    re_evaluate_policies boolean NOT NULL,
    "order" integer NOT NULL,
    target_id uuid NOT NULL,
    stage_id uuid NOT NULL,
    evaluate_on_plan boolean NOT NULL,
    invalid_response_action text NOT NULL
);
ALTER TABLE public.authentik_flows_flowstagebinding OWNER TO authentik;
--
-- Name: authentik_flows_flowtoken; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_flows_flowtoken (
    token_ptr_id uuid NOT NULL,
    _plan text NOT NULL,
    flow_id uuid NOT NULL
);
ALTER TABLE public.authentik_flows_flowtoken OWNER TO authentik;
--
-- Name: authentik_flows_stage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_flows_stage (
    stage_uuid uuid NOT NULL,
    name text NOT NULL
);
ALTER TABLE public.authentik_flows_stage OWNER TO authentik;
--
-- Name: authentik_install_id; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_install_id (id text NOT NULL);
ALTER TABLE public.authentik_install_id OWNER TO authentik;
--
-- Name: authentik_outposts_dockerserviceconnection; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_outposts_dockerserviceconnection (
    outpostserviceconnection_ptr_id uuid NOT NULL,
    url text NOT NULL,
    tls_authentication_id uuid,
    tls_verification_id uuid
);
ALTER TABLE public.authentik_outposts_dockerserviceconnection OWNER TO authentik;
--
-- Name: authentik_outposts_kubernetesserviceconnection; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_outposts_kubernetesserviceconnection (
    outpostserviceconnection_ptr_id uuid NOT NULL,
    kubeconfig jsonb NOT NULL,
    verify_ssl boolean NOT NULL
);
ALTER TABLE public.authentik_outposts_kubernetesserviceconnection OWNER TO authentik;
--
-- Name: authentik_outposts_outpost; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_outposts_outpost (
    uuid uuid NOT NULL,
    name text NOT NULL,
    _config jsonb NOT NULL,
    type text NOT NULL,
    service_connection_id uuid,
    managed text
);
ALTER TABLE public.authentik_outposts_outpost OWNER TO authentik;
--
-- Name: authentik_outposts_outpost_providers; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_outposts_outpost_providers (
    id integer NOT NULL,
    outpost_id uuid NOT NULL,
    provider_id integer NOT NULL
);
ALTER TABLE public.authentik_outposts_outpost_providers OWNER TO authentik;
--
-- Name: authentik_outposts_outpost_providers_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_outposts_outpost_providers
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_outposts_outpost_providers_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_outposts_outpostserviceconnection; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_outposts_outpostserviceconnection (
    uuid uuid NOT NULL,
    name text NOT NULL,
    local boolean NOT NULL
);
ALTER TABLE public.authentik_outposts_outpostserviceconnection OWNER TO authentik;
--
-- Name: authentik_policies_dummy_dummypolicy; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_dummy_dummypolicy (
    policy_ptr_id uuid NOT NULL,
    result boolean NOT NULL,
    wait_min integer NOT NULL,
    wait_max integer NOT NULL
);
ALTER TABLE public.authentik_policies_dummy_dummypolicy OWNER TO authentik;
--
-- Name: authentik_policies_event_matcher_eventmatcherpolicy; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_event_matcher_eventmatcherpolicy (
    policy_ptr_id uuid NOT NULL,
    action text,
    client_ip text,
    app text,
    model text
);
ALTER TABLE public.authentik_policies_event_matcher_eventmatcherpolicy OWNER TO authentik;
--
-- Name: authentik_policies_expiry_passwordexpirypolicy; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_expiry_passwordexpirypolicy (
    policy_ptr_id uuid NOT NULL,
    deny_only boolean NOT NULL,
    days integer NOT NULL
);
ALTER TABLE public.authentik_policies_expiry_passwordexpirypolicy OWNER TO authentik;
--
-- Name: authentik_policies_expression_expressionpolicy; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_expression_expressionpolicy (
    policy_ptr_id uuid NOT NULL,
    expression text NOT NULL
);
ALTER TABLE public.authentik_policies_expression_expressionpolicy OWNER TO authentik;
--
-- Name: authentik_policies_password_passwordpolicy; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_password_passwordpolicy (
    policy_ptr_id uuid NOT NULL,
    amount_uppercase integer NOT NULL,
    amount_lowercase integer NOT NULL,
    amount_symbols integer NOT NULL,
    length_min integer NOT NULL,
    symbol_charset text NOT NULL,
    error_message text NOT NULL,
    password_field text NOT NULL,
    amount_digits integer NOT NULL,
    check_have_i_been_pwned boolean NOT NULL,
    check_static_rules boolean NOT NULL,
    check_zxcvbn boolean NOT NULL,
    hibp_allowed_count integer NOT NULL,
    zxcvbn_score_threshold integer NOT NULL,
    CONSTRAINT authentik_policies_pass_amount_lowercase_9d79427e_check CHECK ((amount_lowercase >= 0)),
    CONSTRAINT authentik_policies_pass_amount_symbols_d57af249_check CHECK ((amount_symbols >= 0)),
    CONSTRAINT authentik_policies_pass_amount_uppercase_7c908a32_check CHECK ((amount_uppercase >= 0)),
    CONSTRAINT authentik_policies_pass_length_min_7acd2128_check CHECK ((length_min >= 0)),
    CONSTRAINT authentik_policies_password_passwo_zxcvbn_score_threshold_check CHECK ((zxcvbn_score_threshold >= 0)),
    CONSTRAINT authentik_policies_password_passwordpo_hibp_allowed_count_check CHECK ((hibp_allowed_count >= 0)),
    CONSTRAINT authentik_policies_password_passwordpolicy_amount_digits_check CHECK ((amount_digits >= 0))
);
ALTER TABLE public.authentik_policies_password_passwordpolicy OWNER TO authentik;
--
-- Name: authentik_policies_policy; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_policy (
    created timestamp with time zone NOT NULL,
    last_updated timestamp with time zone NOT NULL,
    policy_uuid uuid NOT NULL,
    name text NOT NULL,
    execution_logging boolean NOT NULL
);
ALTER TABLE public.authentik_policies_policy OWNER TO authentik;
--
-- Name: authentik_policies_policybinding; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_policybinding (
    policy_binding_uuid uuid NOT NULL,
    enabled boolean NOT NULL,
    "order" integer NOT NULL,
    policy_id uuid,
    target_id uuid NOT NULL,
    negate boolean NOT NULL,
    timeout integer NOT NULL,
    group_id uuid,
    user_id integer,
    failure_result boolean NOT NULL,
    CONSTRAINT authentik_policies_policybinding_timeout_b41b0d57_check CHECK ((timeout >= 0))
);
ALTER TABLE public.authentik_policies_policybinding OWNER TO authentik;
--
-- Name: authentik_policies_policybindingmodel; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_policybindingmodel (
    pbm_uuid uuid NOT NULL,
    policy_engine_mode text NOT NULL
);
ALTER TABLE public.authentik_policies_policybindingmodel OWNER TO authentik;
--
-- Name: authentik_policies_reputation_reputation; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_reputation_reputation (
    reputation_uuid uuid NOT NULL,
    identifier text NOT NULL,
    ip inet NOT NULL,
    ip_geo_data jsonb NOT NULL,
    score bigint NOT NULL,
    updated timestamp with time zone NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL
);
ALTER TABLE public.authentik_policies_reputation_reputation OWNER TO authentik;
--
-- Name: authentik_policies_reputation_reputationpolicy; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_policies_reputation_reputationpolicy (
    policy_ptr_id uuid NOT NULL,
    check_ip boolean NOT NULL,
    check_username boolean NOT NULL,
    threshold integer NOT NULL
);
ALTER TABLE public.authentik_policies_reputation_reputationpolicy OWNER TO authentik;
--
-- Name: authentik_providers_ldap_ldapprovider; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_ldap_ldapprovider (
    provider_ptr_id integer NOT NULL,
    base_dn text NOT NULL,
    search_group_id uuid,
    certificate_id uuid,
    tls_server_name text NOT NULL,
    gid_start_number integer NOT NULL,
    uid_start_number integer NOT NULL,
    search_mode text NOT NULL,
    bind_mode text NOT NULL,
    mfa_support boolean NOT NULL
);
ALTER TABLE public.authentik_providers_ldap_ldapprovider OWNER TO authentik;
--
-- Name: authentik_providers_oauth2_accesstoken; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_oauth2_accesstoken (
    id integer NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    revoked boolean NOT NULL,
    _scope text NOT NULL,
    token text NOT NULL,
    _id_token text NOT NULL,
    provider_id integer NOT NULL,
    user_id integer NOT NULL,
    auth_time timestamp with time zone NOT NULL
);
ALTER TABLE public.authentik_providers_oauth2_accesstoken OWNER TO authentik;
--
-- Name: authentik_providers_oauth2_accesstoken_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_providers_oauth2_accesstoken
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_providers_oauth2_accesstoken_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_providers_oauth2_authorizationcode; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_oauth2_authorizationcode (
    id integer NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    _scope text NOT NULL,
    code character varying(255) NOT NULL,
    nonce text,
    code_challenge character varying(255),
    code_challenge_method character varying(255),
    provider_id integer NOT NULL,
    user_id integer NOT NULL,
    revoked boolean NOT NULL,
    auth_time timestamp with time zone NOT NULL
);
ALTER TABLE public.authentik_providers_oauth2_authorizationcode OWNER TO authentik;
--
-- Name: authentik_providers_oauth2_authorizationcode_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_providers_oauth2_authorizationcode
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_providers_oauth2_authorizationcode_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_providers_oauth2_devicetoken; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_oauth2_devicetoken (
    id integer NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    device_code text NOT NULL,
    user_code text NOT NULL,
    _scope text NOT NULL,
    provider_id integer NOT NULL,
    user_id integer
);
ALTER TABLE public.authentik_providers_oauth2_devicetoken OWNER TO authentik;
--
-- Name: authentik_providers_oauth2_devicetoken_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_providers_oauth2_devicetoken
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_providers_oauth2_devicetoken_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_providers_oauth2_oauth2provider; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_oauth2_oauth2provider (
    provider_ptr_id integer NOT NULL,
    client_type character varying(30) NOT NULL,
    client_id character varying(255) NOT NULL,
    client_secret character varying(255) NOT NULL,
    redirect_uris text NOT NULL,
    include_claims_in_id_token boolean NOT NULL,
    refresh_token_validity text NOT NULL,
    signing_key_id uuid,
    sub_mode text NOT NULL,
    issuer_mode text NOT NULL,
    access_code_validity text NOT NULL,
    access_token_validity text NOT NULL
);
ALTER TABLE public.authentik_providers_oauth2_oauth2provider OWNER TO authentik;
--
-- Name: authentik_providers_oauth2_oauth2provider_jwks_sources; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_oauth2_oauth2provider_jwks_sources (
    id integer NOT NULL,
    oauth2provider_id integer NOT NULL,
    oauthsource_id uuid NOT NULL
);
ALTER TABLE public.authentik_providers_oauth2_oauth2provider_jwks_sources OWNER TO authentik;
--
-- Name: authentik_providers_oauth2_oauth2provider_jwks_sources_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_providers_oauth2_oauth2provider_jwks_sources
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_providers_oauth2_oauth2provider_jwks_sources_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_providers_oauth2_refreshtoken; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_oauth2_refreshtoken (
    id integer NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    _scope text NOT NULL,
    _id_token text NOT NULL,
    provider_id integer NOT NULL,
    user_id integer NOT NULL,
    revoked boolean NOT NULL,
    token text NOT NULL,
    auth_time timestamp with time zone NOT NULL
);
ALTER TABLE public.authentik_providers_oauth2_refreshtoken OWNER TO authentik;
--
-- Name: authentik_providers_oauth2_refreshtoken_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_providers_oauth2_refreshtoken
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_providers_oauth2_refreshtoken_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_providers_oauth2_scopemapping; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_oauth2_scopemapping (
    propertymapping_ptr_id uuid NOT NULL,
    scope_name text NOT NULL,
    description text NOT NULL
);
ALTER TABLE public.authentik_providers_oauth2_scopemapping OWNER TO authentik;
--
-- Name: authentik_providers_proxy_proxyprovider; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_proxy_proxyprovider (
    oauth2provider_ptr_id integer NOT NULL,
    internal_host text NOT NULL,
    external_host text NOT NULL,
    cookie_secret text NOT NULL,
    certificate_id uuid,
    skip_path_regex text NOT NULL,
    internal_host_ssl_validation boolean NOT NULL,
    basic_auth_enabled boolean NOT NULL,
    basic_auth_password_attribute text NOT NULL,
    basic_auth_user_attribute text NOT NULL,
    cookie_domain text NOT NULL,
    mode text NOT NULL,
    intercept_header_auth boolean NOT NULL
);
ALTER TABLE public.authentik_providers_proxy_proxyprovider OWNER TO authentik;
--
-- Name: authentik_providers_radius_radiusprovider; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_radius_radiusprovider (
    provider_ptr_id integer NOT NULL,
    shared_secret text NOT NULL,
    client_networks text NOT NULL,
    mfa_support boolean NOT NULL
);
ALTER TABLE public.authentik_providers_radius_radiusprovider OWNER TO authentik;
--
-- Name: authentik_providers_saml_samlpropertymapping; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_saml_samlpropertymapping (
    propertymapping_ptr_id uuid NOT NULL,
    saml_name text NOT NULL,
    friendly_name text
);
ALTER TABLE public.authentik_providers_saml_samlpropertymapping OWNER TO authentik;
--
-- Name: authentik_providers_saml_samlprovider; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_saml_samlprovider (
    provider_ptr_id integer NOT NULL,
    acs_url character varying(200) NOT NULL,
    audience text NOT NULL,
    issuer text NOT NULL,
    assertion_valid_not_before text NOT NULL,
    assertion_valid_not_on_or_after text NOT NULL,
    session_valid_not_on_or_after text NOT NULL,
    digest_algorithm character varying(50) NOT NULL,
    signature_algorithm character varying(50) NOT NULL,
    signing_kp_id uuid,
    sp_binding text NOT NULL,
    verification_kp_id uuid,
    name_id_mapping_id uuid,
    default_relay_state text NOT NULL
);
ALTER TABLE public.authentik_providers_saml_samlprovider OWNER TO authentik;
--
-- Name: authentik_providers_scim_scimgroup; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_scim_scimgroup (
    id text NOT NULL,
    group_id uuid NOT NULL,
    provider_id integer NOT NULL
);
ALTER TABLE public.authentik_providers_scim_scimgroup OWNER TO authentik;
--
-- Name: authentik_providers_scim_scimmapping; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_scim_scimmapping (propertymapping_ptr_id uuid NOT NULL);
ALTER TABLE public.authentik_providers_scim_scimmapping OWNER TO authentik;
--
-- Name: authentik_providers_scim_scimprovider; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_scim_scimprovider (
    provider_ptr_id integer NOT NULL,
    url text NOT NULL,
    token text NOT NULL,
    exclude_users_service_account boolean NOT NULL,
    filter_group_id uuid
);
ALTER TABLE public.authentik_providers_scim_scimprovider OWNER TO authentik;
--
-- Name: authentik_providers_scim_scimprovider_property_mappings_group; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_scim_scimprovider_property_mappings_group (
    id integer NOT NULL,
    scimprovider_id integer NOT NULL,
    propertymapping_id uuid NOT NULL
);
ALTER TABLE public.authentik_providers_scim_scimprovider_property_mappings_group OWNER TO authentik;
--
-- Name: authentik_providers_scim_scimprovider_property_mappings__id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_providers_scim_scimprovider_property_mappings_group
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_providers_scim_scimprovider_property_mappings__id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_providers_scim_scimuser; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_providers_scim_scimuser (
    id text NOT NULL,
    provider_id integer NOT NULL,
    user_id integer NOT NULL
);
ALTER TABLE public.authentik_providers_scim_scimuser OWNER TO authentik;
--
-- Name: authentik_rbac_role; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_rbac_role (
    uuid uuid NOT NULL,
    name text NOT NULL,
    group_id integer NOT NULL
);
ALTER TABLE public.authentik_rbac_role OWNER TO authentik;
--
-- Name: authentik_sources_ldap_ldappropertymapping; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_ldap_ldappropertymapping (
    propertymapping_ptr_id uuid NOT NULL,
    object_field text NOT NULL
);
ALTER TABLE public.authentik_sources_ldap_ldappropertymapping OWNER TO authentik;
--
-- Name: authentik_sources_ldap_ldapsource; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_ldap_ldapsource (
    source_ptr_id uuid NOT NULL,
    server_uri text NOT NULL,
    bind_cn text NOT NULL,
    bind_password text NOT NULL,
    start_tls boolean NOT NULL,
    base_dn text NOT NULL,
    additional_user_dn text NOT NULL,
    additional_group_dn text NOT NULL,
    user_object_filter text NOT NULL,
    group_object_filter text NOT NULL,
    object_uniqueness_field text NOT NULL,
    sync_groups boolean NOT NULL,
    sync_parent_group_id uuid,
    sync_users boolean NOT NULL,
    sync_users_password boolean NOT NULL,
    group_membership_field text NOT NULL,
    peer_certificate_id uuid,
    client_certificate_id uuid,
    sni boolean NOT NULL
);
ALTER TABLE public.authentik_sources_ldap_ldapsource OWNER TO authentik;
--
-- Name: authentik_sources_ldap_ldapsource_property_mappings_group; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_ldap_ldapsource_property_mappings_group (
    id integer NOT NULL,
    ldapsource_id uuid NOT NULL,
    propertymapping_id uuid NOT NULL
);
ALTER TABLE public.authentik_sources_ldap_ldapsource_property_mappings_group OWNER TO authentik;
--
-- Name: authentik_sources_ldap_ldapsource_property_mappings_grou_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_sources_ldap_ldapsource_property_mappings_group
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_sources_ldap_ldapsource_property_mappings_grou_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_sources_oauth_oauthsource; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_oauth_oauthsource (
    source_ptr_id uuid NOT NULL,
    provider_type character varying(255) NOT NULL,
    request_token_url character varying(255),
    authorization_url character varying(255),
    access_token_url character varying(255),
    profile_url character varying(255),
    consumer_key text NOT NULL,
    consumer_secret text NOT NULL,
    additional_scopes text NOT NULL,
    oidc_jwks jsonb NOT NULL,
    oidc_jwks_url text NOT NULL,
    oidc_well_known_url text NOT NULL
);
ALTER TABLE public.authentik_sources_oauth_oauthsource OWNER TO authentik;
--
-- Name: authentik_sources_oauth_useroauthsourceconnection; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_oauth_useroauthsourceconnection (
    usersourceconnection_ptr_id integer NOT NULL,
    identifier character varying(255) NOT NULL,
    access_token text
);
ALTER TABLE public.authentik_sources_oauth_useroauthsourceconnection OWNER TO authentik;
--
-- Name: authentik_sources_plex_plexsource; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_plex_plexsource (
    source_ptr_id uuid NOT NULL,
    client_id text NOT NULL,
    allowed_servers text [] NOT NULL,
    allow_friends boolean NOT NULL,
    plex_token text NOT NULL
);
ALTER TABLE public.authentik_sources_plex_plexsource OWNER TO authentik;
--
-- Name: authentik_sources_plex_plexsourceconnection; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_plex_plexsourceconnection (
    usersourceconnection_ptr_id integer NOT NULL,
    plex_token text NOT NULL,
    identifier text NOT NULL
);
ALTER TABLE public.authentik_sources_plex_plexsourceconnection OWNER TO authentik;
--
-- Name: authentik_sources_saml_samlsource; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_saml_samlsource (
    source_ptr_id uuid NOT NULL,
    issuer text NOT NULL,
    sso_url character varying(200) NOT NULL,
    slo_url character varying(200),
    signing_kp_id uuid,
    binding_type character varying(100) NOT NULL,
    temporary_user_delete_after text NOT NULL,
    name_id_policy text NOT NULL,
    allow_idp_initiated boolean NOT NULL,
    digest_algorithm character varying(50) NOT NULL,
    signature_algorithm character varying(50) NOT NULL,
    pre_authentication_flow_id uuid NOT NULL,
    verification_kp_id uuid
);
ALTER TABLE public.authentik_sources_saml_samlsource OWNER TO authentik;
--
-- Name: authentik_sources_saml_usersamlsourceconnection; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_sources_saml_usersamlsourceconnection (
    usersourceconnection_ptr_id integer NOT NULL,
    identifier text NOT NULL
);
ALTER TABLE public.authentik_sources_saml_usersamlsourceconnection OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_duo_authenticatorduostage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_duo_authenticatorduostage (
    stage_ptr_id uuid NOT NULL,
    client_id text NOT NULL,
    client_secret text NOT NULL,
    api_hostname text NOT NULL,
    configure_flow_id uuid,
    admin_integration_key text NOT NULL,
    admin_secret_key text NOT NULL,
    friendly_name text
);
ALTER TABLE public.authentik_stages_authenticator_duo_authenticatorduostage OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_duo_duodevice; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_duo_duodevice (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    confirmed boolean NOT NULL,
    duo_user_id text NOT NULL,
    stage_id uuid NOT NULL,
    user_id integer NOT NULL,
    last_t timestamp with time zone NOT NULL
);
ALTER TABLE public.authentik_stages_authenticator_duo_duodevice OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_duo_duodevice_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_authenticator_duo_duodevice
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_authenticator_duo_duodevice_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_authenticator_sms_authenticatorsmsstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_sms_authenticatorsmsstage (
    stage_ptr_id uuid NOT NULL,
    provider text NOT NULL,
    account_sid text NOT NULL,
    auth text NOT NULL,
    configure_flow_id uuid,
    from_number text NOT NULL,
    auth_password text NOT NULL,
    auth_type text NOT NULL,
    verify_only boolean NOT NULL,
    mapping_id uuid,
    friendly_name text
);
ALTER TABLE public.authentik_stages_authenticator_sms_authenticatorsmsstage OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_sms_smsdevice; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_sms_smsdevice (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    confirmed boolean NOT NULL,
    token character varying(16),
    valid_until timestamp with time zone NOT NULL,
    phone_number text NOT NULL,
    stage_id uuid NOT NULL,
    user_id integer NOT NULL,
    last_t timestamp with time zone NOT NULL
);
ALTER TABLE public.authentik_stages_authenticator_sms_smsdevice OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_sms_smsdevice_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_authenticator_sms_smsdevice
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_authenticator_sms_smsdevice_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_authenticator_static_authenticatorstaticstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_static_authenticatorstaticstage (
    stage_ptr_id uuid NOT NULL,
    token_count integer NOT NULL,
    configure_flow_id uuid,
    friendly_name text,
    token_length integer NOT NULL,
    CONSTRAINT authentik_stages_authen_token_count_72138a40_check CHECK ((token_count >= 0)),
    CONSTRAINT authentik_stages_authenticator_static_authen_token_length_check CHECK ((token_length >= 0))
);
ALTER TABLE public.authentik_stages_authenticator_static_authenticatorstaticstage OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_static_staticdevice; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_static_staticdevice (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    confirmed boolean NOT NULL,
    user_id integer NOT NULL,
    throttling_failure_count integer NOT NULL,
    throttling_failure_timestamp timestamp with time zone,
    CONSTRAINT authentik_stages_authenticator_s_throttling_failure_count_check CHECK ((throttling_failure_count >= 0))
);
ALTER TABLE public.authentik_stages_authenticator_static_staticdevice OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_static_staticdevice_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_authenticator_static_staticdevice
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_authenticator_static_staticdevice_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_authenticator_static_statictoken; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_static_statictoken (
    id integer NOT NULL,
    token character varying(16) NOT NULL,
    device_id integer NOT NULL
);
ALTER TABLE public.authentik_stages_authenticator_static_statictoken OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_static_statictoken_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_authenticator_static_statictoken
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_authenticator_static_statictoken_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_authenticator_totp_authenticatortotpstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_totp_authenticatortotpstage (
    stage_ptr_id uuid NOT NULL,
    digits integer NOT NULL,
    configure_flow_id uuid,
    friendly_name text
);
ALTER TABLE public.authentik_stages_authenticator_totp_authenticatortotpstage OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_totp_totpdevice; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_totp_totpdevice (
    id integer NOT NULL,
    name character varying(64) NOT NULL,
    confirmed boolean NOT NULL,
    key character varying(80) NOT NULL,
    step smallint NOT NULL,
    t0 bigint NOT NULL,
    digits smallint NOT NULL,
    tolerance smallint NOT NULL,
    drift smallint NOT NULL,
    last_t bigint NOT NULL,
    user_id integer NOT NULL,
    throttling_failure_count integer NOT NULL,
    throttling_failure_timestamp timestamp with time zone,
    CONSTRAINT authentik_stages_authenticator_t_throttling_failure_count_check CHECK ((throttling_failure_count >= 0)),
    CONSTRAINT authentik_stages_authenticator_totp_totpdevice_digits_check CHECK ((digits >= 0)),
    CONSTRAINT authentik_stages_authenticator_totp_totpdevice_step_check CHECK ((step >= 0)),
    CONSTRAINT authentik_stages_authenticator_totp_totpdevice_tolerance_check CHECK ((tolerance >= 0))
);
ALTER TABLE public.authentik_stages_authenticator_totp_totpdevice OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_totp_totpdevice_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_authenticator_totp_totpdevice
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_authenticator_totp_totpdevice_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida3e25; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_validate_authenticatorvalida3e25 (
    id integer NOT NULL,
    authenticatorvalidatestage_id uuid NOT NULL,
    stage_id uuid NOT NULL
);
ALTER TABLE public.authentik_stages_authenticator_validate_authenticatorvalida3e25 OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_validate_authenticatorval_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_authenticator_validate_authenticatorvalida3e25
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_authenticator_validate_authenticatorval_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida499c; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_validate_authenticatorvalida499c (
    stage_ptr_id uuid NOT NULL,
    not_configured_action text NOT NULL,
    device_classes text [] NOT NULL,
    last_auth_threshold text NOT NULL,
    webauthn_user_verification text NOT NULL
);
ALTER TABLE public.authentik_stages_authenticator_validate_authenticatorvalida499c OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_webauthn_authenticatewebauth4bbe; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_webauthn_authenticatewebauth4bbe (
    stage_ptr_id uuid NOT NULL,
    configure_flow_id uuid,
    user_verification text NOT NULL,
    authenticator_attachment text,
    resident_key_requirement text NOT NULL,
    friendly_name text
);
ALTER TABLE public.authentik_stages_authenticator_webauthn_authenticatewebauth4bbe OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_webauthn_webauthndevice; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_authenticator_webauthn_webauthndevice (
    id integer NOT NULL,
    name text NOT NULL,
    credential_id text NOT NULL,
    public_key text NOT NULL,
    sign_count integer NOT NULL,
    rp_id character varying(253) NOT NULL,
    created_on timestamp with time zone NOT NULL,
    last_t timestamp with time zone NOT NULL,
    user_id integer NOT NULL,
    confirmed boolean NOT NULL
);
ALTER TABLE public.authentik_stages_authenticator_webauthn_webauthndevice OWNER TO authentik;
--
-- Name: authentik_stages_authenticator_webauthn_webauthndevice_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_authenticator_webauthn_webauthndevice
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_authenticator_webauthn_webauthndevice_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_captcha_captchastage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_captcha_captchastage (
    stage_ptr_id uuid NOT NULL,
    public_key text NOT NULL,
    private_key text NOT NULL,
    api_url text NOT NULL,
    js_url text NOT NULL
);
ALTER TABLE public.authentik_stages_captcha_captchastage OWNER TO authentik;
--
-- Name: authentik_stages_consent_consentstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_consent_consentstage (
    stage_ptr_id uuid NOT NULL,
    consent_expire_in text NOT NULL,
    mode text NOT NULL
);
ALTER TABLE public.authentik_stages_consent_consentstage OWNER TO authentik;
--
-- Name: authentik_stages_consent_userconsent; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_consent_userconsent (
    id integer NOT NULL,
    expires timestamp with time zone NOT NULL,
    expiring boolean NOT NULL,
    application_id uuid NOT NULL,
    user_id integer NOT NULL,
    permissions text NOT NULL
);
ALTER TABLE public.authentik_stages_consent_userconsent OWNER TO authentik;
--
-- Name: authentik_stages_consent_userconsent_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_consent_userconsent
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_consent_userconsent_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_deny_denystage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_deny_denystage (
    stage_ptr_id uuid NOT NULL,
    deny_message text NOT NULL
);
ALTER TABLE public.authentik_stages_deny_denystage OWNER TO authentik;
--
-- Name: authentik_stages_dummy_dummystage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_dummy_dummystage (
    stage_ptr_id uuid NOT NULL,
    throw_error boolean NOT NULL
);
ALTER TABLE public.authentik_stages_dummy_dummystage OWNER TO authentik;
--
-- Name: authentik_stages_email_emailstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_email_emailstage (
    stage_ptr_id uuid NOT NULL,
    host text NOT NULL,
    port integer NOT NULL,
    username text NOT NULL,
    password text NOT NULL,
    use_tls boolean NOT NULL,
    use_ssl boolean NOT NULL,
    timeout integer NOT NULL,
    from_address character varying(254) NOT NULL,
    token_expiry integer NOT NULL,
    subject text NOT NULL,
    template text NOT NULL,
    use_global_settings boolean NOT NULL,
    activate_user_on_success boolean NOT NULL
);
ALTER TABLE public.authentik_stages_email_emailstage OWNER TO authentik;
--
-- Name: authentik_stages_identification_identificationstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_identification_identificationstage (
    stage_ptr_id uuid NOT NULL,
    user_fields character varying(100) [] NOT NULL,
    enrollment_flow_id uuid,
    recovery_flow_id uuid,
    case_insensitive_matching boolean NOT NULL,
    show_matched_user boolean NOT NULL,
    password_stage_id uuid,
    show_source_labels boolean NOT NULL,
    passwordless_flow_id uuid
);
ALTER TABLE public.authentik_stages_identification_identificationstage OWNER TO authentik;
--
-- Name: authentik_stages_identification_identificationstage_sources; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_identification_identificationstage_sources (
    id integer NOT NULL,
    identificationstage_id uuid NOT NULL,
    source_id uuid NOT NULL
);
ALTER TABLE public.authentik_stages_identification_identificationstage_sources OWNER TO authentik;
--
-- Name: authentik_stages_identification_identificationstage_sour_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_identification_identificationstage_sources
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_identification_identificationstage_sour_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_invitation_invitation; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_invitation_invitation (
    invite_uuid uuid NOT NULL,
    expires timestamp with time zone NOT NULL,
    fixed_data jsonb NOT NULL,
    created_by_id integer NOT NULL,
    single_use boolean NOT NULL,
    expiring boolean NOT NULL,
    name character varying(50) NOT NULL,
    flow_id uuid
);
ALTER TABLE public.authentik_stages_invitation_invitation OWNER TO authentik;
--
-- Name: authentik_stages_invitation_invitationstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_invitation_invitationstage (
    stage_ptr_id uuid NOT NULL,
    continue_flow_without_invitation boolean NOT NULL
);
ALTER TABLE public.authentik_stages_invitation_invitationstage OWNER TO authentik;
--
-- Name: authentik_stages_password_passwordstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_password_passwordstage (
    stage_ptr_id uuid NOT NULL,
    backends text [] NOT NULL,
    configure_flow_id uuid,
    failed_attempts_before_cancel integer NOT NULL
);
ALTER TABLE public.authentik_stages_password_passwordstage OWNER TO authentik;
--
-- Name: authentik_stages_prompt_prompt; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_prompt_prompt (
    prompt_uuid uuid NOT NULL,
    field_key text NOT NULL,
    label text NOT NULL,
    type character varying(100) NOT NULL,
    required boolean NOT NULL,
    placeholder text NOT NULL,
    "order" integer NOT NULL,
    sub_text text NOT NULL,
    placeholder_expression boolean NOT NULL,
    name text NOT NULL,
    initial_value text NOT NULL,
    initial_value_expression boolean NOT NULL
);
ALTER TABLE public.authentik_stages_prompt_prompt OWNER TO authentik;
--
-- Name: authentik_stages_prompt_promptstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_prompt_promptstage (stage_ptr_id uuid NOT NULL);
ALTER TABLE public.authentik_stages_prompt_promptstage OWNER TO authentik;
--
-- Name: authentik_stages_prompt_promptstage_fields; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_prompt_promptstage_fields (
    id integer NOT NULL,
    promptstage_id uuid NOT NULL,
    prompt_id uuid NOT NULL
);
ALTER TABLE public.authentik_stages_prompt_promptstage_fields OWNER TO authentik;
--
-- Name: authentik_stages_prompt_promptstage_fields_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_prompt_promptstage_fields
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_prompt_promptstage_fields_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_prompt_promptstage_validation_policies; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_prompt_promptstage_validation_policies (
    id integer NOT NULL,
    promptstage_id uuid NOT NULL,
    policy_id uuid NOT NULL
);
ALTER TABLE public.authentik_stages_prompt_promptstage_validation_policies OWNER TO authentik;
--
-- Name: authentik_stages_prompt_promptstage_validation_policies_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.authentik_stages_prompt_promptstage_validation_policies
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authentik_stages_prompt_promptstage_validation_policies_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: authentik_stages_user_delete_userdeletestage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_user_delete_userdeletestage (stage_ptr_id uuid NOT NULL);
ALTER TABLE public.authentik_stages_user_delete_userdeletestage OWNER TO authentik;
--
-- Name: authentik_stages_user_login_userloginstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_user_login_userloginstage (
    stage_ptr_id uuid NOT NULL,
    session_duration text NOT NULL,
    terminate_other_sessions boolean NOT NULL,
    remember_me_offset text NOT NULL
);
ALTER TABLE public.authentik_stages_user_login_userloginstage OWNER TO authentik;
--
-- Name: authentik_stages_user_logout_userlogoutstage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_user_logout_userlogoutstage (stage_ptr_id uuid NOT NULL);
ALTER TABLE public.authentik_stages_user_logout_userlogoutstage OWNER TO authentik;
--
-- Name: authentik_stages_user_write_userwritestage; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_stages_user_write_userwritestage (
    stage_ptr_id uuid NOT NULL,
    create_users_as_inactive boolean NOT NULL,
    create_users_group_id uuid,
    user_path_template text NOT NULL,
    user_creation_mode text NOT NULL,
    user_type text NOT NULL
);
ALTER TABLE public.authentik_stages_user_write_userwritestage OWNER TO authentik;
--
-- Name: authentik_tenants_tenant; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.authentik_tenants_tenant (
    tenant_uuid uuid NOT NULL,
    domain text NOT NULL,
    "default" boolean NOT NULL,
    branding_title text NOT NULL,
    branding_logo text NOT NULL,
    flow_authentication_id uuid,
    flow_invalidation_id uuid,
    flow_recovery_id uuid,
    flow_unenrollment_id uuid,
    branding_favicon text NOT NULL,
    event_retention text NOT NULL,
    web_certificate_id uuid,
    flow_user_settings_id uuid,
    attributes jsonb NOT NULL,
    flow_device_code_id uuid
);
ALTER TABLE public.authentik_tenants_tenant OWNER TO authentik;
--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);
ALTER TABLE public.django_content_type OWNER TO authentik;
--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.django_content_type
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.django_content_type_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.django_migrations (
    id integer NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);
ALTER TABLE public.django_migrations OWNER TO authentik;
--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.django_migrations
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.django_migrations_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: django_session; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);
ALTER TABLE public.django_session OWNER TO authentik;
--
-- Name: guardian_groupobjectpermission; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.guardian_groupobjectpermission (
    id integer NOT NULL,
    object_pk character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);
ALTER TABLE public.guardian_groupobjectpermission OWNER TO authentik;
--
-- Name: guardian_groupobjectpermission_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.guardian_groupobjectpermission
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.guardian_groupobjectpermission_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Name: guardian_userobjectpermission; Type: TABLE; Schema: public; Owner: authentik
--

CREATE TABLE public.guardian_userobjectpermission (
    id integer NOT NULL,
    object_pk character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    permission_id integer NOT NULL,
    user_id integer NOT NULL
);
ALTER TABLE public.guardian_userobjectpermission OWNER TO authentik;
--
-- Name: guardian_userobjectpermission_id_seq; Type: SEQUENCE; Schema: public; Owner: authentik
--

ALTER TABLE public.guardian_userobjectpermission
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.guardian_userobjectpermission_id_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
    );
--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.auth_permission
VALUES (1, 'Can add permission', 1, 'add_permission');
INSERT INTO public.auth_permission
VALUES (
        2,
        'Can change permission',
        1,
        'change_permission'
    );
INSERT INTO public.auth_permission
VALUES (
        3,
        'Can delete permission',
        1,
        'delete_permission'
    );
INSERT INTO public.auth_permission
VALUES (4, 'Can view permission', 1, 'view_permission');
INSERT INTO public.auth_permission
VALUES (5, 'Can add group', 2, 'add_group');
INSERT INTO public.auth_permission
VALUES (6, 'Can change group', 2, 'change_group');
INSERT INTO public.auth_permission
VALUES (7, 'Can delete group', 2, 'delete_group');
INSERT INTO public.auth_permission
VALUES (8, 'Can view group', 2, 'view_group');
INSERT INTO public.auth_permission
VALUES (9, 'Can add content type', 3, 'add_contenttype');
INSERT INTO public.auth_permission
VALUES (
        10,
        'Can change content type',
        3,
        'change_contenttype'
    );
INSERT INTO public.auth_permission
VALUES (
        11,
        'Can delete content type',
        3,
        'delete_contenttype'
    );
INSERT INTO public.auth_permission
VALUES (
        12,
        'Can view content type',
        3,
        'view_contenttype'
    );
INSERT INTO public.auth_permission
VALUES (13, 'Can add session', 4, 'add_session');
INSERT INTO public.auth_permission
VALUES (14, 'Can change session', 4, 'change_session');
INSERT INTO public.auth_permission
VALUES (15, 'Can delete session', 4, 'delete_session');
INSERT INTO public.auth_permission
VALUES (16, 'Can view session', 4, 'view_session');
INSERT INTO public.auth_permission
VALUES (
        17,
        'Can add Certificate-Key Pair',
        5,
        'add_certificatekeypair'
    );
INSERT INTO public.auth_permission
VALUES (
        18,
        'Can change Certificate-Key Pair',
        5,
        'change_certificatekeypair'
    );
INSERT INTO public.auth_permission
VALUES (
        19,
        'Can delete Certificate-Key Pair',
        5,
        'delete_certificatekeypair'
    );
INSERT INTO public.auth_permission
VALUES (
        20,
        'Can view Certificate-Key Pair',
        5,
        'view_certificatekeypair'
    );
INSERT INTO public.auth_permission
VALUES (21, 'Can add Event', 6, 'add_event');
INSERT INTO public.auth_permission
VALUES (22, 'Can change Event', 6, 'change_event');
INSERT INTO public.auth_permission
VALUES (23, 'Can delete Event', 6, 'delete_event');
INSERT INTO public.auth_permission
VALUES (24, 'Can view Event', 6, 'view_event');
INSERT INTO public.auth_permission
VALUES (
        25,
        'Can add Notification Transport',
        7,
        'add_notificationtransport'
    );
INSERT INTO public.auth_permission
VALUES (
        26,
        'Can change Notification Transport',
        7,
        'change_notificationtransport'
    );
INSERT INTO public.auth_permission
VALUES (
        27,
        'Can delete Notification Transport',
        7,
        'delete_notificationtransport'
    );
INSERT INTO public.auth_permission
VALUES (
        28,
        'Can view Notification Transport',
        7,
        'view_notificationtransport'
    );
INSERT INTO public.auth_permission
VALUES (
        29,
        'Can add Notification Rule',
        8,
        'add_notificationrule'
    );
INSERT INTO public.auth_permission
VALUES (
        30,
        'Can change Notification Rule',
        8,
        'change_notificationrule'
    );
INSERT INTO public.auth_permission
VALUES (
        31,
        'Can delete Notification Rule',
        8,
        'delete_notificationrule'
    );
INSERT INTO public.auth_permission
VALUES (
        32,
        'Can view Notification Rule',
        8,
        'view_notificationrule'
    );
INSERT INTO public.auth_permission
VALUES (
        33,
        'Can add Notification',
        9,
        'add_notification'
    );
INSERT INTO public.auth_permission
VALUES (
        34,
        'Can change Notification',
        9,
        'change_notification'
    );
INSERT INTO public.auth_permission
VALUES (
        35,
        'Can delete Notification',
        9,
        'delete_notification'
    );
INSERT INTO public.auth_permission
VALUES (
        36,
        'Can view Notification',
        9,
        'view_notification'
    );
INSERT INTO public.auth_permission
VALUES (
        37,
        'Can add Webhook Mapping',
        10,
        'add_notificationwebhookmapping'
    );
INSERT INTO public.auth_permission
VALUES (
        38,
        'Can change Webhook Mapping',
        10,
        'change_notificationwebhookmapping'
    );
INSERT INTO public.auth_permission
VALUES (
        39,
        'Can delete Webhook Mapping',
        10,
        'delete_notificationwebhookmapping'
    );
INSERT INTO public.auth_permission
VALUES (
        40,
        'Can view Webhook Mapping',
        10,
        'view_notificationwebhookmapping'
    );
INSERT INTO public.auth_permission
VALUES (41, 'Can add Flow', 11, 'add_flow');
INSERT INTO public.auth_permission
VALUES (42, 'Can change Flow', 11, 'change_flow');
INSERT INTO public.auth_permission
VALUES (43, 'Can delete Flow', 11, 'delete_flow');
INSERT INTO public.auth_permission
VALUES (44, 'Can view Flow', 11, 'view_flow');
INSERT INTO public.auth_permission
VALUES (45, 'Can export a Flow', 11, 'export_flow');
INSERT INTO public.auth_permission
VALUES (
        46,
        'Can inspect a Flow''s execution',
        11,
        'inspect_flow'
    );
INSERT INTO public.auth_permission
VALUES (
        47,
        'View Flow''s cache metrics',
        11,
        'view_flow_cache'
    );
INSERT INTO public.auth_permission
VALUES (
        48,
        'Clear Flow''s cache metrics',
        11,
        'clear_flow_cache'
    );
INSERT INTO public.auth_permission
VALUES (49, 'Can add stage', 12, 'add_stage');
INSERT INTO public.auth_permission
VALUES (50, 'Can change stage', 12, 'change_stage');
INSERT INTO public.auth_permission
VALUES (51, 'Can delete stage', 12, 'delete_stage');
INSERT INTO public.auth_permission
VALUES (52, 'Can view stage', 12, 'view_stage');
INSERT INTO public.auth_permission
VALUES (
        53,
        'Can add Flow Stage Binding',
        13,
        'add_flowstagebinding'
    );
INSERT INTO public.auth_permission
VALUES (
        54,
        'Can change Flow Stage Binding',
        13,
        'change_flowstagebinding'
    );
INSERT INTO public.auth_permission
VALUES (
        55,
        'Can delete Flow Stage Binding',
        13,
        'delete_flowstagebinding'
    );
INSERT INTO public.auth_permission
VALUES (
        56,
        'Can view Flow Stage Binding',
        13,
        'view_flowstagebinding'
    );
INSERT INTO public.auth_permission
VALUES (57, 'Can add Flow Token', 14, 'add_flowtoken');
INSERT INTO public.auth_permission
VALUES (
        58,
        'Can change Flow Token',
        14,
        'change_flowtoken'
    );
INSERT INTO public.auth_permission
VALUES (
        59,
        'Can delete Flow Token',
        14,
        'delete_flowtoken'
    );
INSERT INTO public.auth_permission
VALUES (60, 'Can view Flow Token', 14, 'view_flowtoken');
INSERT INTO public.auth_permission
VALUES (61, 'Can add Outpost', 15, 'add_outpost');
INSERT INTO public.auth_permission
VALUES (62, 'Can change Outpost', 15, 'change_outpost');
INSERT INTO public.auth_permission
VALUES (63, 'Can delete Outpost', 15, 'delete_outpost');
INSERT INTO public.auth_permission
VALUES (64, 'Can view Outpost', 15, 'view_outpost');
INSERT INTO public.auth_permission
VALUES (
        65,
        'Can add Outpost Service-Connection',
        16,
        'add_outpostserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        66,
        'Can change Outpost Service-Connection',
        16,
        'change_outpostserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        67,
        'Can delete Outpost Service-Connection',
        16,
        'delete_outpostserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        68,
        'Can view Outpost Service-Connection',
        16,
        'view_outpostserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        69,
        'Can add Docker Service-Connection',
        17,
        'add_dockerserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        70,
        'Can change Docker Service-Connection',
        17,
        'change_dockerserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        71,
        'Can delete Docker Service-Connection',
        17,
        'delete_dockerserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        72,
        'Can view Docker Service-Connection',
        17,
        'view_dockerserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        73,
        'Can add Kubernetes Service-Connection',
        18,
        'add_kubernetesserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        74,
        'Can change Kubernetes Service-Connection',
        18,
        'change_kubernetesserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        75,
        'Can delete Kubernetes Service-Connection',
        18,
        'delete_kubernetesserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        76,
        'Can view Kubernetes Service-Connection',
        18,
        'view_kubernetesserviceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        77,
        'Can add Dummy Policy',
        19,
        'add_dummypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        78,
        'Can change Dummy Policy',
        19,
        'change_dummypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        79,
        'Can delete Dummy Policy',
        19,
        'delete_dummypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        80,
        'Can view Dummy Policy',
        19,
        'view_dummypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        81,
        'Can add Event Matcher Policy',
        20,
        'add_eventmatcherpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        82,
        'Can change Event Matcher Policy',
        20,
        'change_eventmatcherpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        83,
        'Can delete Event Matcher Policy',
        20,
        'delete_eventmatcherpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        84,
        'Can view Event Matcher Policy',
        20,
        'view_eventmatcherpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        85,
        'Can add Password Expiry Policy',
        21,
        'add_passwordexpirypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        86,
        'Can change Password Expiry Policy',
        21,
        'change_passwordexpirypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        87,
        'Can delete Password Expiry Policy',
        21,
        'delete_passwordexpirypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        88,
        'Can view Password Expiry Policy',
        21,
        'view_passwordexpirypolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        89,
        'Can add Expression Policy',
        22,
        'add_expressionpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        90,
        'Can change Expression Policy',
        22,
        'change_expressionpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        91,
        'Can delete Expression Policy',
        22,
        'delete_expressionpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        92,
        'Can view Expression Policy',
        22,
        'view_expressionpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        93,
        'Can add Password Policy',
        23,
        'add_passwordpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        94,
        'Can change Password Policy',
        23,
        'change_passwordpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        95,
        'Can delete Password Policy',
        23,
        'delete_passwordpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        96,
        'Can view Password Policy',
        23,
        'view_passwordpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        97,
        'Can add Reputation Policy',
        24,
        'add_reputationpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        98,
        'Can change Reputation Policy',
        24,
        'change_reputationpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        99,
        'Can delete Reputation Policy',
        24,
        'delete_reputationpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        100,
        'Can view Reputation Policy',
        24,
        'view_reputationpolicy'
    );
INSERT INTO public.auth_permission
VALUES (
        101,
        'Can add Reputation Score',
        25,
        'add_reputation'
    );
INSERT INTO public.auth_permission
VALUES (
        102,
        'Can change Reputation Score',
        25,
        'change_reputation'
    );
INSERT INTO public.auth_permission
VALUES (
        103,
        'Can delete Reputation Score',
        25,
        'delete_reputation'
    );
INSERT INTO public.auth_permission
VALUES (
        104,
        'Can view Reputation Score',
        25,
        'view_reputation'
    );
INSERT INTO public.auth_permission
VALUES (105, 'Can add Policy', 26, 'add_policy');
INSERT INTO public.auth_permission
VALUES (106, 'Can change Policy', 26, 'change_policy');
INSERT INTO public.auth_permission
VALUES (107, 'Can delete Policy', 26, 'delete_policy');
INSERT INTO public.auth_permission
VALUES (108, 'Can view Policy', 26, 'view_policy');
INSERT INTO public.auth_permission
VALUES (
        109,
        'View Policy''s cache metrics',
        26,
        'view_policy_cache'
    );
INSERT INTO public.auth_permission
VALUES (
        110,
        'Clear Policy''s cache metrics',
        26,
        'clear_policy_cache'
    );
INSERT INTO public.auth_permission
VALUES (
        111,
        'Can add Policy Binding',
        27,
        'add_policybinding'
    );
INSERT INTO public.auth_permission
VALUES (
        112,
        'Can change Policy Binding',
        27,
        'change_policybinding'
    );
INSERT INTO public.auth_permission
VALUES (
        113,
        'Can delete Policy Binding',
        27,
        'delete_policybinding'
    );
INSERT INTO public.auth_permission
VALUES (
        114,
        'Can view Policy Binding',
        27,
        'view_policybinding'
    );
INSERT INTO public.auth_permission
VALUES (
        115,
        'Can add Policy Binding Model',
        28,
        'add_policybindingmodel'
    );
INSERT INTO public.auth_permission
VALUES (
        116,
        'Can change Policy Binding Model',
        28,
        'change_policybindingmodel'
    );
INSERT INTO public.auth_permission
VALUES (
        117,
        'Can delete Policy Binding Model',
        28,
        'delete_policybindingmodel'
    );
INSERT INTO public.auth_permission
VALUES (
        118,
        'Can view Policy Binding Model',
        28,
        'view_policybindingmodel'
    );
INSERT INTO public.auth_permission
VALUES (
        119,
        'Can add LDAP Provider',
        29,
        'add_ldapprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        120,
        'Can change LDAP Provider',
        29,
        'change_ldapprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        121,
        'Can delete LDAP Provider',
        29,
        'delete_ldapprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        122,
        'Can view LDAP Provider',
        29,
        'view_ldapprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        123,
        'Can add OAuth2/OpenID Provider',
        30,
        'add_oauth2provider'
    );
INSERT INTO public.auth_permission
VALUES (
        124,
        'Can change OAuth2/OpenID Provider',
        30,
        'change_oauth2provider'
    );
INSERT INTO public.auth_permission
VALUES (
        125,
        'Can delete OAuth2/OpenID Provider',
        30,
        'delete_oauth2provider'
    );
INSERT INTO public.auth_permission
VALUES (
        126,
        'Can view OAuth2/OpenID Provider',
        30,
        'view_oauth2provider'
    );
INSERT INTO public.auth_permission
VALUES (
        127,
        'Can add Scope Mapping',
        31,
        'add_scopemapping'
    );
INSERT INTO public.auth_permission
VALUES (
        128,
        'Can change Scope Mapping',
        31,
        'change_scopemapping'
    );
INSERT INTO public.auth_permission
VALUES (
        129,
        'Can delete Scope Mapping',
        31,
        'delete_scopemapping'
    );
INSERT INTO public.auth_permission
VALUES (
        130,
        'Can view Scope Mapping',
        31,
        'view_scopemapping'
    );
INSERT INTO public.auth_permission
VALUES (
        131,
        'Can add OAuth2 Refresh Token',
        32,
        'add_refreshtoken'
    );
INSERT INTO public.auth_permission
VALUES (
        132,
        'Can change OAuth2 Refresh Token',
        32,
        'change_refreshtoken'
    );
INSERT INTO public.auth_permission
VALUES (
        133,
        'Can delete OAuth2 Refresh Token',
        32,
        'delete_refreshtoken'
    );
INSERT INTO public.auth_permission
VALUES (
        134,
        'Can view OAuth2 Refresh Token',
        32,
        'view_refreshtoken'
    );
INSERT INTO public.auth_permission
VALUES (
        135,
        'Can add Authorization Code',
        33,
        'add_authorizationcode'
    );
INSERT INTO public.auth_permission
VALUES (
        136,
        'Can change Authorization Code',
        33,
        'change_authorizationcode'
    );
INSERT INTO public.auth_permission
VALUES (
        137,
        'Can delete Authorization Code',
        33,
        'delete_authorizationcode'
    );
INSERT INTO public.auth_permission
VALUES (
        138,
        'Can view Authorization Code',
        33,
        'view_authorizationcode'
    );
INSERT INTO public.auth_permission
VALUES (
        139,
        'Can add Device Token',
        34,
        'add_devicetoken'
    );
INSERT INTO public.auth_permission
VALUES (
        140,
        'Can change Device Token',
        34,
        'change_devicetoken'
    );
INSERT INTO public.auth_permission
VALUES (
        141,
        'Can delete Device Token',
        34,
        'delete_devicetoken'
    );
INSERT INTO public.auth_permission
VALUES (
        142,
        'Can view Device Token',
        34,
        'view_devicetoken'
    );
INSERT INTO public.auth_permission
VALUES (
        143,
        'Can add OAuth2 Access Token',
        35,
        'add_accesstoken'
    );
INSERT INTO public.auth_permission
VALUES (
        144,
        'Can change OAuth2 Access Token',
        35,
        'change_accesstoken'
    );
INSERT INTO public.auth_permission
VALUES (
        145,
        'Can delete OAuth2 Access Token',
        35,
        'delete_accesstoken'
    );
INSERT INTO public.auth_permission
VALUES (
        146,
        'Can view OAuth2 Access Token',
        35,
        'view_accesstoken'
    );
INSERT INTO public.auth_permission
VALUES (
        147,
        'Can add Proxy Provider',
        36,
        'add_proxyprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        148,
        'Can change Proxy Provider',
        36,
        'change_proxyprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        149,
        'Can delete Proxy Provider',
        36,
        'delete_proxyprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        150,
        'Can view Proxy Provider',
        36,
        'view_proxyprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        151,
        'Can add Radius Provider',
        37,
        'add_radiusprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        152,
        'Can change Radius Provider',
        37,
        'change_radiusprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        153,
        'Can delete Radius Provider',
        37,
        'delete_radiusprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        154,
        'Can view Radius Provider',
        37,
        'view_radiusprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        155,
        'Can add SAML Property Mapping',
        38,
        'add_samlpropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        156,
        'Can change SAML Property Mapping',
        38,
        'change_samlpropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        157,
        'Can delete SAML Property Mapping',
        38,
        'delete_samlpropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        158,
        'Can view SAML Property Mapping',
        38,
        'view_samlpropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        159,
        'Can add SAML Provider',
        39,
        'add_samlprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        160,
        'Can change SAML Provider',
        39,
        'change_samlprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        161,
        'Can delete SAML Provider',
        39,
        'delete_samlprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        162,
        'Can view SAML Provider',
        39,
        'view_samlprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        163,
        'Can add SCIM Mapping',
        40,
        'add_scimmapping'
    );
INSERT INTO public.auth_permission
VALUES (
        164,
        'Can change SCIM Mapping',
        40,
        'change_scimmapping'
    );
INSERT INTO public.auth_permission
VALUES (
        165,
        'Can delete SCIM Mapping',
        40,
        'delete_scimmapping'
    );
INSERT INTO public.auth_permission
VALUES (
        166,
        'Can view SCIM Mapping',
        40,
        'view_scimmapping'
    );
INSERT INTO public.auth_permission
VALUES (
        167,
        'Can add SCIM Provider',
        41,
        'add_scimprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        168,
        'Can change SCIM Provider',
        41,
        'change_scimprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        169,
        'Can delete SCIM Provider',
        41,
        'delete_scimprovider'
    );
INSERT INTO public.auth_permission
VALUES (
        170,
        'Can view SCIM Provider',
        41,
        'view_scimprovider'
    );
INSERT INTO public.auth_permission
VALUES (171, 'Can add scim user', 42, 'add_scimuser');
INSERT INTO public.auth_permission
VALUES (
        172,
        'Can change scim user',
        42,
        'change_scimuser'
    );
INSERT INTO public.auth_permission
VALUES (
        173,
        'Can delete scim user',
        42,
        'delete_scimuser'
    );
INSERT INTO public.auth_permission
VALUES (174, 'Can view scim user', 42, 'view_scimuser');
INSERT INTO public.auth_permission
VALUES (175, 'Can add scim group', 43, 'add_scimgroup');
INSERT INTO public.auth_permission
VALUES (
        176,
        'Can change scim group',
        43,
        'change_scimgroup'
    );
INSERT INTO public.auth_permission
VALUES (
        177,
        'Can delete scim group',
        43,
        'delete_scimgroup'
    );
INSERT INTO public.auth_permission
VALUES (178, 'Can view scim group', 43, 'view_scimgroup');
INSERT INTO public.auth_permission
VALUES (179, 'Can add Role', 44, 'add_role');
INSERT INTO public.auth_permission
VALUES (180, 'Can change Role', 44, 'change_role');
INSERT INTO public.auth_permission
VALUES (181, 'Can delete Role', 44, 'delete_role');
INSERT INTO public.auth_permission
VALUES (182, 'Can view Role', 44, 'view_role');
INSERT INTO public.auth_permission
VALUES (
        183,
        'Can assign permissions to users',
        44,
        'assign_role_permissions'
    );
INSERT INTO public.auth_permission
VALUES (
        184,
        'Can unassign permissions from users',
        44,
        'unassign_role_permissions'
    );
INSERT INTO public.auth_permission
VALUES (
        185,
        'Can view system info',
        45,
        'view_system_info'
    );
INSERT INTO public.auth_permission
VALUES (
        186,
        'Can view system tasks',
        45,
        'view_system_tasks'
    );
INSERT INTO public.auth_permission
VALUES (
        187,
        'Can run system tasks',
        45,
        'run_system_tasks'
    );
INSERT INTO public.auth_permission
VALUES (
        188,
        'Can access admin interface',
        45,
        'access_admin_interface'
    );
INSERT INTO public.auth_permission
VALUES (
        189,
        'Can add LDAP Property Mapping',
        46,
        'add_ldappropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        190,
        'Can change LDAP Property Mapping',
        46,
        'change_ldappropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        191,
        'Can delete LDAP Property Mapping',
        46,
        'delete_ldappropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        192,
        'Can view LDAP Property Mapping',
        46,
        'view_ldappropertymapping'
    );
INSERT INTO public.auth_permission
VALUES (193, 'Can add LDAP Source', 47, 'add_ldapsource');
INSERT INTO public.auth_permission
VALUES (
        194,
        'Can change LDAP Source',
        47,
        'change_ldapsource'
    );
INSERT INTO public.auth_permission
VALUES (
        195,
        'Can delete LDAP Source',
        47,
        'delete_ldapsource'
    );
INSERT INTO public.auth_permission
VALUES (
        196,
        'Can view LDAP Source',
        47,
        'view_ldapsource'
    );
INSERT INTO public.auth_permission
VALUES (
        197,
        'Can add OAuth Source',
        48,
        'add_oauthsource'
    );
INSERT INTO public.auth_permission
VALUES (
        198,
        'Can change OAuth Source',
        48,
        'change_oauthsource'
    );
INSERT INTO public.auth_permission
VALUES (
        199,
        'Can delete OAuth Source',
        48,
        'delete_oauthsource'
    );
INSERT INTO public.auth_permission
VALUES (
        200,
        'Can view OAuth Source',
        48,
        'view_oauthsource'
    );
INSERT INTO public.auth_permission
VALUES (
        201,
        'Can add User OAuth Source Connection',
        49,
        'add_useroauthsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        202,
        'Can change User OAuth Source Connection',
        49,
        'change_useroauthsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        203,
        'Can delete User OAuth Source Connection',
        49,
        'delete_useroauthsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        204,
        'Can view User OAuth Source Connection',
        49,
        'view_useroauthsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (205, 'Can add Plex Source', 50, 'add_plexsource');
INSERT INTO public.auth_permission
VALUES (
        206,
        'Can change Plex Source',
        50,
        'change_plexsource'
    );
INSERT INTO public.auth_permission
VALUES (
        207,
        'Can delete Plex Source',
        50,
        'delete_plexsource'
    );
INSERT INTO public.auth_permission
VALUES (
        208,
        'Can view Plex Source',
        50,
        'view_plexsource'
    );
INSERT INTO public.auth_permission
VALUES (
        209,
        'Can add User Plex Source Connection',
        51,
        'add_plexsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        210,
        'Can change User Plex Source Connection',
        51,
        'change_plexsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        211,
        'Can delete User Plex Source Connection',
        51,
        'delete_plexsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        212,
        'Can view User Plex Source Connection',
        51,
        'view_plexsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (213, 'Can add SAML Source', 52, 'add_samlsource');
INSERT INTO public.auth_permission
VALUES (
        214,
        'Can change SAML Source',
        52,
        'change_samlsource'
    );
INSERT INTO public.auth_permission
VALUES (
        215,
        'Can delete SAML Source',
        52,
        'delete_samlsource'
    );
INSERT INTO public.auth_permission
VALUES (
        216,
        'Can view SAML Source',
        52,
        'view_samlsource'
    );
INSERT INTO public.auth_permission
VALUES (
        217,
        'Can add User SAML Source Connection',
        53,
        'add_usersamlsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        218,
        'Can change User SAML Source Connection',
        53,
        'change_usersamlsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        219,
        'Can delete User SAML Source Connection',
        53,
        'delete_usersamlsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        220,
        'Can view User SAML Source Connection',
        53,
        'view_usersamlsourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        221,
        'Can add Duo Authenticator Setup Stage',
        54,
        'add_authenticatorduostage'
    );
INSERT INTO public.auth_permission
VALUES (
        222,
        'Can change Duo Authenticator Setup Stage',
        54,
        'change_authenticatorduostage'
    );
INSERT INTO public.auth_permission
VALUES (
        223,
        'Can delete Duo Authenticator Setup Stage',
        54,
        'delete_authenticatorduostage'
    );
INSERT INTO public.auth_permission
VALUES (
        224,
        'Can view Duo Authenticator Setup Stage',
        54,
        'view_authenticatorduostage'
    );
INSERT INTO public.auth_permission
VALUES (225, 'Can add Duo Device', 55, 'add_duodevice');
INSERT INTO public.auth_permission
VALUES (
        226,
        'Can change Duo Device',
        55,
        'change_duodevice'
    );
INSERT INTO public.auth_permission
VALUES (
        227,
        'Can delete Duo Device',
        55,
        'delete_duodevice'
    );
INSERT INTO public.auth_permission
VALUES (228, 'Can view Duo Device', 55, 'view_duodevice');
INSERT INTO public.auth_permission
VALUES (
        229,
        'Can add SMS Authenticator Setup Stage',
        56,
        'add_authenticatorsmsstage'
    );
INSERT INTO public.auth_permission
VALUES (
        230,
        'Can change SMS Authenticator Setup Stage',
        56,
        'change_authenticatorsmsstage'
    );
INSERT INTO public.auth_permission
VALUES (
        231,
        'Can delete SMS Authenticator Setup Stage',
        56,
        'delete_authenticatorsmsstage'
    );
INSERT INTO public.auth_permission
VALUES (
        232,
        'Can view SMS Authenticator Setup Stage',
        56,
        'view_authenticatorsmsstage'
    );
INSERT INTO public.auth_permission
VALUES (233, 'Can add SMS Device', 57, 'add_smsdevice');
INSERT INTO public.auth_permission
VALUES (
        234,
        'Can change SMS Device',
        57,
        'change_smsdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        235,
        'Can delete SMS Device',
        57,
        'delete_smsdevice'
    );
INSERT INTO public.auth_permission
VALUES (236, 'Can view SMS Device', 57, 'view_smsdevice');
INSERT INTO public.auth_permission
VALUES (
        237,
        'Can add Static Authenticator Stage',
        58,
        'add_authenticatorstaticstage'
    );
INSERT INTO public.auth_permission
VALUES (
        238,
        'Can change Static Authenticator Stage',
        58,
        'change_authenticatorstaticstage'
    );
INSERT INTO public.auth_permission
VALUES (
        239,
        'Can delete Static Authenticator Stage',
        58,
        'delete_authenticatorstaticstage'
    );
INSERT INTO public.auth_permission
VALUES (
        240,
        'Can view Static Authenticator Stage',
        58,
        'view_authenticatorstaticstage'
    );
INSERT INTO public.auth_permission
VALUES (
        241,
        'Can add Static Device',
        59,
        'add_staticdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        242,
        'Can change Static Device',
        59,
        'change_staticdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        243,
        'Can delete Static Device',
        59,
        'delete_staticdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        244,
        'Can view Static Device',
        59,
        'view_staticdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        245,
        'Can add Static Token',
        60,
        'add_statictoken'
    );
INSERT INTO public.auth_permission
VALUES (
        246,
        'Can change Static Token',
        60,
        'change_statictoken'
    );
INSERT INTO public.auth_permission
VALUES (
        247,
        'Can delete Static Token',
        60,
        'delete_statictoken'
    );
INSERT INTO public.auth_permission
VALUES (
        248,
        'Can view Static Token',
        60,
        'view_statictoken'
    );
INSERT INTO public.auth_permission
VALUES (
        249,
        'Can add TOTP Authenticator Setup Stage',
        61,
        'add_authenticatortotpstage'
    );
INSERT INTO public.auth_permission
VALUES (
        250,
        'Can change TOTP Authenticator Setup Stage',
        61,
        'change_authenticatortotpstage'
    );
INSERT INTO public.auth_permission
VALUES (
        251,
        'Can delete TOTP Authenticator Setup Stage',
        61,
        'delete_authenticatortotpstage'
    );
INSERT INTO public.auth_permission
VALUES (
        252,
        'Can view TOTP Authenticator Setup Stage',
        61,
        'view_authenticatortotpstage'
    );
INSERT INTO public.auth_permission
VALUES (253, 'Can add TOTP Device', 62, 'add_totpdevice');
INSERT INTO public.auth_permission
VALUES (
        254,
        'Can change TOTP Device',
        62,
        'change_totpdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        255,
        'Can delete TOTP Device',
        62,
        'delete_totpdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        256,
        'Can view TOTP Device',
        62,
        'view_totpdevice'
    );
INSERT INTO public.auth_permission
VALUES (
        257,
        'Can add Authenticator Validation Stage',
        63,
        'add_authenticatorvalidatestage'
    );
INSERT INTO public.auth_permission
VALUES (
        258,
        'Can change Authenticator Validation Stage',
        63,
        'change_authenticatorvalidatestage'
    );
INSERT INTO public.auth_permission
VALUES (
        259,
        'Can delete Authenticator Validation Stage',
        63,
        'delete_authenticatorvalidatestage'
    );
INSERT INTO public.auth_permission
VALUES (
        260,
        'Can view Authenticator Validation Stage',
        63,
        'view_authenticatorvalidatestage'
    );
INSERT INTO public.auth_permission
VALUES (
        261,
        'Can add WebAuthn Device',
        64,
        'add_webauthndevice'
    );
INSERT INTO public.auth_permission
VALUES (
        262,
        'Can change WebAuthn Device',
        64,
        'change_webauthndevice'
    );
INSERT INTO public.auth_permission
VALUES (
        263,
        'Can delete WebAuthn Device',
        64,
        'delete_webauthndevice'
    );
INSERT INTO public.auth_permission
VALUES (
        264,
        'Can view WebAuthn Device',
        64,
        'view_webauthndevice'
    );
INSERT INTO public.auth_permission
VALUES (
        265,
        'Can add WebAuthn Authenticator Setup Stage',
        65,
        'add_authenticatewebauthnstage'
    );
INSERT INTO public.auth_permission
VALUES (
        266,
        'Can change WebAuthn Authenticator Setup Stage',
        65,
        'change_authenticatewebauthnstage'
    );
INSERT INTO public.auth_permission
VALUES (
        267,
        'Can delete WebAuthn Authenticator Setup Stage',
        65,
        'delete_authenticatewebauthnstage'
    );
INSERT INTO public.auth_permission
VALUES (
        268,
        'Can view WebAuthn Authenticator Setup Stage',
        65,
        'view_authenticatewebauthnstage'
    );
INSERT INTO public.auth_permission
VALUES (
        269,
        'Can add Captcha Stage',
        66,
        'add_captchastage'
    );
INSERT INTO public.auth_permission
VALUES (
        270,
        'Can change Captcha Stage',
        66,
        'change_captchastage'
    );
INSERT INTO public.auth_permission
VALUES (
        271,
        'Can delete Captcha Stage',
        66,
        'delete_captchastage'
    );
INSERT INTO public.auth_permission
VALUES (
        272,
        'Can view Captcha Stage',
        66,
        'view_captchastage'
    );
INSERT INTO public.auth_permission
VALUES (
        273,
        'Can add Consent Stage',
        67,
        'add_consentstage'
    );
INSERT INTO public.auth_permission
VALUES (
        274,
        'Can change Consent Stage',
        67,
        'change_consentstage'
    );
INSERT INTO public.auth_permission
VALUES (
        275,
        'Can delete Consent Stage',
        67,
        'delete_consentstage'
    );
INSERT INTO public.auth_permission
VALUES (
        276,
        'Can view Consent Stage',
        67,
        'view_consentstage'
    );
INSERT INTO public.auth_permission
VALUES (
        277,
        'Can add User Consent',
        68,
        'add_userconsent'
    );
INSERT INTO public.auth_permission
VALUES (
        278,
        'Can change User Consent',
        68,
        'change_userconsent'
    );
INSERT INTO public.auth_permission
VALUES (
        279,
        'Can delete User Consent',
        68,
        'delete_userconsent'
    );
INSERT INTO public.auth_permission
VALUES (
        280,
        'Can view User Consent',
        68,
        'view_userconsent'
    );
INSERT INTO public.auth_permission
VALUES (281, 'Can add Deny Stage', 69, 'add_denystage');
INSERT INTO public.auth_permission
VALUES (
        282,
        'Can change Deny Stage',
        69,
        'change_denystage'
    );
INSERT INTO public.auth_permission
VALUES (
        283,
        'Can delete Deny Stage',
        69,
        'delete_denystage'
    );
INSERT INTO public.auth_permission
VALUES (284, 'Can view Deny Stage', 69, 'view_denystage');
INSERT INTO public.auth_permission
VALUES (285, 'Can add Dummy Stage', 70, 'add_dummystage');
INSERT INTO public.auth_permission
VALUES (
        286,
        'Can change Dummy Stage',
        70,
        'change_dummystage'
    );
INSERT INTO public.auth_permission
VALUES (
        287,
        'Can delete Dummy Stage',
        70,
        'delete_dummystage'
    );
INSERT INTO public.auth_permission
VALUES (
        288,
        'Can view Dummy Stage',
        70,
        'view_dummystage'
    );
INSERT INTO public.auth_permission
VALUES (289, 'Can add Email Stage', 71, 'add_emailstage');
INSERT INTO public.auth_permission
VALUES (
        290,
        'Can change Email Stage',
        71,
        'change_emailstage'
    );
INSERT INTO public.auth_permission
VALUES (
        291,
        'Can delete Email Stage',
        71,
        'delete_emailstage'
    );
INSERT INTO public.auth_permission
VALUES (
        292,
        'Can view Email Stage',
        71,
        'view_emailstage'
    );
INSERT INTO public.auth_permission
VALUES (
        293,
        'Can add Identification Stage',
        72,
        'add_identificationstage'
    );
INSERT INTO public.auth_permission
VALUES (
        294,
        'Can change Identification Stage',
        72,
        'change_identificationstage'
    );
INSERT INTO public.auth_permission
VALUES (
        295,
        'Can delete Identification Stage',
        72,
        'delete_identificationstage'
    );
INSERT INTO public.auth_permission
VALUES (
        296,
        'Can view Identification Stage',
        72,
        'view_identificationstage'
    );
INSERT INTO public.auth_permission
VALUES (
        297,
        'Can add Invitation Stage',
        73,
        'add_invitationstage'
    );
INSERT INTO public.auth_permission
VALUES (
        298,
        'Can change Invitation Stage',
        73,
        'change_invitationstage'
    );
INSERT INTO public.auth_permission
VALUES (
        299,
        'Can delete Invitation Stage',
        73,
        'delete_invitationstage'
    );
INSERT INTO public.auth_permission
VALUES (
        300,
        'Can view Invitation Stage',
        73,
        'view_invitationstage'
    );
INSERT INTO public.auth_permission
VALUES (301, 'Can add Invitation', 74, 'add_invitation');
INSERT INTO public.auth_permission
VALUES (
        302,
        'Can change Invitation',
        74,
        'change_invitation'
    );
INSERT INTO public.auth_permission
VALUES (
        303,
        'Can delete Invitation',
        74,
        'delete_invitation'
    );
INSERT INTO public.auth_permission
VALUES (
        304,
        'Can view Invitation',
        74,
        'view_invitation'
    );
INSERT INTO public.auth_permission
VALUES (
        305,
        'Can add Password Stage',
        75,
        'add_passwordstage'
    );
INSERT INTO public.auth_permission
VALUES (
        306,
        'Can change Password Stage',
        75,
        'change_passwordstage'
    );
INSERT INTO public.auth_permission
VALUES (
        307,
        'Can delete Password Stage',
        75,
        'delete_passwordstage'
    );
INSERT INTO public.auth_permission
VALUES (
        308,
        'Can view Password Stage',
        75,
        'view_passwordstage'
    );
INSERT INTO public.auth_permission
VALUES (309, 'Can add Prompt', 76, 'add_prompt');
INSERT INTO public.auth_permission
VALUES (310, 'Can change Prompt', 76, 'change_prompt');
INSERT INTO public.auth_permission
VALUES (311, 'Can delete Prompt', 76, 'delete_prompt');
INSERT INTO public.auth_permission
VALUES (312, 'Can view Prompt', 76, 'view_prompt');
INSERT INTO public.auth_permission
VALUES (
        313,
        'Can add Prompt Stage',
        77,
        'add_promptstage'
    );
INSERT INTO public.auth_permission
VALUES (
        314,
        'Can change Prompt Stage',
        77,
        'change_promptstage'
    );
INSERT INTO public.auth_permission
VALUES (
        315,
        'Can delete Prompt Stage',
        77,
        'delete_promptstage'
    );
INSERT INTO public.auth_permission
VALUES (
        316,
        'Can view Prompt Stage',
        77,
        'view_promptstage'
    );
INSERT INTO public.auth_permission
VALUES (
        317,
        'Can add User Delete Stage',
        78,
        'add_userdeletestage'
    );
INSERT INTO public.auth_permission
VALUES (
        318,
        'Can change User Delete Stage',
        78,
        'change_userdeletestage'
    );
INSERT INTO public.auth_permission
VALUES (
        319,
        'Can delete User Delete Stage',
        78,
        'delete_userdeletestage'
    );
INSERT INTO public.auth_permission
VALUES (
        320,
        'Can view User Delete Stage',
        78,
        'view_userdeletestage'
    );
INSERT INTO public.auth_permission
VALUES (
        321,
        'Can add User Login Stage',
        79,
        'add_userloginstage'
    );
INSERT INTO public.auth_permission
VALUES (
        322,
        'Can change User Login Stage',
        79,
        'change_userloginstage'
    );
INSERT INTO public.auth_permission
VALUES (
        323,
        'Can delete User Login Stage',
        79,
        'delete_userloginstage'
    );
INSERT INTO public.auth_permission
VALUES (
        324,
        'Can view User Login Stage',
        79,
        'view_userloginstage'
    );
INSERT INTO public.auth_permission
VALUES (
        325,
        'Can add User Logout Stage',
        80,
        'add_userlogoutstage'
    );
INSERT INTO public.auth_permission
VALUES (
        326,
        'Can change User Logout Stage',
        80,
        'change_userlogoutstage'
    );
INSERT INTO public.auth_permission
VALUES (
        327,
        'Can delete User Logout Stage',
        80,
        'delete_userlogoutstage'
    );
INSERT INTO public.auth_permission
VALUES (
        328,
        'Can view User Logout Stage',
        80,
        'view_userlogoutstage'
    );
INSERT INTO public.auth_permission
VALUES (
        329,
        'Can add User Write Stage',
        81,
        'add_userwritestage'
    );
INSERT INTO public.auth_permission
VALUES (
        330,
        'Can change User Write Stage',
        81,
        'change_userwritestage'
    );
INSERT INTO public.auth_permission
VALUES (
        331,
        'Can delete User Write Stage',
        81,
        'delete_userwritestage'
    );
INSERT INTO public.auth_permission
VALUES (
        332,
        'Can view User Write Stage',
        81,
        'view_userwritestage'
    );
INSERT INTO public.auth_permission
VALUES (333, 'Can add Tenant', 82, 'add_tenant');
INSERT INTO public.auth_permission
VALUES (334, 'Can change Tenant', 82, 'change_tenant');
INSERT INTO public.auth_permission
VALUES (335, 'Can delete Tenant', 82, 'delete_tenant');
INSERT INTO public.auth_permission
VALUES (336, 'Can view Tenant', 82, 'view_tenant');
INSERT INTO public.auth_permission
VALUES (
        337,
        'Can add Blueprint Instance',
        83,
        'add_blueprintinstance'
    );
INSERT INTO public.auth_permission
VALUES (
        338,
        'Can change Blueprint Instance',
        83,
        'change_blueprintinstance'
    );
INSERT INTO public.auth_permission
VALUES (
        339,
        'Can delete Blueprint Instance',
        83,
        'delete_blueprintinstance'
    );
INSERT INTO public.auth_permission
VALUES (
        340,
        'Can view Blueprint Instance',
        83,
        'view_blueprintinstance'
    );
INSERT INTO public.auth_permission
VALUES (
        341,
        'Can add group object permission',
        84,
        'add_groupobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (
        342,
        'Can change group object permission',
        84,
        'change_groupobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (
        343,
        'Can delete group object permission',
        84,
        'delete_groupobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (
        344,
        'Can view group object permission',
        84,
        'view_groupobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (
        345,
        'Can add user object permission',
        85,
        'add_userobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (
        346,
        'Can change user object permission',
        85,
        'change_userobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (
        347,
        'Can delete user object permission',
        85,
        'delete_userobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (
        348,
        'Can view user object permission',
        85,
        'view_userobjectpermission'
    );
INSERT INTO public.auth_permission
VALUES (349, 'Can add User', 86, 'add_user');
INSERT INTO public.auth_permission
VALUES (350, 'Can change User', 86, 'change_user');
INSERT INTO public.auth_permission
VALUES (351, 'Can delete User', 86, 'delete_user');
INSERT INTO public.auth_permission
VALUES (352, 'Can view User', 86, 'view_user');
INSERT INTO public.auth_permission
VALUES (353, 'Reset Password', 86, 'reset_user_password');
INSERT INTO public.auth_permission
VALUES (
        354,
        'Can impersonate other users',
        86,
        'impersonate'
    );
INSERT INTO public.auth_permission
VALUES (
        355,
        'Can assign permissions to users',
        86,
        'assign_user_permissions'
    );
INSERT INTO public.auth_permission
VALUES (
        356,
        'Can unassign permissions from users',
        86,
        'unassign_user_permissions'
    );
INSERT INTO public.auth_permission
VALUES (
        357,
        'Can add Property Mapping',
        87,
        'add_propertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        358,
        'Can change Property Mapping',
        87,
        'change_propertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        359,
        'Can delete Property Mapping',
        87,
        'delete_propertymapping'
    );
INSERT INTO public.auth_permission
VALUES (
        360,
        'Can view Property Mapping',
        87,
        'view_propertymapping'
    );
INSERT INTO public.auth_permission
VALUES (361, 'Can add source', 88, 'add_source');
INSERT INTO public.auth_permission
VALUES (362, 'Can change source', 88, 'change_source');
INSERT INTO public.auth_permission
VALUES (363, 'Can delete source', 88, 'delete_source');
INSERT INTO public.auth_permission
VALUES (364, 'Can view source', 88, 'view_source');
INSERT INTO public.auth_permission
VALUES (
        365,
        'Can add user source connection',
        89,
        'add_usersourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        366,
        'Can change user source connection',
        89,
        'change_usersourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        367,
        'Can delete user source connection',
        89,
        'delete_usersourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (
        368,
        'Can view user source connection',
        89,
        'view_usersourceconnection'
    );
INSERT INTO public.auth_permission
VALUES (369, 'Can add Token', 90, 'add_token');
INSERT INTO public.auth_permission
VALUES (370, 'Can change Token', 90, 'change_token');
INSERT INTO public.auth_permission
VALUES (371, 'Can delete Token', 90, 'delete_token');
INSERT INTO public.auth_permission
VALUES (372, 'Can view Token', 90, 'view_token');
INSERT INTO public.auth_permission
VALUES (373, 'View token''s key', 90, 'view_token_key');
INSERT INTO public.auth_permission
VALUES (374, 'Can add provider', 91, 'add_provider');
INSERT INTO public.auth_permission
VALUES (
        375,
        'Can change provider',
        91,
        'change_provider'
    );
INSERT INTO public.auth_permission
VALUES (
        376,
        'Can delete provider',
        91,
        'delete_provider'
    );
INSERT INTO public.auth_permission
VALUES (377, 'Can view provider', 91, 'view_provider');
INSERT INTO public.auth_permission
VALUES (378, 'Can add Group', 92, 'add_group');
INSERT INTO public.auth_permission
VALUES (379, 'Can change Group', 92, 'change_group');
INSERT INTO public.auth_permission
VALUES (380, 'Can delete Group', 92, 'delete_group');
INSERT INTO public.auth_permission
VALUES (381, 'Can view Group', 92, 'view_group');
INSERT INTO public.auth_permission
VALUES (
        382,
        'Can add Application',
        93,
        'add_application'
    );
INSERT INTO public.auth_permission
VALUES (
        383,
        'Can change Application',
        93,
        'change_application'
    );
INSERT INTO public.auth_permission
VALUES (
        384,
        'Can delete Application',
        93,
        'delete_application'
    );
INSERT INTO public.auth_permission
VALUES (
        385,
        'Can view Application',
        93,
        'view_application'
    );
INSERT INTO public.auth_permission
VALUES (
        386,
        'Can add Authenticated Session',
        94,
        'add_authenticatedsession'
    );
INSERT INTO public.auth_permission
VALUES (
        387,
        'Can change Authenticated Session',
        94,
        'change_authenticatedsession'
    );
INSERT INTO public.auth_permission
VALUES (
        388,
        'Can delete Authenticated Session',
        94,
        'delete_authenticatedsession'
    );
INSERT INTO public.auth_permission
VALUES (
        389,
        'Can view Authenticated Session',
        94,
        'view_authenticatedsession'
    );
INSERT INTO public.auth_permission
VALUES (390, 'Can add License', 95, 'add_license');
INSERT INTO public.auth_permission
VALUES (391, 'Can change License', 95, 'change_license');
INSERT INTO public.auth_permission
VALUES (392, 'Can delete License', 95, 'delete_license');
INSERT INTO public.auth_permission
VALUES (393, 'Can view License', 95, 'view_license');
INSERT INTO public.auth_permission
VALUES (
        394,
        'Can add License Usage',
        96,
        'add_licenseusage'
    );
INSERT INTO public.auth_permission
VALUES (
        395,
        'Can change License Usage',
        96,
        'change_licenseusage'
    );
INSERT INTO public.auth_permission
VALUES (
        396,
        'Can delete License Usage',
        96,
        'delete_licenseusage'
    );
INSERT INTO public.auth_permission
VALUES (
        397,
        'Can view License Usage',
        96,
        'view_licenseusage'
    );
--
-- Data for Name: authentik_blueprints_blueprintinstance; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.376603+00',
        '2023-12-06 23:54:23.881051+00',
        NULL,
        'c03a22e9-6405-4fe7-b78e-114571fe1ceb',
        'Default - WebAuthn MFA setup flow',
        '{"name": "Default - WebAuthn MFA setup flow", "labels": {}}',
        'default/flow-default-authenticator-webauthn-setup.yaml',
        '{}',
        '2023-12-06 23:54:23.881054+00',
        '67ef724536f41c451b9a88edd01100bd9ba4460f41b88f86a1385f9df30617371d0ddb610526b0a93aa32b9918475a63db03dfcf57bf7d0b02e7b509f9d35870',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.383759+00',
        '2023-12-06 23:54:26.203527+00',
        NULL,
        '546c802a-36e5-431b-90df-f8d70621c2f8',
        'Default - Provider authorization flow (implicit consent)',
        '{"name": "Default - Provider authorization flow (implicit consent)", "labels": {}}',
        'default/flow-default-provider-authorization-implicit-consent.yaml',
        '{}',
        '2023-12-06 23:54:26.20353+00',
        '2321088d922a57fdb741f6857eb48d3090210b552a6ecadf9b08de4832f574c5231f37943da3dfda3a4fa07c900d236ace3d237710e2e986a207c758859c1ecb',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.39918+00',
        '2023-12-06 23:54:26.322911+00',
        NULL,
        'cc7b67dd-4e58-4a57-afc3-8a5d51943978',
        'Default - TOTP MFA setup flow',
        '{"name": "Default - TOTP MFA setup flow", "labels": {}}',
        'default/flow-default-authenticator-totp-setup.yaml',
        '{}',
        '2023-12-06 23:54:26.322914+00',
        '43d2dcce568cbbe0f5409f52e2250ce4aa28ca34049cfc6f284070a2c28f81e85bb11fcf797f171beb1cb7aa15d70f26175ba9010b615563cac6057fc2563104',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.401282+00',
        '2023-12-06 23:54:26.357413+00',
        NULL,
        'd4467a6a-5be8-4e5b-ac1f-3ffb4c7b998a',
        'Default - Provider authorization flow (explicit consent)',
        '{"name": "Default - Provider authorization flow (explicit consent)", "labels": {}}',
        'default/flow-default-provider-authorization-explicit-consent.yaml',
        '{}',
        '2023-12-06 23:54:26.357417+00',
        '598eee861d8814c0dc200542f59e5d8085c140f7131e87a9fc6baf688a3e9e7b0a32e865c439084f76b11992ce056be574e5aba2664375cee287206d66d345c9',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.382237+00',
        '2023-12-06 23:54:26.18361+00',
        NULL,
        '3efd74ee-7bc8-4a86-96b9-175e9f6c7939',
        'Default - Static MFA setup flow',
        '{"name": "Default - Static MFA setup flow", "labels": {}}',
        'default/flow-default-authenticator-static-setup.yaml',
        '{}',
        '2023-12-06 23:54:26.183613+00',
        '552f08718b573593e1b643f47734a1c185d7bc9efbea9c8d3dc49e6fd5060cd979098637fa20d958f4c3c9ff375e0fde3b871c956b87ebfbb1fb9319ba073bcb',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.379901+00',
        '2023-12-06 23:54:26.195194+00',
        NULL,
        '2b528fb0-e260-4bc7-80b9-3d19510211fe',
        'Default - Source authentication flow',
        '{"name": "Default - Source authentication flow", "labels": {}}',
        'default/flow-default-source-authentication.yaml',
        '{}',
        '2023-12-06 23:54:26.195197+00',
        'd86613f21394af35d554692e9868e7e714bb7cbd99a362ef3b64476edc1ffcb832443610f193d3d116685a360a1734482a7152b6b6bc8913f45be9aac3934233',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.385892+00',
        '2023-12-06 23:54:27.799781+00',
        NULL,
        '5db7d7e5-918a-4cc3-a0ff-ee882003dc34',
        'Default - Invalidation flow',
        '{"name": "Default - Invalidation flow", "labels": {}}',
        'default/flow-default-invalidation-flow.yaml',
        '{}',
        '2023-12-06 23:54:27.799784+00',
        'a143bf2b9a1d20e2078389f7c37d213e51c52ea6a8df8f8ae7a7e6a1bb129ec4b862803aa44b8b1dbfe727e98e45cedac7a1a03632065040c87f045dcabab86a',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.394196+00',
        '2023-12-06 23:54:27.865875+00',
        NULL,
        '19359f1b-0b59-4688-b4b2-48007e00ebf9',
        'Default - User settings flow',
        '{"name": "Default - User settings flow", "labels": {}}',
        'default/flow-default-user-settings-flow.yaml',
        '{}',
        '2023-12-06 23:54:27.865879+00',
        '192e32332465563ca0ec85be2ef4057a6bb8aeb3a291503d184f66c45377caa313225dc367780ef5ea4f1c86fbddc0b7706dd4cf0a3b9f5528abc98c790a883b',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.396935+00',
        '2023-12-06 23:54:27.873213+00',
        NULL,
        'e53a347e-5112-4004-ad7e-11977d998078',
        'Default - Tenant',
        '{"name": "Default - Tenant", "labels": {}}',
        'default/default-tenant.yaml',
        '{}',
        '2023-12-06 23:54:27.873219+00',
        '65a18916f00bcac6bb8a2fb5d05f891eb1473ef262d4d9c78afeba012efbaf1330c2141923f7ffade17472be0c19b9f0b53b40f46e66f07a35bb6d2c00922aee',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.410773+00',
        '2023-12-06 23:54:30.308811+00',
        NULL,
        '1c8c2f68-3a9e-497c-8c44-c5b488e14e78',
        'Default - Out-of-box-experience flow',
        '{"name": "Default - Out-of-box-experience flow", "labels": {}}',
        'default/flow-oobe.yaml',
        '{}',
        '2023-12-06 23:54:30.308815+00',
        '92a35a46db8ccbcd707c6065bf07797ab7a45406e24660d921224fb534875a2e204acf9bc65bcfc3a7b6f876414f0ee6d43669fa51244022afdf1b51aac11940',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.419765+00',
        '2023-12-06 23:54:28.024415+00',
        NULL,
        'fbe0b5ba-3aa4-4fe7-9e02-d0ee9b5e5d8c',
        'Default - Password change flow',
        '{"name": "Default - Password change flow", "labels": {}}',
        'default/flow-password-change.yaml',
        '{}',
        '2023-12-06 23:54:28.024418+00',
        '6d7f1794e5a024d80e373fa9c9c791fa4837c690ad70d707fdf16208dec7c4b7feb490ab83f1db3e7d37f3d3ea41dfc4b06d87a221ffb208c076ff6672c27cc1',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.432441+00',
        '2023-12-06 23:54:28.043651+00',
        NULL,
        '2772c337-d84f-4b1b-b8db-32c4d9f39ab1',
        'Default - Events Transport & Rules',
        '{"name": "Default - Events Transport & Rules", "labels": {}}',
        'default/events-default.yaml',
        '{}',
        '2023-12-06 23:54:28.043654+00',
        'bbee0ba3e8e51ea5290dbb2081c7c0a18f633766ff8f43c8897d68d0ea51b648cdffb345239b55cbab72d041972e80aea793d8a7a379f25aca02882f9fbf94ff',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.451566+00',
        '2023-12-06 23:54:28.170163+00',
        NULL,
        'a522ece4-3053-467d-ae7b-b2f502ab665f',
        'System - SAML Provider - Mappings',
        '{"name": "System - SAML Provider - Mappings", "labels": {"blueprints.goauthentik.io/system": "true"}}',
        'system/providers-saml.yaml',
        '{}',
        '2023-12-06 23:54:28.170167+00',
        '15301d80ffa95fa0c37bc14fe3b5aaa74224a5998f82cdbd1a701ab96f05290b05dcee25df7053282c516383a6ba9890cbaac11aeca0fe1f9717f24e3d819ae3',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.438137+00',
        '2023-12-06 23:54:28.108062+00',
        NULL,
        '337ad524-45b8-4e5b-b172-715d54823cba',
        'System - LDAP Source - Mappings',
        '{"name": "System - LDAP Source - Mappings", "labels": {"blueprints.goauthentik.io/system": "true"}}',
        'system/sources-ldap.yaml',
        '{}',
        '2023-12-06 23:54:28.108065+00',
        'cd457d2cef04cfc24d7bbadfac35d8ee1e91b04a0a1662a18a0428e97043bdbfbe7a23b21b065d2e201c291c99f22a38b32436d76edfa86dbae3a5dc4d0ae4fc',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.421302+00',
        '2023-12-06 23:54:27.640258+00',
        NULL,
        'eff60478-35df-4851-9449-429bc23322f3',
        'Default - Source pre-authentication flow',
        '{"name": "Default - Source pre-authentication flow", "labels": {}}',
        'default/flow-default-source-pre-authentication.yaml',
        '{}',
        '2023-12-06 23:54:27.640262+00',
        '51b6b65fb60f2f925d80b38cf173e7aa1bc00a074990e8d0b0dfaae088007ceb9051d0722f41500da309af5d0c78417dfa08a40c706203c3d6ee1eb613ad564c',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.503604+00',
        '2023-12-06 23:54:28.201282+00',
        NULL,
        '0e161ffe-5a33-41b3-bc03-3b98b27ce94f',
        'Migration - Remove old prompt fields',
        '{"name": "Migration - Remove old prompt fields", "labels": {"blueprints.goauthentik.io/description": "Migrate to 2023.2, remove unused prompt fields"}}',
        'migrations/migrate-prompt-name.yaml',
        '{}',
        '2023-12-06 23:54:28.201286+00',
        '75617432af2bb8d9cbf74db0ba9d6ec1b123811fdb40975685386c85d8fa4046cc4749a8e6f1f3e0c1068e45bf2af73914c6ede5b3d31fa2ac3195a53b94cf43',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.443824+00',
        '2023-12-06 23:54:28.117952+00',
        NULL,
        'b686dbc2-0601-4dac-8080-a74fa304306e',
        'System - OAuth2 Provider - Scopes',
        '{"name": "System - OAuth2 Provider - Scopes", "labels": {"blueprints.goauthentik.io/system": "true"}}',
        'system/providers-oauth2.yaml',
        '{}',
        '2023-12-06 23:54:28.117955+00',
        'bef8877737dd0345a5e88ef83518cbcdd45b2345037f925dc51eb7097bdbd0c4e1565aacdf08ec3ce2c0b90f8bcba013fa8618ea12881062e4e59d87a2abf992',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.416011+00',
        '2023-12-06 23:54:27.540322+00',
        NULL,
        '20fc6894-41bf-49dc-972a-b6d07ded2d3d',
        'Default - Source enrollment flow',
        '{"name": "Default - Source enrollment flow", "labels": {}}',
        'default/flow-default-source-enrollment.yaml',
        '{}',
        '2023-12-06 23:54:27.540325+00',
        '09d441466d7e215601551bcd7c147616bf3794909f706c99c8fe527120d6fc612c1e4885c09bca433b97273e6a3fb10840d957bd7c898b14495a7bb245060792',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.426304+00',
        '2023-12-06 23:54:28.070144+00',
        NULL,
        'f83c3152-ca58-4104-a546-b4ee0c315bbd',
        'Default - Authentication flow',
        '{"name": "Default - Authentication flow", "labels": {}}',
        'default/flow-default-authentication-flow.yaml',
        '{}',
        '2023-12-06 23:54:28.070148+00',
        '4a184d3cf46bcc05e3e6e2428b1100877d3b3a6ddf934a936d65f26ef81bc5cfb5481cf3128217ee3bbf4d1a83060f4b0c7b43a88546827b9e65fdaa361e8259',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.447222+00',
        '2023-12-06 23:54:28.132396+00',
        NULL,
        '65a0091e-4156-4f08-9818-19d70cb6586a',
        'System - SCIM Provider - Mappings',
        '{"name": "System - SCIM Provider - Mappings", "labels": {"blueprints.goauthentik.io/system": "true"}}',
        'system/providers-scim.yaml',
        '{}',
        '2023-12-06 23:54:28.132399+00',
        '55307bd6d933b0fab5843dd5ea78dfd7aab0cedb7f1683541c411208086932e185f4038f49c3d2311dc6725f63f8dde95f8bdd4febfdb9e8afdb397b39ca0c65',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.455315+00',
        '2023-12-06 23:54:28.152403+00',
        NULL,
        '85b5c3bd-bf18-49b2-9120-5a74f3442653',
        'authentik Bootstrap',
        '{"name": "authentik Bootstrap", "labels": {"blueprints.goauthentik.io/system": "true", "blueprints.goauthentik.io/description": "This blueprint configures the default admin user and group, and configures them for the [Automated install](https://goauthentik.io/docs/installation/automated-install).\n", "blueprints.goauthentik.io/system-bootstrap": "true"}}',
        'system/bootstrap.yaml',
        '{}',
        '2023-12-06 23:54:28.152406+00',
        'c572042434ffa2218c5a30a656cbf10c80c434f19c596cdd9bc6aa37897af3be3f0ab0a73e332ebafb72bdf8a1a15937fb62c9077b484602edf4a196b632aa45',
        'successful',
        true,
        '{}',
        ''
    );
INSERT INTO public.authentik_blueprints_blueprintinstance
VALUES (
        '2023-12-06 23:54:02.440328+00',
        '2023-12-06 23:54:28.088354+00',
        NULL,
        '1dea88b4-0539-4329-9e1d-692bf2591512',
        'System - Proxy Provider - Scopes',
        '{"name": "System - Proxy Provider - Scopes", "labels": {"blueprints.goauthentik.io/system": "true"}}',
        'system/providers-proxy.yaml',
        '{}',
        '2023-12-06 23:54:28.088358+00',
        'e05899bfad26c4868f2dd91a99eaa53ce0e31595e8d89bbf50a126eb349a0993873694902347c3239ddaed872d557a5a1a62e29dc9f32a02aba5980656234fb8',
        'successful',
        true,
        '{}',
        ''
    );
--
-- Data for Name: authentik_core_application; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_application
VALUES (
        '3d1bc8cf-4000-491e-9b8f-8fb00fefa686',
        'Wordmesh',
        'eidash',
        'http://fyko.internal:33939',
        'The authentication application for Wordmesh.',
        '',
        1,
        '',
        '',
        true
    );
--
-- Data for Name: authentik_core_authenticatedsession; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_core_group; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_group
VALUES (
        '91f0793a-644d-4d2d-a231-c15eb1bee47a',
        'authentik Admins',
        '{}',
        NULL,
        true
    );
INSERT INTO public.authentik_core_group
VALUES (
        '1f2fe425-4a9f-455b-86ed-aae193b56ca1',
        'authentik Users',
        '{}',
        NULL,
        false
    );
--
-- Data for Name: authentik_core_group_roles; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_core_propertymapping; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_propertymapping
VALUES (
        '89ab7026-603d-4670-a5ea-951ab52eef6e',
        'authentik default OAuth Mapping: OpenID ''openid''',
        '# This scope is required by the OpenID-spec, and must as such exist in authentik.
# The scope by itself does not grant any information
return {}',
        'goauthentik.io/providers/oauth2/scope-openid'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '7df38578-030b-410f-9306-e6bb794c734d',
        'authentik default OAuth Mapping: OpenID ''email''',
        'return {
    "email": request.user.email,
    "email_verified": True
}',
        'goauthentik.io/providers/oauth2/scope-email'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '857be58d-077b-484d-9882-3e2376e54773',
        'authentik default OAuth Mapping: OpenID ''profile''',
        'return {
    # Because authentik only saves the user''s full name, and has no concept of first and last names,
    # the full name is used as given name.
    # You can override this behaviour in custom mappings, i.e. `request.user.name.split(" ")`
    "name": request.user.name,
    "given_name": request.user.name,
    "preferred_username": request.user.username,
    "nickname": request.user.username,
    # groups is not part of the official userinfo schema, but is a quasi-standard
    "groups": [group.name for group in request.user.ak_groups.all()],
}',
        'goauthentik.io/providers/oauth2/scope-profile'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '1d3afca1-0c6f-45ee-8e5b-c10b6add4b8f',
        'authentik default LDAP Mapping: DN to User Path',
        'dn = ldap.get("distinguishedName")
path_elements = []
for pair in dn.split(","):
    attr, _, value = pair.partition("=")
    # Ignore elements from the Root DSE and the canonical name of the object
    if attr.lower() in ["cn", "dc"]:
        continue
    path_elements.append(value)
path_elements.reverse()

path = source.get_user_path()
if len(path_elements) > 0:
    path = f"{path}/{''/''.join(path_elements)}"
return path',
        'goauthentik.io/sources/ldap/default-dn-path'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '5204bd26-a4ec-4560-9697-3c6ca6405f84',
        'authentik default OAuth Mapping: Proxy outpost',
        '# This mapping is used by the authentik proxy. It passes extra user attributes,
# which are used for example for the HTTP-Basic Authentication mapping.
return {
    "sid": request.http_request.session.session_key,
    "ak_proxy": {
        "user_attributes": request.user.group_attributes(request),
        "is_superuser": request.user.is_superuser,
    }
}',
        'goauthentik.io/providers/proxy/scope-proxy'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '74e3ac3d-5116-4d86-bae1-3cd5d994e60f',
        'authentik default LDAP Mapping: Name',
        'return ldap.get(''name'')',
        'goauthentik.io/sources/ldap/default-name'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '4a3da6a9-8e26-4bc3-9882-187a4f3d2dbd',
        'authentik default LDAP Mapping: mail',
        'return ldap.get(''mail'')',
        'goauthentik.io/sources/ldap/default-mail'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '4741d912-95ef-468d-923e-ab48938e3135',
        'authentik default Active Directory Mapping: sAMAccountName',
        'return ldap.get(''sAMAccountName'')',
        'goauthentik.io/sources/ldap/ms-samaccountname'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '76ea55e8-2d6d-40e1-b657-325e924014b9',
        'authentik default Active Directory Mapping: userPrincipalName',
        'return list_flatten(ldap.get(''userPrincipalName''))',
        'goauthentik.io/sources/ldap/ms-userprincipalname'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '20c04e5e-ecab-4089-9fbc-a85ecfec00da',
        'authentik default Active Directory Mapping: givenName',
        'return list_flatten(ldap.get(''givenName''))',
        'goauthentik.io/sources/ldap/ms-givenName'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '2b8d4be4-40d2-45a1-b1dc-cdacf0ce8f7d',
        'authentik default Active Directory Mapping: sn',
        'return list_flatten(ldap.get(''sn''))',
        'goauthentik.io/sources/ldap/ms-sn'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '798e3f67-212e-44d7-ae24-aaff1859141d',
        'authentik default OpenLDAP Mapping: uid',
        'return ldap.get(''uid'')',
        'goauthentik.io/sources/ldap/openldap-uid'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '0962948a-253a-49a1-955f-c2ff8b4e8c64',
        'authentik default OpenLDAP Mapping: cn',
        'return ldap.get(''cn'')',
        'goauthentik.io/sources/ldap/openldap-cn'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        'bf5475d5-a03f-4c05-8515-c220fe20d56a',
        'authentik default SAML Mapping: User ID',
        'return request.user.pk',
        'goauthentik.io/providers/saml/uid'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '16ce8cef-d8df-43d3-a0e9-8a6c258bb951',
        'authentik default SAML Mapping: Groups',
        'for group in request.user.ak_groups.all():
    yield group.name',
        'goauthentik.io/providers/saml/groups'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '8dbd2df3-a88f-4cd4-8acd-6dcc449ebd68',
        'authentik default SAML Mapping: WindowsAccountname (Username)',
        'return request.user.username',
        'goauthentik.io/providers/saml/ms-windowsaccountname'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '01125776-dfb4-4343-8ec3-09d69ffb15d3',
        'authentik default SCIM Mapping: User',
        '# Some implementations require givenName and familyName to be set
givenName, familyName = request.user.name, ""
# This default sets givenName to the name before the first space
# and the remainder as family name
# if the user''s name has no space the givenName is the entire name
# (this might cause issues with some SCIM implementations)
if " " in request.user.name:
    givenName, _, familyName = request.user.name.partition(" ")

# photos supports URLs to images, however authentik might return data URIs
avatar = request.user.avatar
photos = None
if "://" in avatar:
    photos = [{"value": avatar, "type": "photo"}]

locale = request.user.locale()
if locale == "":
    locale = None

emails = []
if request.user.email != "":
    emails = [{
        "value": request.user.email,
        "type": "other",
        "primary": True,
    }]
return {
    "userName": request.user.username,
    "name": {
        "formatted": request.user.name,
        "givenName": givenName,
        "familyName": familyName,
    },
    "displayName": request.user.name,
    "photos": photos,
    "locale": locale,
    "active": request.user.is_active,
    "emails": emails,
}',
        'goauthentik.io/providers/scim/user'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        'de2c70a0-ad26-45e3-a425-720b1591ad83',
        'authentik default SCIM Mapping: Group',
        'return {
    "displayName": group.name,
}',
        'goauthentik.io/providers/scim/group'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '6fc1f60c-9017-49ca-88b8-5e1742b5f083',
        'authentik default SAML Mapping: UPN',
        'return request.user.attributes.get(''upn'', request.user.email)',
        'goauthentik.io/providers/saml/upn'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '5f427cda-8eda-4a9b-93dd-883587561111',
        'authentik default SAML Mapping: Name',
        'return request.user.name',
        'goauthentik.io/providers/saml/name'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '5277cdbd-9335-492a-99dc-74c077647af3',
        'authentik default SAML Mapping: Email',
        'return request.user.email',
        'goauthentik.io/providers/saml/email'
    );
INSERT INTO public.authentik_core_propertymapping
VALUES (
        '2352dec3-4d2c-40fa-9293-bae9b2a9bd2a',
        'authentik default SAML Mapping: Username',
        'return request.user.username',
        'goauthentik.io/providers/saml/username'
    );
--
-- Data for Name: authentik_core_provider; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_provider
VALUES (
        1,
        '6122946d-fdf7-46cf-b884-96ba2cd2cc25',
        'Wordmesh',
        '771a9e4f-58ea-4b30-905a-e4cd49e838e7',
        NULL,
        false
    );
--
-- Data for Name: authentik_core_provider_property_mappings; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_provider_property_mappings
VALUES (1, 1, '7df38578-030b-410f-9306-e6bb794c734d');
INSERT INTO public.authentik_core_provider_property_mappings
VALUES (2, 1, '89ab7026-603d-4670-a5ea-951ab52eef6e');
INSERT INTO public.authentik_core_provider_property_mappings
VALUES (3, 1, '857be58d-077b-484d-9882-3e2376e54773');
--
-- Data for Name: authentik_core_source; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_source
VALUES (
        '3c7dc5d4-baaa-4286-9a4e-24a813dc63de',
        'authentik Built-in',
        'authentik-built-in',
        true,
        NULL,
        NULL,
        'goauthentik.io/sources/inbuilt',
        'identifier',
        'goauthentik.io/sources/%(slug)s',
        ''
    );
--
-- Data for Name: authentik_core_source_property_mappings; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_core_token; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_token
VALUES (
        'b3f3f56c-2dff-4eff-8f7f-2b8af163a8db',
        '2023-12-07 00:41:00.130851+00',
        false,
        'Autogenerated by authentik for Outpost authentik Embedded Outpost',
        6,
        'api',
        'ak-outpost-d6b1a550-8b2d-4828-8ce8-bdbda9d6038e-api',
        'D3xtAPs4L2JPma7qBtyFBYgFc2Kboz67cwQqnFeBBmSl2amOcGyCgwg2Wz6m',
        'goauthentik.io/outpost/ak-outpost-d6b1a550-8b2d-4828-8ce8-bdbda9d6038e-api'
    );
--
-- Data for Name: authentik_core_user; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_user
VALUES (
        1,
        '!gqzGIDJr2kBdWFQYDzwMZ4LO4kDmvqNhfSN9AdbX',
        NULL,
        'AnonymousUser',
        '',
        '',
        '',
        true,
        '2023-12-06 23:54:15.874568+00',
        '88ef02b2-a6a2-4d49-918f-dca724db930f',
        '',
        '2023-12-06 23:54:15.874782+00',
        '{}',
        'users',
        'internal'
    );
INSERT INTO public.authentik_core_user
VALUES (
        6,
        '!Qrrk3fVvUiZsLbwEBc3Tmixjd4YxxRSI2jP5E31G',
        NULL,
        'ak-outpost-d6b1a5508b2d48288ce8bdbda9d6038e',
        '',
        '',
        '',
        true,
        '2023-12-06 23:54:25.791221+00',
        '15e3fc55-0338-4f5a-a0eb-894623ec6416',
        'Outpost authentik Embedded Outpost Service-Account',
        '2023-12-06 23:54:25.791441+00',
        '{}',
        'goauthentik.io/outposts',
        'internal_service_account'
    );
INSERT INTO public.authentik_core_user
VALUES (
        7,
        'pbkdf2_sha256$600000$vNz2wyS5Bl6WrLPYVv003Q$B+rByk6i4sGoSAxSQyBzB0RXhLa/g/H9oO478lcC7ns=',
        '2023-12-10 03:21:14.098122+00',
        'fyko',
        '',
        '',
        'me@fyko.net',
        true,
        '2023-12-07 00:47:49.705382+00',
        'dc982dbb-a9e5-4720-8d89-122ca55f4f7f',
        'Carter Himmel',
        '2023-12-07 00:47:49.823301+00',
        '{"settings": {"locale": ""}}',
        'users',
        'external'
    );
INSERT INTO public.authentik_core_user
VALUES (
        5,
        'pbkdf2_sha256$600000$PLod5QNkwGSadCozmzYTvH$CeabO+bqGi5VDALQvGeqlwhbnGGOw2oeLgL+dkUDeog=',
        '2023-12-10 18:20:28.682984+00',
        'akadmin',
        '',
        '',
        'admin@eidash.app',
        true,
        '2023-12-06 23:54:23.610792+00',
        'e4e00b0c-0b2f-4e9c-8952-c88871afb761',
        'authentik Default Admin',
        '2023-12-07 00:22:20.043726+00',
        '{}',
        'users',
        'internal'
    );
--
-- Data for Name: authentik_core_user_ak_groups; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_user_ak_groups
VALUES (4, 5, '91f0793a-644d-4d2d-a231-c15eb1bee47a');
INSERT INTO public.authentik_core_user_ak_groups
VALUES (5, 7, '1f2fe425-4a9f-455b-86ed-aae193b56ca1');
--
-- Data for Name: authentik_core_user_groups; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_core_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_core_user_user_permissions
VALUES (5, 6, 21);
--
-- Data for Name: authentik_core_usersourceconnection; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_crypto_certificatekeypair; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_crypto_certificatekeypair
VALUES (
        '2023-12-06 23:54:19.197299+00',
        '2023-12-06 23:54:19.197314+00',
        'dfb286c0-6091-4b75-b57b-a94d53a6f7cf',
        'authentik Internal JWT Certificate',
        '-----BEGIN CERTIFICATE-----
MIIFHzCCAwegAwIBAgIQUtMsUfC8QPGCS86wzK8SLjANBgkqhkiG9w0BAQsFADAe
MRwwGgYDVQQDDBNhdXRoZW50aWsgMjAyMy4xMC40MB4XDTIzMTIwNTIzNTQxOVoX
DTI0MTEzMDIzNTQxOVowVzErMCkGA1UEAwwiYXV0aGVudGlrIEludGVybmFsIEpX
VCBDZXJ0aWZpY2F0ZTESMBAGA1UECgwJYXV0aGVudGlrMRQwEgYDVQQLDAtTZWxm
LXNpZ25lZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAOxKNq0dFWLm
aN1cXq2uVGRrSurvBlirssuGgVQJ0sIlQAmnlaBD/uy4zpm0RBGaTCF4cv9JuZko
9hNxRopxtuh3xCvegBCEArjmeklrdXK+vpKE4rzhcNlhoL0b2JxHSd/C9qTO7fEQ
EoqheRSdMKx2bepAG824PvviJkGuwUSUre1WScZeP9wnKu0XqLmHo0vU4MJZwl5V
dm4MEDCKgGTLgDv4/bWTmJhJgRB72XUy3iBwDBrvVSlwnWb2aOqvB1HYHfDrLPrB
IAdOCHRNk8wU3OqNeM5/osdMujt9fWEqF01sgBkdLrfstYNbbeK850ij86O4w17O
b9Z+kNFP2nopHnxq8shFkr8GtUdVJLXdsd4i0pBHZEBG1vMzd0QN3su2KyIayMBp
Wws+BLlSTxOidR1BCleGQHi5FH15fG40GCb1oOTE05wvvNgoNR1J83HcNnkEtCRD
tL9gv46hgUryID4U9L21EXW+hMODLtkpTbGY6OkOEYjGXkzH9D3556qCsyR1ChL8
L3hGgDJDSk7j+MzGyr2fUnP7dgi50R9Ga3OHBVE6pUz1aPciVxpHYieZJ0mXWrQZ
8MOdKcgtkTfJ7jmEpPR3rGEPxxD9vB43BmEt+jHyPMvktbcWDgxKpLqc1bUD8Z4s
SMBwlWVq8zLoL/jYs0r6TlJFfNZxoEjLAgMBAAGjIDAeMBwGA1UdEQEB/wQSMBCC
DmdvYXV0aGVudGlrLmlvMA0GCSqGSIb3DQEBCwUAA4ICAQBQJylZIV7k6atOO9Ne
GT/xsHK+z9VAsVTpxVsxtxFIqTDWW9uZOhvvbRQbOozFfJhX5w7JH4C8IvyfiEte
e26QW9+s9slUvdDxu69gDql9zTe6trT1IfHDMwYv1NQfycvowOki/2NHsgr13IYF
JKmHCFftcpko7LACiVy8W1lMjKFT4d2NCpzilvLzb85hS+OXOxddoGeVTLaevH/P
AtI3XVnmz92b6NXMNWW2wD4qxN1s9QWzUESXf3tJv47Yx9+nmhuQwqC8c98PgoBL
ygOBDv7lqeI13plXW2PTPp3VQ3pthhCB4eh7MxlraU2WgU8dOBlDv86dBOR6jLgN
X6fe9rTOkXt85qY2CUSIVZN/HCDOK6N+N3exDLdupL4tjH6J4Iegf9oHhOCBdxMo
3iNCKd2+OaVBx0Qofl4NTXOZFCAzkTjcRmyL9EJqwkJyUyjdG6ZLFf/kXNwnzFT7
1WhM//OrnpI+GEz3obcKH4UvLh5pz0qJtHtkoJdT3+QWiMHzVtQFViSt5MREPGHz
yQlxhVzb23k9ShXlLnD3L2ywC5dsO9GMNKcA1ptWKmkympLK3+g5Wb5x5XWlXf0q
V5GeuYpB0QY8E55WNmMc/s3qK/pnUDKTU0pBafw/P20amD3xfC/0KM/KSKU2EJU+
V32QJmVVDxhABqPrt+umZxQ6mw==
-----END CERTIFICATE-----
',
        '-----BEGIN RSA PRIVATE KEY-----
MIIJJwIBAAKCAgEA7Eo2rR0VYuZo3Vxera5UZGtK6u8GWKuyy4aBVAnSwiVACaeV
oEP+7LjOmbREEZpMIXhy/0m5mSj2E3FGinG26HfEK96AEIQCuOZ6SWt1cr6+koTi
vOFw2WGgvRvYnEdJ38L2pM7t8RASiqF5FJ0wrHZt6kAbzbg+++ImQa7BRJSt7VZJ
xl4/3Ccq7ReouYejS9TgwlnCXlV2bgwQMIqAZMuAO/j9tZOYmEmBEHvZdTLeIHAM
Gu9VKXCdZvZo6q8HUdgd8Oss+sEgB04IdE2TzBTc6o14zn+ix0y6O319YSoXTWyA
GR0ut+y1g1tt4rznSKPzo7jDXs5v1n6Q0U/aeikefGryyEWSvwa1R1Uktd2x3iLS
kEdkQEbW8zN3RA3ey7YrIhrIwGlbCz4EuVJPE6J1HUEKV4ZAeLkUfXl8bjQYJvWg
5MTTnC+82Cg1HUnzcdw2eQS0JEO0v2C/jqGBSvIgPhT0vbURdb6Ew4Mu2SlNsZjo
6Q4RiMZeTMf0PfnnqoKzJHUKEvwveEaAMkNKTuP4zMbKvZ9Sc/t2CLnRH0Zrc4cF
UTqlTPVo9yJXGkdiJ5knSZdatBnww50pyC2RN8nuOYSk9HesYQ/HEP28HjcGYS36
MfI8y+S1txYODEqkupzVtQPxnixIwHCVZWrzMugv+NizSvpOUkV81nGgSMsCAwEA
AQKCAgAO4h3PiaVvNVQlnUvZZMGsEZYGdkfQDgCVEUPUJ0o/MFl4QjYKgj3sazeY
NuKSuUVSVmPn8JzgKNRXJStsTP1YZzLUEI/AepAxVVMejMY5FAqs7/HYM9sH1j5p
qvdZ4KOmlIE0oFQcewav9LvLsJsAQfVqa99UdeaBtxzxxjAmQbcy29yJwiYDl/P8
OyFFjmWawS3nEABOMNPk2p2qcQ7lSmwpWuWgKkvSS871Wte3qhyTrnsUtz6F/bHs
aljxb1TmstYv9qA+qyt5SlD+AmTs1eOUYpTZbPCz3QFd/emH1T7igZMQAeaPbzl/
rKKfRYbL7IfMKDcmIZqpyA8XIBCCwlhHBM1EOy/29GWTnTfslzzGLdgkOeE6FwF4
6Y4v4BAOOufTtKFwLqLacxVsMzCjowd61FmSNfHCKKrSteb2IUlakB7YgzocqISL
U588X0D8ceqNm7tLeJk3eHPqzpcjK0YogvmxNCpyGCgzdmT+CE0mQp/aQ5C9Dvrv
J+2xmI4yLX5izvOCUnfysu64hY2j/gHUmus6r3yPtuTNloOhW3jES4/1gShcV22N
xBTOm71F7jue90jRCLWKPlMsXCskz+n3wO85A8wyvzEx1cv3JHiF9pu+JPHhIK2o
HMeIdL4YrrMrizbUqOdghwvEwHLw3PynplJO9MNkfljrXRPGAQKCAQEA97JRMHHt
ibaPjTxrtKMxajmi3x/l1AADE0E9UQEob0ydVLx/BSFDwwWuUzq3QPIcykT854HB
yEekKCclV5BpwYDW4lA5POcaFYFQL/HS2a2LjS5mq2xFC2rvKtB4tmGsr4jJhzkl
qVcJvipmkD0M5w+IyhIlEJRqXWdzl6K7SpaZr7GrYxJuqI24wrZBvPOVMkpCldaT
ozyoMak1xcNOPtTqdeAx0ntqVi4KO2JU18XIOOjkputqeHHjX7iFZbmmZU7Jiz9S
FyXuTC9Jfne2hRT3ywGIthBuWydjqUL/NpxZm2oFd6mQyjy3AE6XRZc5gIiG7TFB
ZYe2egqUzDiFGQKCAQEA9DYBvDjaNaV6nWh8MqShRzrfUbGLkNIh5nb0tGCvkqsX
3xJxsR5CGjz8TQeSZuR6lgKdobHaPLvM+UzjAJP0D2X1MX3HL3N2CEwpMySIDTZK
WIUf2biKoykQmm/gLnnNvQ1MTBuVM7AcdcrCPtLDfxGY8i5GwUWDowLe9vagEJHj
crkFJG2j9Ls54PjbbCh9b9UTUrNSAJjShQ4I0zv2ym7cJbfow5Uz/9tY9LAjqmis
Dsh9kLI+nxp5zHyBVUSnh21Zd/jcu30cuW0MhVtqpRCEOyz0mm92L1Y2/qz1fsoG
6N8ku8MZTnKlUb8gvLI368bozh1+OlXpFQh51RY1gwKCAQBt+7OpOy0qNPHQ2L9K
Whwa+rSjNlqqo8a5ygIb8dOud+p0Ma6E7JxWADPDqRKtt9OozLEvaqJM9+KgIaGn
G+yZi0fe/ZgsvsEKQ30DjPD+ztxkN/JGs7CEvVqtPBwdf4lZ9/bkIC/k3UzqL5GT
Aki0YGVwtFXY4s3H46Oj9RIMsIpVRSLAvvJ7zVH4w0y1RcM9rVObjMfJd6mHQ4co
5OvdYlUpOf9lYn94/MB2VdcuaBfbjS3aIDYKfSdk3V3+KU0FNtKvDdK5jJIfKfAM
Q8O7m+/bKDc4AFvABeFuytzfttTi+VSsKZKs+gCYFk19DQTvWa/vqitLldMkpYYk
mAQhAoIBABBQU0lZmuoehdRiGHnhmYyCmEyCycoA35bft3UdSF1J5KxYNRQZ61yJ
Wmli6hrJhI7k2dblZKjN+uFki32MZK9qpjiKKHY5BleDjvUFqbkIOWs0aW5H76r6
oUtP0fAI3v+UFda3uP3c8+nCg7tipQCmEkuLX9qlZCfNl0t0KjkxJbqSNY+7a0p7
/1/SAAZ3pfmEiGfr5rx3eQi+aUSDKvdW9InogTofi3u6EXU3FwrZNzU9m3XBEoHa
aOyKHLGvhml7mpBzJXu43eRdLoryEmu4cLzrQePXMlPzNHVK5JN1t4Ry86c/Xz9o
VTbix7MTTL0Jap/qRHZtKsbm7AyaETUCggEARSNY+eqfdwIdmkc8wJ8q+PXlZsMn
v1BSeXC1sjpTKOm2HV5g+x2KhBMXvqZW/KjVVbMO+sz2NkPb6/tnjbL/K5R9jXIy
LmebINsHhOZ4wPgiHtF1FiwycC07rydTcH4HsDmdHnBw2eETPCJOJ7RDVOd8xFhS
2w4BTymU2MMtXxYr1aW7jQlwzdzu9VpDEdIg9cHrVOyWLzYP10x+P6kBQRzJhE4M
i9F7hgXpCY31GHWJDgHvlEq7BfWk8zSwRK3Sw4vVg4TUChkTsevc7mnY0oXukS8F
jd1mWYt+Gcpe3HnPMTOq37IwzqRYYmmX1kPlRsDfmfIWaWhjr4cDyDMfsQ==
-----END RSA PRIVATE KEY-----
',
        'goauthentik.io/crypto/jwt-managed'
    );
INSERT INTO public.authentik_crypto_certificatekeypair
VALUES (
        '2023-12-06 23:54:19.407353+00',
        '2023-12-06 23:54:19.40737+00',
        '1a191047-4a1f-4c0a-97aa-377af734f948',
        'authentik Self-signed Certificate',
        '-----BEGIN CERTIFICATE-----
MIIFVDCCAzygAwIBAgIRAN85CVaUmUY0jKSIxSbIg3owDQYJKoZIhvcNAQELBQAw
HjEcMBoGA1UEAwwTYXV0aGVudGlrIDIwMjMuMTAuNDAeFw0yMzEyMDUyMzU0MTla
Fw0yNDEyMDUyMzU0MTlaMFYxKjAoBgNVBAMMIWF1dGhlbnRpayBTZWxmLXNpZ25l
ZCBDZXJ0aWZpY2F0ZTESMBAGA1UECgwJYXV0aGVudGlrMRQwEgYDVQQLDAtTZWxm
LXNpZ25lZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMCGelq4IVtS
4dVZJbdJbm8UvJZrDRK2j04KcAk5xtCLlWKjI6UXVrA+09ybNJ5g6/WsNfIhij2c
kS5rDcYjajLKzQlmcGFK1KS7WfNbe5agYC9WxGcXYuoLL8ffY2docdNO/drtj/kW
9UNOr3RG2gs1KMbTdEtojdXtEr0xHNa6uOwlFW6+vg6FhZ7TkYhYOnYRlpRfWlG9
eliHLcPR6oRSbOoNLBSIjTQyylymtfFQLhK6/9H1+IWTcE4IS4gQZ/QQrHvCbttZ
T845Q+MmTUhTX0AQqxPMHsjTrc8ntcl+GwP2qTXlUdnyfaoSbrBQ17sqMvuNCLLL
Ghlwq1Pur+cOfEJrsOZEw2y2YLP5mD+CwEVPAPVXDfIoiUFbZ/4j9HcMIQxAHbbJ
RPhzi+HxCkKfMuOE3R9Qyu649jP9XYJKHId0+tZHNdmD4NlWcEWXNqBmb2KxwGQW
UvMCwcrQOIe9rax0Gae7fx4ZDKfiNw/tkJC2zsWK3+nroCg4Rai22FFr1T1mn7yg
3LLcW2oBDUIM8Y5txesBANAVN3KCYILIOL0KtBcKO0qJqE2hkG7aKc5vXC7o71IT
Eziyy7LXEwTLoA6lCsV5DXJ9PPG2e4AEsU2ZTsu5gd1/pYWqd2ocjrknpmmf3I8Q
YZ/A92ntYZUDcFqAMQW66r2nwPLYuasnAgMBAAGjVTBTMFEGA1UdEQEB/wRHMEWC
QzFvaTV2aWNDOEdtZmFYcVZWdVdQY0lVYThQaWtCY05kd1cyaXFlcjMuc2VsZi1z
aWduZWQuZ29hdXRoZW50aWsuaW8wDQYJKoZIhvcNAQELBQADggIBAAA+tkB5D55v
TTZO1oMqwuJ0hptApt/4gCHYlhlXQK+/nwCREAa1ANhfm6L75kOaqBPYQJFZI7Q6
un+SxfiA5cUJ3gTcUWehkHpaAmnDToX8Yl4TnrfFka7mfoIwRsweyFxeF+2ok8Fi
Df3mu/72qa1jBJqZJGQ9tXTvSUkn8DAsAGDEwf1tfxlk6VZwe5iL8i3r/H6JavrK
QXuaGyn0XaYaTFe8GKqMzHPBDAhxHTeBaYAqldFRT+ckQxhJkBcmyF+mhlE+FYt2
ev/dCVMUvGMdP+iRgli9sMYk/6dVV7unurGoJTi9lUvBba1Wp0ZS//2DgWZE3vMZ
RhRQ80buFAt/i8rO594mpCRcCVQgFQt2D+kjdWQuaOxpuhXOEmeEEyQK0GmYB/2c
MuBzhG/+7WXc6/g94UvnH9GYAi5jFaJHyHtsPPgSWnQu10Nb00T/bP47JyRvVYnT
kNMh/5oLenxLj+jWlOR3cxW5LDpJKdkeFSqlawjFWIv4XMgbUnPCa08/MTuFCaqS
2wutCEUp37sB6KEvtZVqQqltpkMinHODbqiu9vjcW6edlQR9kNr5+v5bimvvtjUB
PpeBB/yLau+FPI5oyzz/8pzrqDrPPliTHZ5EJIO9whXlmsS/2XuG+952+F7mSZk/
VbuLj943e/IajYZMtB1jtRhVlTWS2ar9
-----END CERTIFICATE-----
',
        '-----BEGIN RSA PRIVATE KEY-----
MIIJKQIBAAKCAgEAwIZ6WrghW1Lh1Vklt0lubxS8lmsNEraPTgpwCTnG0IuVYqMj
pRdWsD7T3Js0nmDr9aw18iGKPZyRLmsNxiNqMsrNCWZwYUrUpLtZ81t7lqBgL1bE
Zxdi6gsvx99jZ2hx00792u2P+Rb1Q06vdEbaCzUoxtN0S2iN1e0SvTEc1rq47CUV
br6+DoWFntORiFg6dhGWlF9aUb16WIctw9HqhFJs6g0sFIiNNDLKXKa18VAuErr/
0fX4hZNwTghLiBBn9BCse8Ju21lPzjlD4yZNSFNfQBCrE8weyNOtzye1yX4bA/ap
NeVR2fJ9qhJusFDXuyoy+40IsssaGXCrU+6v5w58Qmuw5kTDbLZgs/mYP4LARU8A
9VcN8iiJQVtn/iP0dwwhDEAdtslE+HOL4fEKQp8y44TdH1DK7rj2M/1dgkoch3T6
1kc12YPg2VZwRZc2oGZvYrHAZBZS8wLBytA4h72trHQZp7t/HhkMp+I3D+2QkLbO
xYrf6eugKDhFqLbYUWvVPWafvKDcstxbagENQgzxjm3F6wEA0BU3coJggsg4vQq0
Fwo7SomoTaGQbtopzm9cLujvUhMTOLLLstcTBMugDqUKxXkNcn088bZ7gASxTZlO
y7mB3X+lhap3ahyOuSemaZ/cjxBhn8D3ae1hlQNwWoAxBbrqvafA8ti5qycCAwEA
AQKCAgAfN+8xNLhb+aWbFdiSzvp0UrV94p/9D9NPAUxHgrHlcSzpELEf/RfWfmmW
VSiEIg1BCgq5V4z2DqRQFZXnMijvUYlL4+uHKz4t9B9S4du5ggn2wygX22fzsZqu
219gDkSe0ilBzdHRv1JH9sNmpHKI7LbO/szVyX9uWAH44bTecOq5iA3gpldlPWt8
ZKwtorjgGlwDdS7NIF9taYYXQbu4dzEoBrjGH5peA3pi6bmJBsphySbgYfVJm63T
SW8OAjMJFYcSjmWxddsGAq0qcTSI7NP+LHXBQREg2YpOlA7bPHKfAulPTv8lyzdr
U4/VUVaaB+66cZUegOabh3SQqJynH24U5sebVL9HoSXibmfDCkLQ2ltg6LhPOuk9
Ph265A7MeQISb5+J5PIO21+g5LDR9fe/t0ac2a4Av21/2e0Ag/0wuEmc217J/l3d
D4IMLRMBVKzU6o6QPxVgP3N3zV58xTbPDUQJE8ABksU2aXt1gKXrYlGB3rt1VqLs
yxyfNO7yNeBVPEv9fZccqq2c9Hafhe6uJFtQhizkpQgLLI23kxwWnILt1tGYKukH
Tq3c8xulqPRPTDiXBDlOYp+8FKokSxZWs64CK+sSv9kjVzr3uk5tQnuIXA3VahbG
MaqEM3u/LqQjmpszwG9cycGRedLzNkNSMKcQZYVhm4EWVVBDGQKCAQEA+P6/zl/N
+P8AkaTQUdMvHK2q5myweYtN3O+k7dBwsA8E6GFVZJ6JgMA7kB7LuRtBf55OL9vm
hq5D8YiyUj3Hb5QTaA/pQJbAWLcaF+SQ+lVcEYnJhgbQL48facGZQOg/diCkL34r
u1rc/oP12Qr1PohkEAA4yxsU7KJJZVvvlw0jiHaLuNWqOS6AwO+NtKt4dKpeYGAy
aEawl0fqkLu/dmHq/lAz6oZBjzD4hftdrJ/mzO/9XWAP4SUcM1u+ImOX2tU+JvP+
2/nyMmMBNqvnqAiyIGINgbxiBBgEDo3+qJbFsuCGg0DwWqLhth+8D2k4k6I0ntf2
FD9HkJ7g3/ubqwKCAQEAxfEJLqk8a/wDGkRFQmVq7URSQYxozfefOy8I95oU8AmR
RJ44FM53otsID8Nq3JGX57lBWuxCx5YLUdcuSL7hD1gvT7XH4VCzuT8zWN9/J7Qv
gHiUJps6x0n5NKaAgVvXjCTi+bweFJd3jS5zlDJFgy3A3nsAqZMPrQ6BhidQAgoS
3Spw6TBWWQT7+53Iclt58PiU4/PHvLTythJoZXHh9z8QFrYrNLoYHlrac1xSLBpg
Kgw27a3e5vrKtyEqfPwajHfOinQy5eShfV6xTaxOECV5XRs3NKjBm/kJDdzMzIwV
/cNBZ44lL83jqtxrUnsw1Fej8RKAZnn0QBGSn9ySdQKCAQEAw+RoMozdF1BHuk3Y
NwfWwNFA6xgHnxghofhH4XFjtp+aVNh+vjKcK1cRhUk1LeRrm2OIT87JhpwDiDrr
UBialwYAXpZmBBKWMTWcqb+A7/HIBWRJz8/8ae5H4IQXdiFCDEWR5mt1LGlIBFT9
Tkx4tUHIt231QJWF2MW0yLGTxVro4auiMUCoM2SKlz/gVIuysNZ4eYo1HiS/OcWy
nTuYXiKbJokizxfg7C6y13XzNKR4iDMnOhchZxgzH5TF+XgxOFEcHLlJgPcbvNh3
U/PaxTBSM3fw+GilFGNwjaLY/vnff+N08D5e2m/a89Xztowpnry2eWGekD9YpkbY
1F63EQKCAQAIpB4fgFnX6PeFtQdE/8JsOzhQDj4hB7dW0RXWIU7ar8A8u599IQpN
/LvcXE6U9HIqNoco3fmIVv+FghxOJq8SiWn/U9M2/dvqsVyfe5pEdHRCaoElMk+d
lZggeUhQ3V6Kiq2x80lo4rfgXO/Ev3ETafLqg3oi7P2ZM3HqFltCy4fJSeoF9AtA
9Zu+f0PZ4i5vm5p8XQ8SKOATnLgb/Z28um8MXsWCFsGoyZSRxqz7qecazs+zDo0V
jks9NWBydlr+WNiWaL40FQgLvg+FcYky4T/sFZ0SWm+hTHzdsw7puw/WtShsyeLL
tHRE6DxzLFeUXYMVqhYa4yYLifjZq7plAoIBAQCVF3xS48KqLxOtQ1QRZidP56p1
AIz8BckhnH3YokyLbajmb4zw9cnGNnbYa2fD1LFXkGrOdit4ZwMtuXxdAQKTU5Ce
Odb5C7iZCGFkQ08Nq2SZ3f3KiUhRFS57w37yq7uX3wousr+o+c/hisczXt0wi402
u7A1iD5/H/HAEggJxndasV0tevS9CZHV1jcdAM4bMgOX7+mj7sehtaXGh7XX8YXI
EhfMUU2wCcfAXeNTYFzKgIn6j/Q4GKCjQs02TzQ3hB+9UZPT16oMSnXH66M1AkAy
d3eHTFLfdq9Qa4QPqYbiLbVhrksyT5S0qNMg1sVJY4GUmrVD1eNfQ9cSZNIw
-----END RSA PRIVATE KEY-----
',
        NULL
    );
--
-- Data for Name: authentik_enterprise_license; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_enterprise_licenseusage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_enterprise_licenseusage
VALUES (
        true,
        '2024-03-06 02:27:00.121544+00',
        '3b4e4cbe-6d14-401c-8305-9979bb194543',
        1,
        1,
        false,
        '2023-12-07 02:27:00.121802+00'
    );
INSERT INTO public.authentik_enterprise_licenseusage
VALUES (
        true,
        '2024-03-09 00:39:00.170249+00',
        '92c85710-1d4e-43aa-8135-b60ab3f778fc',
        1,
        1,
        false,
        '2023-12-10 00:39:00.170578+00'
    );
INSERT INTO public.authentik_enterprise_licenseusage
VALUES (
        true,
        '2024-03-09 18:45:00.016919+00',
        'b1e4595e-e67e-4996-8188-a6e07fd709f1',
        1,
        1,
        false,
        '2023-12-10 18:45:00.017258+00'
    );
INSERT INTO public.authentik_enterprise_licenseusage
VALUES (
        true,
        '2024-03-10 04:45:00.014371+00',
        '8bac6bbf-7f57-47bc-babb-62aef41725aa',
        1,
        1,
        false,
        '2023-12-11 04:45:00.014714+00'
    );
INSERT INTO public.authentik_enterprise_licenseusage
VALUES (
        true,
        '2024-03-24 20:01:00.018268+00',
        '13fc15bd-4383-4bab-a80f-cba0e148e452',
        1,
        1,
        false,
        '2023-12-25 20:01:00.018687+00'
    );
--
-- Data for Name: authentik_events_event; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_events_event
VALUES (
        'e50415cd-625c-4d01-aa2a-e82bb1ab66a2',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": 6, "app": "authentik_core", "name": "", "model_name": "user"}, "http_request": {"args": {}, "path": "/api/v3/outposts/instances/", "method": "GET"}}',
        '127.0.0.1',
        '2023-12-06 23:54:25.79761+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-05 23:54:25.796231+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'f9ad12df-0e53-4c41-a06b-32de5436186b',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 6, "app": "authentik_core", "name": "Outpost authentik Embedded Outpost Service-Account", "model_name": "user"}, "http_request": {"args": {}, "path": "/api/v3/outposts/instances/", "method": "GET"}}',
        '127.0.0.1',
        '2023-12-06 23:54:25.812833+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-05 23:54:25.811741+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '832d5141-2174-4084-aec6-c86ff0a21824',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 6, "app": "authentik_core", "name": "Outpost authentik Embedded Outpost Service-Account", "model_name": "user"}, "http_request": {"args": {}, "path": "/api/v3/outposts/instances/", "method": "GET"}}',
        '127.0.0.1',
        '2023-12-06 23:54:25.819477+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-05 23:54:25.818488+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'c0c16291-efc4-4566-91ba-8b6d9682bc84',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 6, "app": "authentik_core", "name": "Outpost authentik Embedded Outpost Service-Account", "model_name": "user"}, "http_request": {"args": {}, "path": "/api/v3/outposts/instances/", "method": "GET"}}',
        '127.0.0.1',
        '2023-12-06 23:54:25.834646+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-05 23:54:25.833661+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '5068ebc0-03f6-447b-8560-acf0b4f19209',
        'password_set',
        'authentik.events.signals',
        '{}',
        '255.255.255.255',
        '2023-12-07 00:22:20.035372+00',
        '{"pk": 5, "email": "root@example.com", "username": "akadmin"}',
        '2024-12-06 00:22:20.034951+00',
        true,
        '{"pk": "30c6ced04ee043febab6b3737b07a09f", "app": "authentik_tenants", "name": "Tenant fallback", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '90ccbceb-4454-4433-b9c7-034691060926',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {}, "path": "/api/v3/flows/executor/initial-setup/", "method": "GET"}}',
        '172.30.0.1',
        '2023-12-07 00:22:20.169816+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:22:20.168693+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '9769f3d6-608e-44dc-823a-e07b4a4c245b',
        'user_write',
        'authentik.events.signals',
        '{"email": "admin@eidash.app", "created": false, "password": "********************", "http_request": {"args": {}, "path": "/api/v3/flows/executor/initial-setup/", "method": "GET"}, "password_repeat": "********************", "oobe-header-text": "Welcome to authentik! Please set a password for the default admin user, akadmin."}',
        '172.30.0.1',
        '2023-12-07 00:22:20.180669+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:22:20.17954+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '474dd114-733a-4408-afaf-1a7c859aae64',
        'login',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/initial-setup/", "method": "GET"}}',
        '172.30.0.1',
        '2023-12-07 00:22:20.219594+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:22:20.21917+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '0913b37c-bc11-4820-ab60-e3f834c9c26d',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {}, "path": "/api/v3/flows/executor/initial-setup/", "method": "GET"}}',
        '172.30.0.1',
        '2023-12-07 00:22:20.231439+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:22:20.231121+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '35af19d8-06ea-4cb9-9740-56812c519c1f',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "d6b1a5508b2d48288ce8bdbda9d6038e", "app": "authentik_outposts", "name": "authentik Embedded Outpost", "model_name": "outpost"}, "http_request": {"args": {}, "path": "/api/v3/outposts/instances/d6b1a550-8b2d-4828-8ce8-bdbda9d6038e/", "method": "PUT"}}',
        '172.30.0.1',
        '2023-12-07 00:22:40.745753+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:22:40.74538+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'bab868e0-0f34-42f9-a7b0-787680fe5d3f',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "d6b1a5508b2d48288ce8bdbda9d6038e", "app": "authentik_outposts", "name": "authentik Embedded Outpost", "model_name": "outpost"}, "http_request": {"args": {"seen": "false", "user": "5", "ordering": "-created", "page_size": "1"}, "path": "/api/v3/events/notifications/", "method": "GET"}}',
        '172.30.0.1',
        '2023-12-07 00:22:40.749192+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:22:40.748916+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '4d758cce-cc1c-44c3-894d-3f5d5747acb3',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "6122946dfdf746cfb88496ba2cd2cc25", "app": "authentik_flows", "name": "eidash-application-authorization", "model_name": "flow"}, "http_request": {"args": {}, "path": "/api/v3/flows/instances/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:25:13.442659+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:25:13.442252+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '0365e93c-1160-436c-b1ae-ede3bcdc3c94',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "3b9cb6cb69d84014a214ff18053d0011", "app": "authentik_policies_password", "name": "password-complexity", "model_name": "passwordpolicy"}, "http_request": {"args": {}, "path": "/api/v3/policies/password/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:31:46.219232+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:31:46.218832+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '2ac03fed-8b01-48c9-bb8c-e565f937015a',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "f1d0d18a7dbe44b6929a4cc0bba29f4b", "app": "authentik_stages_prompt", "name": "username", "model_name": "prompt"}, "http_request": {"args": {}, "path": "/api/v3/stages/prompt/prompts/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:32:40.168298+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:32:40.167788+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '391c5b7f-755b-47ca-834a-8177ccb23a0e',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "6f81e3a503254343974bda371c388374", "app": "authentik_stages_prompt", "name": "email", "model_name": "prompt"}, "http_request": {"args": {}, "path": "/api/v3/stages/prompt/prompts/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:33:12.697376+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:33:12.696962+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'a8c9efb4-39ae-4baf-bb0a-18123a7590e4',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "d2430938b5aa41f699e5fdd6f101f1ed", "app": "authentik_stages_prompt", "name": "password", "model_name": "prompt"}, "http_request": {"args": {}, "path": "/api/v3/stages/prompt/prompts/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:33:49.317489+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:33:49.317117+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '254965f6-8041-488a-82ed-dd542d1df927',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "1c75f2f8e71b431da3f47698d74276b1", "app": "authentik_stages_prompt", "name": "password-repeat", "model_name": "prompt"}, "http_request": {"args": {}, "path": "/api/v3/stages/prompt/prompts/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:34:10.662295+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:34:10.661896+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '15fd894a-0c3f-4a6c-814e-f32fff2b1dbb',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "1fd719525e8b45eb9f5151031cf37dd3", "app": "authentik_stages_identification", "name": "recovery-authentication-identification", "model_name": "identificationstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/identification/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:35:01.231143+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:35:01.230636+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '92e1b6d2-5a17-4a48-8d74-362debb25545',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "e86d83396c5e4b2588878f7a53a31c08", "app": "authentik_stages_email", "name": "recovery-email", "model_name": "emailstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/email/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:35:28.215924+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:35:28.215582+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '781e975f-374f-480f-8657-b6694fec8707',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "f9a7864e12e74225ae2bb8149e30ed3f", "app": "authentik_flows", "name": "Recovery", "model_name": "flow"}, "http_request": {"args": {}, "path": "/api/v3/flows/instances/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:35:51.558302+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:35:51.557889+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '7b53c8d3-ca43-43a7-938a-7a22cc1859b5',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "6bb99cd76f4846218d67db33adf45dcb", "app": "authentik_flows", "name": "Flow-stage binding #0 to f9a7864e-12e7-4225-ae2b-b8149e30ed3f", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:36:14.868126+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:36:14.867684+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '638edfb8-f1a0-41ab-845a-2a5d8751ead8',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "7718f812526c4b8d8986f8bd1561ad3c", "app": "authentik_flows", "name": "Flow-stage binding #10 to f9a7864e-12e7-4225-ae2b-b8149e30ed3f", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:36:29.556728+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:36:29.556344+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '9ab76074-7e9b-47fa-9e8b-4fc6a960d585',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "eb5af43d491b45668542372c8b6a494a", "app": "authentik_flows", "name": "Flow-stage binding #20 to f9a7864e-12e7-4225-ae2b-b8149e30ed3f", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:36:42.096562+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:36:42.096179+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '05edfb16-34f9-4e78-baa7-99ab252becfb',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "968582857f8f43e2bd8b41d0392957e0", "app": "authentik_flows", "name": "Flow-stage binding #30 to f9a7864e-12e7-4225-ae2b-b8149e30ed3f", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:36:58.790918+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:36:58.790534+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '4e8d9f80-bac2-4883-8833-973f63a9ec0d',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "9d8e83bcaa734527bc4e9f8f6949edf5", "app": "authentik_stages_prompt", "name": "default-password-change-prompt", "model_name": "promptstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/prompt/stages/9d8e83bc-aa73-4527-bc4e-9f8f6949edf5/", "method": "PUT"}}',
        '172.30.0.1',
        '2023-12-07 00:37:23.200778+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:37:23.200393+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'b6caa42e-91d6-44c4-85a6-76a901025580',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "e2ea28b0c3974d3dbcf3770bf1a0f63b", "app": "authentik_stages_identification", "name": "default-authentication-identification", "model_name": "identificationstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/identification/e2ea28b0-c397-4d3d-bcf3-770bf1a0f63b/", "method": "PUT"}}',
        '172.30.0.1',
        '2023-12-07 00:38:12.155813+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:38:12.155411+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '26d3be99-a324-43fa-ac11-eb52020916a9',
        'model_deleted',
        'authentik.events.middleware',
        '{"model": {"pk": "a6f66fdf0d044245ac147b7e52ef3811", "app": "authentik_flows", "name": "Flow-stage binding #20 to 771a9e4f-58ea-4b30-905a-e4cd49e838e7", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/a6f66fdf-0d04-4245-ac14-7b7e52ef3811/", "method": "DELETE"}}',
        '172.30.0.1',
        '2023-12-07 00:38:24.165155+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:38:24.164798+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'b1786e48-9d73-4884-95fa-06fb70364c93',
        'model_deleted',
        'authentik.events.middleware',
        '{"model": {"pk": "e8e22744921b47d189d4634a07d348e7", "app": "authentik_policies", "name": "Binding from Flow-stage binding #20 to 771a9e4f-58ea-4b30-905a-e4cd49e838e7 #10 to Policy default-authentication-flow-password-stage", "model_name": "policybinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/a6f66fdf-0d04-4245-ac14-7b7e52ef3811/", "method": "DELETE"}}',
        '172.30.0.1',
        '2023-12-07 00:38:24.179906+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:38:24.17944+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '82aa4d30-2c4c-4c1a-8dd2-af3d8a38cef1',
        'logout',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/default-invalidation-flow/", "method": "GET"}}',
        '172.30.0.1',
        '2023-12-07 00:38:56.003532+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:38:56.003135+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '37901c54-414f-4f54-9d71-4221aa9104fe',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.30.0.1',
        '2023-12-07 00:39:12.106595+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:39:12.106254+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '23fdcaab-8aa2-4ede-916e-fe0c0106ed67',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.30.0.1',
        '2023-12-07 00:39:12.1178+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:39:12.117509+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'd47d4c9d-969c-4246-8789-50380f6db98c',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "1f2fe4254a9f455b86edaae193b56ca1", "app": "authentik_core", "name": "authentik Users", "model_name": "group"}, "http_request": {"args": {}, "path": "/api/v3/core/groups/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:40:57.863152+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:40:57.862641+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '3b0e0177-86a7-489b-aceb-2e8242216a4f',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "86b37c28906242e0975cb6e17e5d3cec", "app": "authentik_stages_email", "name": "email-account-confirmation", "model_name": "emailstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/email/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:41:37.028721+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:41:37.028375+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'fa00aad7-3d70-4087-9906-3fa04822ef97',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "a77bbc8409ef434a90b385706912ad91", "app": "authentik_flows", "name": "main-page-enrollment", "model_name": "flow"}, "http_request": {"args": {}, "path": "/api/v3/flows/instances/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:42:09.221836+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:42:09.221446+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'cdfc18ad-45b7-44fb-8ecd-13b9550adfa4',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "55f3ece4651644e287217ebc9ee161fd", "app": "authentik_flows", "name": "Flow-stage binding #10 to a77bbc84-09ef-434a-90b3-85706912ad91", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:42:30.519212+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:42:30.51872+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '90f16abb-7512-423d-928b-6e3e4da51df9',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "f5195218f241440da3c41fb5ddd26f25", "app": "authentik_stages_prompt", "name": "default-source-enrollment-prompt", "model_name": "promptstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/prompt/stages/f5195218-f241-440d-a3c4-1fb5ddd26f25/", "method": "PUT"}}',
        '172.30.0.1',
        '2023-12-07 00:42:44.283931+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:42:44.283544+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'bbceae03-17ea-4daa-8073-ca40b40d8104',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "7ab48a5defbb47cfa708137ea445f88f", "app": "authentik_flows", "name": "Flow-stage binding #20 to a77bbc84-09ef-434a-90b3-85706912ad91", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:43:18.167504+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:43:18.16711+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'cb851a2d-3255-41b9-8f54-977104ef7399',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "20134ad38a27431e8caf6f43d8afac2b", "app": "authentik_stages_user_write", "name": "default-source-enrollment-write", "model_name": "userwritestage"}, "http_request": {"args": {}, "path": "/api/v3/stages/user_write/20134ad3-8a27-431e-8caf-6f43d8afac2b/", "method": "PUT"}}',
        '172.30.0.1',
        '2023-12-07 00:43:46.427487+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:43:46.427073+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '75553bf7-c7a9-4086-9770-596923ef7c2a',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "2ef364c36f044e3384607b97848fe1dc", "app": "authentik_flows", "name": "Flow-stage binding #30 to a77bbc84-09ef-434a-90b3-85706912ad91", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.30.0.1',
        '2023-12-07 00:43:57.611922+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:43:57.611529+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '2e056916-40a4-4d0a-86bc-dfb59ef20ba0',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "86b37c28906242e0975cb6e17e5d3cec", "app": "authentik_stages_email", "name": "email-account-confirmation", "model_name": "emailstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/email/86b37c28-9062-42e0-975c-b6e17e5d3cec/", "method": "PATCH"}}',
        '172.30.0.1',
        '2023-12-07 00:44:10.373713+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:44:10.37329+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'd5fad858-049d-44ee-8e03-7e754c4996d6',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "e2ea28b0c3974d3dbcf3770bf1a0f63b", "app": "authentik_stages_identification", "name": "default-authentication-identification", "model_name": "identificationstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/identification/e2ea28b0-c397-4d3d-bcf3-770bf1a0f63b/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-07 00:47:18.993462+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:47:18.992961+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '0253aea9-ec81-4e7e-8b9b-5c47e8c54ce9',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": 7, "app": "authentik_core", "name": "", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/enrollment/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 00:47:49.82786+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:47:49.826817+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'aaa00e17-6b59-4de3-84f5-e8a6f1ef2fe2',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 7, "app": "authentik_core", "name": "", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/enrollment/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 00:47:49.841448+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:47:49.840534+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '54a5fe4a-b132-412f-b084-d85e152fac64',
        'user_write',
        'authentik.events.signals',
        '{"email": "me@fyko.net", "created": true, "password": "********************", "username": "fyko", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/enrollment/", "method": "GET"}, "password_repeat": "********************"}',
        '172.31.0.1',
        '2023-12-07 00:47:49.849762+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-06 00:47:49.848919+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '84cab893-0ced-4682-b3b4-5de7641a95e3',
        'email_sent',
        'authentik.stages.email.tasks',
        '{"body": "\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtm=l\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n\n    <style type=\"text/css\">\n      body {\n        font-family: Arial, sans-serif;\n        font-size: 14px;\n        color: #212124;\n      }\n\n      h2 {\n        display: inline-block;\n        font-family: Arial, sans-serif;\n        font-size: 28px;\n        line-height: 125%;\n        font-weight: 700;\n        padding-top: 10px;\n        padding-bottom: 10px;\n        margin: 0;\n      }\n\n      .flexibleImage {\n        height: auto;\n      }\n\n      img.logo {\n        max-width: 100%;\n        max-height: 35px;\n      }\n\n      .properties-table {\n        width: 100%;\n        text-align: left;\n        font-size: 14px;\n        font-weight: 400;\n        font-family: Arial, sans-serif;\n        border-collapse: collapse;\n      }\n\n      .properties-table tr:first-child {\n        border-top: 1px solid rgba(196, 196, 196, 0.2);\n      }\n\n      .properties-table tr:first-child>td {\n        padding-top: 24px;\n      }\n\n      .properties-table tr:last-child {\n        border-bottom: 1px solid rgba(196, 196, 196, 0.2);\n      }\n\n      .properties-table tr:last-child>td {\n        padding-bottom: 24px;\n      }\n\n      .properties-table td {\n        line-height: 24px;\n        vertical-align: top;\n        padding: 4px 15px;\n      }\n\n      .td-right {\n        text-align: right;\n        white-space: nowrap;\n      }\n      .btn-primary {\n        text-decoration: none;\n        color: #FFF;\n        background-color: #348eda;\n        border: solid #348eda;\n        width: 100%;\n        line-height: 2em;\n        font-weight: bold;\n        text-align: center;\n        cursor: pointer;\n        display: inline-block;\n        text-transform: capitalize;\n      }\n      .btn-primary a {\n        color: #fff;\n      }\n    </style>\n  </head>\n\n  <body>\n    <div class=\"wrapper\">\n      <center>\n        <div style=\"-ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; table-layout: fixed; width: 100%; max-width: 448px; padding: 60px 20px; font-size: 14px;\">\n          <table border=\"0\" align=\"center\" width=\"100%\">\n            <tr>\n              <td style=\"padding: 20px;border: 1px solid #c1c1c1;\">\n                <table width=\"100%\" style=\"background-color: #FFFFFF; border-spacing: 0; margin-top: 15px;\">\n                  <tr height=\"80\">\n                    <td align=\"center\" style=\"padding: 20px 0;\">\n                      <img src=\"cid:logo.png\" border=\"0=\" alt=\"authentik logo\" class=\"flexibleImage logo\">\n                    </td>\n                  </tr>\n                  \n<tr>\n  <td align=\"center\">\n    <h1>\n      Welcome!\n    </h1>\n  </td>\n</tr>\n<tr>\n  <td align=\"center\">\n    <table border=\"0\">\n      <tr>\n        <td align=\"center\" style=\"max-width: 300px; padding: 20px 0; color: #212124;\">\n          We''re excited to have you get started. First, you need to confirm your account. Just press the button below.\n        </td>\n      </tr>\n      <tr>\n        <td align=\"center\" class=\"btn btn-primary\">\n          <a id=\"confirm\" href=\"http://fyko.internal:9000/if/flow/enrollment/?next=%2F&amp;flow_token=LGMHtSaGLMrjknkyQm7IGhmJGLDYBo0HUrS3X8WJk4ZkPUchpiVwAxGrQpsN\" rel=\"noopener noreferrer\" target=\"_blank\">Confirm Account</a>\n        </td>\n      </tr>\n    </table>\n  </td>\n</tr>\n<td>\n\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table border=\"0\" style=\"margin-top: 10px;\" width=\"100%\">\n                  <tr>\n                    <td style=\"background: #FAFBFB;\">\n                      <table style=\"width: 100%;\">\n                        \n<tr>\n  <td style=\"padding: 20px; font-size: 12px; color: #212124;word-break: break-all; overflow-wrap: break-word;\" align=\"center\">\n    \n    If that doesn''t work, copy and paste the following link in your browser: http://fyko.internal:9000/if/flow/enrollment/?next=%2F&amp;flow_token=LGMHtSaGLMrjknkyQm7IGhmJGLDYBo0HUrS3X8WJk4ZkPUchpiVwAxGrQpsN\n    \n  </td>\n</tr>\n\n                      </table>\n                    </td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td align=\"center\">\n                Powered by <a href=\"https://goauthentik.io?utm_source=authentik&utm_medium=email\">authentik</a>.\n              </td>\n            </tr>\n          </table>\n        </div>\n      </center>\n    </div>\n  </body>\n</html>\n", "message": "Email to me@fyko.net sent", "subject": "Account Confirmation", "to_email": ["me@fyko.net"], "from_email": "auth@fyko.net"}',
        NULL,
        '2023-12-07 00:47:50.866791+00',
        '{}',
        '2024-12-06 00:47:50.865985+00',
        true,
        '{"pk": "d3d93f74b2444fad98d05328c6445c0f", "app": "authentik_tenants", "name": "Tenant fallback", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '4b64f8ea-cb4d-43d0-98a7-6262f48a0c65',
        'model_deleted',
        'authentik.events.middleware',
        '{"model": {"pk": "ab885fde698c4ddcb47284775e40f193", "app": "authentik_core", "name": "ak-email-stage-email-account-confirmation-5b6d476c-7b7a-4c0d-bcfe-eef86c8449a6 (expires=2023-12-07 01:18:49.886170+00:00)", "model_name": "token"}, "http_request": {"args": {"next": "/", "flow_token": "********************"}, "path": "/api/v3/flows/executor/enrollment/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 00:48:35.091752+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:48:35.089982+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '3be9acd5-1f09-46bc-ba75-0d5025586b67',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 7, "app": "authentik_core", "name": "", "model_name": "user"}, "http_request": {"args": {"next": "/", "flow_token": "********************"}, "path": "/api/v3/flows/executor/enrollment/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 00:48:35.11026+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:48:35.109308+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'f5eb5295-0d6b-4ab9-8a27-ccf2a09e57bd',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-07 00:48:50.675452+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-06 00:48:50.675128+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '482f99ba-85c4-40ad-9e20-6eaa6269d11c',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 7, "app": "authentik_core", "name": "", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 00:48:50.687051+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 00:48:50.686765+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '483529e9-47e3-4ee4-a890-2d0da9385310',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "996c98db599442098b0dc04999324417", "app": "authentik_stages_user_write", "name": "enrollment-invitation-write", "model_name": "userwritestage"}, "http_request": {"args": {}, "path": "/api/v3/stages/user_write/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:51:26.98527+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:51:26.984899+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'f6d9eb66-f393-4c34-b779-e4062d23e7a9',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "5a807e4a9086449fa42b9bf9e9ee6e0c", "app": "authentik_stages_invitation", "name": "enrollment-invitation", "model_name": "invitationstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/invitation/stages/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:51:50.35668+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:51:50.356322+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '591e9377-dda7-432f-96bc-7863404386b9',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "bcbfcb4ba8db4ce1bd1cee481eb06f8b", "app": "authentik_flows", "name": "Enrollment Invitation", "model_name": "flow"}, "http_request": {"args": {}, "path": "/api/v3/flows/instances/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:52:16.764838+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:52:16.764402+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '78ae6dd1-a509-480b-892a-157cfd364266',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "860501ccfb374a55b8acf07b5643607d", "app": "authentik_flows", "name": "Flow-stage binding #10 to bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:52:35.968287+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:52:35.96785+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '3624c1e0-61fd-4377-af1d-965a987d1933',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "441450ce0dbb4aa19057c6af4a810cd4", "app": "authentik_flows", "name": "Flow-stage binding #20 to bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:52:46.891062+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:52:46.890647+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ce0434a8-257a-4f99-bcfd-d824597c3065',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "8c9fc43692b8485f9c62ee47789798ad", "app": "authentik_flows", "name": "Flow-stage binding #30 to bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:53:35.265537+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:53:35.265094+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'a5d8d736-8077-494d-b5b1-b1c11237c646',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "31513c6d238f43d6952c2c28a7adea4e", "app": "authentik_flows", "name": "Flow-stage binding #40 to bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:53:56.357246+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:53:56.356845+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '0405c64a-6db5-4d44-9df1-395d34618677',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "e392ac3d477b473a9d65b20434113804", "app": "authentik_stages_invitation", "name": "testing", "model_name": "invitation"}, "http_request": {"args": {}, "path": "/api/v3/stages/invitation/invitations/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 00:54:16.634794+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 00:54:16.634399+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'a42c982a-267a-46b8-b77c-b23ce51779ff',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "c70cb4fe15cd453d9835235bdf938fc9", "app": "authentik_stages_authenticator_validate", "name": "default-authentication-mfa-validation", "model_name": "authenticatorvalidatestage"}, "http_request": {"args": {}, "path": "/api/v3/stages/authenticator/validate/c70cb4fe-15cd-453d-9835-235bdf938fc9/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-07 01:04:05.170964+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 01:04:05.170487+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '9fbc0e6b-b3c9-42d6-9829-b58bd146f8d9',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "c70cb4fe15cd453d9835235bdf938fc9", "app": "authentik_stages_authenticator_validate", "name": "default-authentication-mfa-validation", "model_name": "authenticatorvalidatestage"}, "http_request": {"args": {}, "path": "/api/v3/stages/authenticator/validate/c70cb4fe-15cd-453d-9835-235bdf938fc9/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-07 01:05:49.523554+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 01:05:49.523142+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '876357bd-8534-44d1-9ce4-a70056293144',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "08918cadf65047af99ec0f062e2c5b94", "app": "authentik_stages_captcha", "name": "cloudflare-turnstile", "model_name": "captchastage"}, "http_request": {"args": {}, "path": "/api/v3/stages/captcha/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 01:10:17.254991+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 01:10:17.254381+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ed1c86e6-bf06-4a65-8cc4-e45dfbb7b894',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "6dabcea34f094995ab1c911978d1b28b", "app": "authentik_flows", "name": "Flow-stage binding #15 to 771a9e4f-58ea-4b30-905a-e4cd49e838e7", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 01:11:22.693856+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 01:11:22.693419+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'fa7832bd-e26a-4227-9d12-d97852c0a06d',
        'logout',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/default-invalidation-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 01:11:51.78575+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 01:11:51.785284+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '634c94e6-df62-4df9-8070-891a084b7a72',
        'login_failed',
        'authentik.events.signals',
        '{"stage": {"pk": "e2ea28b0c3974d3dbcf3770bf1a0f63b", "app": "authentik_stages_identification", "name": "default-authentication-identification", "model_name": "identificationstage"}, "password": "********************", "username": "akadmin", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 01:13:29.103883+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 01:13:29.10304+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '467c93cd-562c-4911-bee6-51f7e7f35148',
        'logout',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/default-invalidation-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 01:20:15.817498+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 01:20:15.815854+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '242db923-d583-4b10-b1ee-5a86b30a685c',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-07 01:20:31.452795+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 01:20:31.452454+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '5abf5fb8-1d99-46ab-ab91-e68752051df0',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 01:20:31.464539+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 01:20:31.464239+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'd8adc6fb-844e-4aa0-9e4c-7b361c8b483d',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "bb342e026486469394da185b4e8878ff", "app": "authentik_flows", "name": "Passwordless Authentication", "model_name": "flow"}, "http_request": {"args": {}, "path": "/api/v3/flows/instances/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 05:02:06.495408+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:02:06.494856+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ee74304c-4bd1-4732-8f66-8882a3d23e55',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "a13c69a1aaa24a949df0c5a945fc29d9", "app": "authentik_stages_authenticator_validate", "name": "Passwordless WebAuthn", "model_name": "authenticatorvalidatestage"}, "http_request": {"args": {}, "path": "/api/v3/stages/authenticator/validate/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 05:03:20.133441+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:03:20.132986+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ffa9924c-9a0d-40d8-8279-e04240c09a32',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "4ea620e7ca4b488f83364106bfc8c69e", "app": "authentik_flows", "name": "Flow-stage binding #10 to bb342e02-6486-4693-94da-185b4e8878ff", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 05:03:42.738375+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:03:42.737867+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '20350715-f2a8-41d9-92e8-c67509b1444a',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "686f9cca215d45f09ff19f8e89ee0066", "app": "authentik_flows", "name": "Flow-stage binding #20 to bb342e02-6486-4693-94da-185b4e8878ff", "model_name": "flowstagebinding"}, "http_request": {"args": {}, "path": "/api/v3/flows/bindings/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 05:04:14.791946+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:04:14.791554+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '8925bccb-c909-4932-bc41-d4a0c4708f86',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "e2ea28b0c3974d3dbcf3770bf1a0f63b", "app": "authentik_stages_identification", "name": "default-authentication-identification", "model_name": "identificationstage"}, "http_request": {"args": {}, "path": "/api/v3/stages/identification/e2ea28b0-c397-4d3d-bcf3-770bf1a0f63b/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-07 05:05:02.014151+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:05:02.013609+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'e31cfb14-fd83-4a8b-84cb-e0ededa18ac6',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-07 05:05:45.05669+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-06 05:05:45.056253+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'c511666a-f9cd-4b51-b339-08196f47e5b3',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 7, "app": "authentik_core", "name": "", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 05:05:45.068865+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 05:05:45.068524+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '35c40dc9-5ded-432f-a67e-887c6593c3b7',
        'logout',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/default-invalidation-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 05:06:55.670865+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-06 05:06:55.670459+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '0a58031b-3d58-499b-86d0-a2cb2e8d74f2',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "6122946dfdf746cfb88496ba2cd2cc25", "app": "authentik_flows", "name": "eidash-application-authorization", "model_name": "flow"}, "http_request": {"args": {}, "path": "/api/v3/flows/instances/eidash-application-authorization/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-07 05:10:03.472378+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:10:03.471949+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'cffabd3e-13d5-4222-9845-8a51badd9ea3',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 05:13:22.371198+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:13:22.370837+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'c7c4f944-f1d4-45ff-8f44-787d8cfbdc8a',
        'model_created',
        'authentik.events.middleware',
        '{"model": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}, "http_request": {"args": {}, "path": "/api/v3/core/applications/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-07 05:14:40.28491+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:14:40.284359+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'b1554a0b-b0fa-421e-b19c-2bb3788b8259',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/1/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-07 05:15:33.248345+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:15:33.247946+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '78063d5a-ef01-4c21-ad10-c2248c9918ff',
        'logout',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/default-invalidation-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 05:18:47.643368+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 05:18:47.641983+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'a2a80cb8-2eb5-4644-ae8b-66a87fab04dc',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-07 05:18:59.597239+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-06 05:18:59.596882+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '381c99f4-cc24-4d73-905d-d3f221e3b57a',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-07 05:18:59.608414+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-06 05:18:59.608094+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '189802c7-109c-42cd-b8b0-fdc495e7fe8c',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-09 23:39:02.661149+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:39:02.660545+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '6ed98eaf-9fd1-4f26-94d8-369f36550085',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-09 23:39:02.674877+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-08 23:39:02.674518+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '711e5396-5507-4605-92ec-e48ffa19d725',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/1/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-09 23:39:41.293463+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:39:41.292818+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'a102dc32-92c2-47db-8a73-0dcbe814eb36',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/1/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-09 23:40:02.445119+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:40:02.444726+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'db2128d5-d9db-4bcb-9b7a-e97ba526f49b',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/1/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-09 23:41:42.316839+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:41:42.316349+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '59ac6269-4aea-48ae-a7f8-3713cb4cce50',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/1/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-09 23:42:33.975199+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:42:33.974775+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '35bc2c32-71e9-48db-9602-8242b264810a',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid openid profile email", "http_request": {"args": {"nonce": "0qNeTzWTauW-h_03mq2ctQ", "scope": "openid openid profile email", "state": "xNbO3ayzJmZMyjyUHg6_kQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://localhost:8080/callback", "response_type": "code", "code_challenge": "3Q2iDGrsyY28ySA-4Vl6xqOizbaF1uNfljWfWZwE9io", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-09 23:42:43.491883+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:42:43.491363+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'c22b55d7-413c-4efa-b46d-b5836277397e',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid openid profile email", "http_request": {"args": {"nonce": "bJtys59H5Se1Fd2gCB9Jwg", "scope": "openid openid profile email", "state": "p_V3_LWrEDUsKe_4ftSnqA", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://localhost:8080/callback", "response_type": "code", "code_challenge": "VjNfGxfb9fydSyE9p9X_ZrCnhM6s2svD1CdMQLNVhiY", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-09 23:42:53.896249+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:42:53.895571+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '51490b75-2c3b-4090-af76-cfcb38b8eae0',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid openid profile email", "http_request": {"args": {"nonce": "BoUKLqK7YfmAqrZKYQCkpA", "scope": "openid openid profile email", "state": "gvu3inZF90xkuPuJK8LGDQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://localhost:8080/callback", "response_type": "code", "code_challenge": "8RsKLbtLMK72Guc7_bVRvh5mXoLDY968GFImOCFSOuc", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-09 23:43:02.369583+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:43:02.369037+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '3f524f4e-5121-416f-b67b-0d998513eb3f',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid openid profile email", "http_request": {"args": {"nonce": "EMjT_MIp1O1LPBulK4IKbA", "scope": "openid openid profile email", "state": "FEsV8Kg1fF0uEGgXA1OFnA", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://localhost:8080/callback", "response_type": "code", "code_challenge": "Bv2pf-aM4UZPpA1Y69mX0BLbGxohg2p1lZMao0vaP00", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-09 23:43:58.84543+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:43:58.844961+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'c108c1d4-518a-4f19-b574-579d93264202',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid openid profile email", "http_request": {"args": {"nonce": "JQ2OJyTiii0LdHH6Z0oGxA", "scope": "openid openid profile email", "state": "AYhCVmprVYiERHaqcVUOfg", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://localhost:8080/callback", "response_type": "code", "code_challenge": "T-QCzVuhnL6NOXq1O0DQe4-bMkEjMh7dHFCXc53LLX0", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-09 23:49:01.73028+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-08 23:49:01.729767+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'e4c2bb68-2eab-4f93-91fd-ae23f3a4d477',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/1/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-10 01:35:59.093839+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 01:35:59.092891+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '97a4153d-7bde-47d3-8300-ee9a9bda8026',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 1, "app": "authentik_providers_oauth2", "name": "Wordmesh", "model_name": "oauth2provider"}, "http_request": {"args": {}, "path": "/api/v3/providers/oauth2/1/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-10 01:37:13.36965+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 01:37:13.369211+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'b1e57bfe-23c8-4e13-af94-d20f8278b557',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "g7ZogAzQwdT4I3ZINE7E2Q", "scope": "openid profile email", "state": "mcZgXDtopuSH4WOAO66ElA", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "GOeCUTW7acgn0jCNLh8xckT7X52HNoiq8lxfa0p8p2U", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 01:37:31.761581+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 01:37:31.761058+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '7b72a430-9168-4ae2-aa47-10554d393678',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "s18kWLwNV5lIF8KdqjCD3Q", "scope": "openid profile email", "state": "rcRM6FESJZWbDa6KZuii0A", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "YlskngCEdHbR-Zs9WzmX7t2AxqVRlIhocZh5ax7kBSE", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 01:39:23.13605+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 01:39:23.135436+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '2600c7a2-b4a2-4442-bece-29b63ac9af81',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "I4qNCst8nlTDgNY_fg1mPw", "scope": "openid profile email", "state": "l4ezN64m2wjhP-9eEDu4tQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "KjnsUp1GEo7AyP3Ex_u_94-Vg1d3k5Dtpdh05PHqM6Y", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 03:06:08.613079+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:06:08.612459+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'a5691b72-f8b6-4eb9-a2d8-56599d694808',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "4tZrpjUK5S03MkCEhG1DMw", "scope": "openid profile email", "state": "-BE9l7FzpLPlZRtdnHa1WA", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "YeQrIoHPNGUUMubYsoEr2I_2RiBeHzM9lD0iJQhQWbI", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 03:07:31.762548+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:07:31.762115+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '38efdc34-8e8d-4896-bc04-7eb95bb7731a',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "PbikQbUfnf8Zk936Q08SZQ", "scope": "openid profile email", "state": "rE3NCBfuKbt3asd-KxhKKg", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "44_Adw7BVcHo-ZjTWkZUcZ4W8ljVztRsmTF_NX8bh7M", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 03:10:21.774505+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:10:21.774019+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '006f5148-d4d6-49ed-9529-6f637180e3e0',
        'login_failed',
        'authentik.events.signals',
        '{"stage": {"pk": "e2ea28b0c3974d3dbcf3770bf1a0f63b", "app": "authentik_stages_identification", "name": "default-authentication-identification", "model_name": "identificationstage"}, "password": "********************", "username": "akadmin", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-10 03:19:57.65945+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-09 03:19:57.658594+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '04da2f22-4311-4895-a7ca-a4adbf85c69a',
        'login_failed',
        'authentik.events.signals',
        '{"stage": {"pk": "e2ea28b0c3974d3dbcf3770bf1a0f63b", "app": "authentik_stages_identification", "name": "default-authentication-identification", "model_name": "identificationstage"}, "password": "********************", "username": "akadmin", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-10 03:20:00.362545+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-09 03:20:00.361593+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '72055afc-aa21-490d-a6f7-0b123f9ffed9',
        'login_failed',
        'authentik.events.signals',
        '{"stage": {"pk": "e2ea28b0c3974d3dbcf3770bf1a0f63b", "app": "authentik_stages_identification", "name": "default-authentication-identification", "model_name": "identificationstage"}, "password": "********************", "username": "akadmin", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "POST"}}',
        '172.31.0.1',
        '2023-12-10 03:20:01.19039+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-09 03:20:01.18955+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'c621c22d-bfef-4d2b-b979-9d0433befe5e',
        'logout',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/default-invalidation-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 03:21:07.56562+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:21:07.565097+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '107278d6-0e07-4020-86d5-4f49547ec697',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-10 03:21:14.090746+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-09 03:21:14.090353+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '2cef8e7a-4dc8-4ff5-8ae7-b4bc6cbee52c',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 7, "app": "authentik_core", "name": "", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 03:21:14.103007+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-09 03:21:14.102651+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '78856194-532f-48fb-aaf4-990a0d5a3a52',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 7, "app": "authentik_core", "name": "Carter Himmel", "model_name": "user"}, "http_request": {"args": {}, "path": "/api/v3/flows/executor/default-user-settings-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 03:21:36.021409+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-09 03:21:36.021009+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '882ae9ea-f531-43c8-b9ad-74c70eb4e061',
        'user_write',
        'authentik.events.signals',
        '{"name": "Carter Himmel", "email": "me@fyko.net", "created": false, "username": "fyko", "attributes": {"settings": {"locale": ""}}, "http_request": {"args": {}, "path": "/api/v3/flows/executor/default-user-settings-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 03:21:36.030325+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-09 03:21:36.02994+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '903815d3-fe60-47ea-9e78-d69f094b0d90',
        'logout',
        'authentik.events.signals',
        '{"http_request": {"args": {}, "path": "/api/v3/flows/executor/default-invalidation-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 03:21:38.514603+00',
        '{"pk": 7, "email": "me@fyko.net", "username": "fyko"}',
        '2024-12-09 03:21:38.514146+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'aa316768-c351-4d5f-89d4-f4db7ac25ca6',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-10 03:21:43.261801+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:21:43.26139+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '3c17fb61-a95c-4c17-ab2d-6430b9b5bb8a',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {"next": "/"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 03:21:43.274256+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-09 03:21:43.273835+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'cfda00f4-b656-4471-9a24-5c0e6b7aab19',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": "771a9e4f58ea4b30905ae4cd49e838e7", "app": "authentik_flows", "name": "Welcome to authentik!", "model_name": "flow"}, "http_request": {"args": {}, "path": "/api/v3/flows/instances/default-authentication-flow/", "method": "PUT"}}',
        '172.31.0.1',
        '2023-12-10 03:21:58.298195+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:21:58.297576+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'e9e24c76-f9f0-4506-9c0e-0f696ffb5436',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "jf4UynM8f3uR2kc6OTzb_A", "scope": "openid profile email", "state": "eyPQomxocrfVoT7_Vk5ReQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "gb5vo6owwVyXMEkfYvgJ8GPQu_vj0XBisZ91pStZR48", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 03:33:36.994536+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:33:36.994041+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ad133d23-6918-45ee-8428-ff094e847b0f',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "ny5ZluZVWnY_MFzZtWJU0g", "scope": "openid profile email", "state": "wOZUeivz9j4u52QXy93nnA", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "Cm0BWQt-mSeje2yKI95oAHZI652XNHVmbVM63C6HOEI", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 03:35:13.208248+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 03:35:13.207611+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '0756b88f-9ffc-454f-87d0-ccb469e08870',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "bDec8EtFrr4SHInWQMx_ig", "scope": "openid profile email", "state": "xAzQV1_muglmZwAL37BPqg", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "mXb81ODpyOOLWMarjXjA4HILDRUVXZKwzX1j9XxnOEs", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 04:09:40.952429+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 04:09:40.951729+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'd0c5007c-9e22-4a29-a975-61394785f3cd',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "gUdeVBT3Y0bHkTBrIG1VaQ", "scope": "openid profile email", "state": "rc9WDllvyz6kgfQ27uouhA", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "oIqHApaJDP6ZJo3v63AQhlwAtU4QI9zy_Mc4w1pgzYE", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 04:11:53.693371+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 04:11:53.692899+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '664014e2-4718-4316-8644-08dad3b91ec5',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "CAx1f4coj-Dkis6ebpPN6Q", "scope": "openid profile email", "state": "GXic-dOCMofYCRyK1nKrRQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "SgwfRCt25WlnHRST3xCNbx9LD1IlkP04vcRqJxuKMUY", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 04:24:49.15742+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 04:24:49.156847+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'f165ff26-959f-4071-a12b-b2e3beaf88af',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/application/o/authorize/?response_type=code&client_id=UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER&state=LTqdsfCnHkStb8YuosteyA&code_challenge=w0ZeaYydJJYsxeolF3e9x2iYNXm0i-Wewl2rtuBnV5s&code_challenge_method=S256&redirect_uri=http%3A%2F%2Ffyko.internal%3A33939%2Fapi%2Foidc%2Fcallback&scope=openid+profile+email&nonce=UvW4Y0SOZ1_K5MUIfXafUg"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-10 04:26:15.542851+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 04:26:15.542359+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ec923dd7-020e-426e-9b9b-447c2a275d7d',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {"next": "/application/o/authorize/?response_type=code&client_id=UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER&state=LTqdsfCnHkStb8YuosteyA&code_challenge=w0ZeaYydJJYsxeolF3e9x2iYNXm0i-Wewl2rtuBnV5s&code_challenge_method=S256&redirect_uri=http%3A%2F%2Ffyko.internal%3A33939%2Fapi%2Foidc%2Fcallback&scope=openid+profile+email&nonce=UvW4Y0SOZ1_K5MUIfXafUg"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 04:26:15.558074+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-09 04:26:15.557613+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ce5736fe-8a50-43e6-b17a-d108804574ad',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "UvW4Y0SOZ1_K5MUIfXafUg", "scope": "openid profile email", "state": "LTqdsfCnHkStb8YuosteyA", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "w0ZeaYydJJYsxeolF3e9x2iYNXm0i-Wewl2rtuBnV5s", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 04:26:16.061135+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 04:26:16.060666+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'f2281158-b210-44de-9980-27cbe2fa89cd',
        'login',
        'authentik.events.signals',
        '{"auth_method": "password", "http_request": {"args": {"next": "/application/o/authorize/?response_type=code&client_id=UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER&state=VodGCxRoWvak6hoENMcsAQ&code_challenge=Oz0_lRzqNYxvAyosgzP27o4mYdpKEJq6E2G6cyD_KbE&code_challenge_method=S256&redirect_uri=http%3A%2F%2Ffyko.internal%3A33939%2Fapi%2Foidc%2Fcallback&scope=openid+profile+email&nonce=sADSC3Q-mv1D69Rkp44j3A"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}, "auth_method_args": {}}',
        '172.31.0.1',
        '2023-12-10 18:20:28.675197+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 18:20:28.674761+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'a94c8b3c-2a21-4029-bf8b-74e9d9bc5e61',
        'model_updated',
        'authentik.events.middleware',
        '{"model": {"pk": 5, "app": "authentik_core", "name": "authentik Default Admin", "model_name": "user"}, "http_request": {"args": {"next": "/application/o/authorize/?response_type=code&client_id=UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER&state=VodGCxRoWvak6hoENMcsAQ&code_challenge=Oz0_lRzqNYxvAyosgzP27o4mYdpKEJq6E2G6cyD_KbE&code_challenge_method=S256&redirect_uri=http%3A%2F%2Ffyko.internal%3A33939%2Fapi%2Foidc%2Fcallback&scope=openid+profile+email&nonce=sADSC3Q-mv1D69Rkp44j3A"}, "path": "/api/v3/flows/executor/default-authentication-flow/", "method": "GET"}}',
        '172.31.0.1',
        '2023-12-10 18:20:28.688003+00',
        '{"pk": 1, "email": "", "username": "AnonymousUser"}',
        '2024-12-09 18:20:28.687638+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ecd23346-120c-4b20-9fff-6f49e8a1045f',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "sADSC3Q-mv1D69Rkp44j3A", "scope": "openid profile email", "state": "VodGCxRoWvak6hoENMcsAQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "Oz0_lRzqNYxvAyosgzP27o4mYdpKEJq6E2G6cyD_KbE", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 18:20:29.055628+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 18:20:29.055244+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '6fe681ae-c0a9-4830-9137-5febd26008b0',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "X6KZ5giHZ0G30TJuG20KTA", "scope": "openid profile email", "state": "NtiFuLMIvgnbfQdmJE6Q8w", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "vXFYFKRiCjBBy6wrQoa7XACJ02DldOXOkTn735LNdcs", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-10 19:46:37.577996+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-09 19:46:37.577093+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ce7f1ea9-751d-40c2-9ccf-d4da61b664f7',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "1waTgSwWkfNvHU_1LAFW6w", "scope": "openid profile email", "state": "6DPe8OZtgqXrg2gQdb1RJQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "yl5EbD3VmBJhpx2cOHXXh-yCr1i7EmEZF7UGTr4VaXQ", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-11 00:39:34.737788+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-10 00:39:34.736781+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        'ff1461dd-0577-4903-a85c-49c1e43d20da',
        'authorize_application',
        'authentik.providers.oauth2.views.authorize',
        '{"flow": "6122946dfdf746cfb88496ba2cd2cc25", "scopes": "openid profile email", "http_request": {"args": {"nonce": "IxFG02HuDv9zDBrFeaZ9hQ", "scope": "openid profile email", "state": "mXRU3sgHcBF_n39fdPXgVQ", "client_id": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "redirect_uri": "http://fyko.internal:33939/api/oidc/callback", "response_type": "code", "code_challenge": "kHSZ-8oPbDlZsOtIU3ezcNB3EBl8d7rRps7QhI5DEnk", "code_challenge_method": "S256"}, "path": "/api/v3/flows/executor/eidash-application-authorization/", "method": "GET"}, "authorized_application": {"pk": "3d1bc8cf4000491e9b8f8fb00fefa686", "app": "authentik_core", "name": "Wordmesh", "model_name": "application"}}',
        '172.31.0.1',
        '2023-12-11 01:08:05.635179+00',
        '{"pk": 5, "email": "admin@eidash.app", "username": "akadmin"}',
        '2024-12-10 01:08:05.634484+00',
        true,
        '{"pk": "72dbae58e1f649a7a8194f027bc808e4", "app": "authentik_tenants", "name": "Default tenant", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '141e6a58-a2f6-469c-b611-1064cd9eefb5',
        'update_available',
        'authentik.admin.tasks',
        '{"message": "Changelog: https://goauthentik.io/docs/releases/2023.10#fixed-in-2023105", "new_version": "2023.10.5"}',
        NULL,
        '2023-12-25 20:01:00.326492+00',
        '{}',
        '2024-12-24 20:01:00.326096+00',
        true,
        '{"pk": "5cb42376b5764d01bb3447899bc74443", "app": "authentik_tenants", "name": "Tenant fallback", "model_name": "tenant"}'
    );
INSERT INTO public.authentik_events_event
VALUES (
        '53b18056-0433-432f-852a-4587b2844640',
        'email_sent',
        'authentik.stages.email.tasks',
        '{"body": "\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtm=l\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width\">\n\n    <style type=\"text/css\">\n      body {\n        font-family: Arial, sans-serif;\n        font-size: 14px;\n        color: #212124;\n      }\n\n      h2 {\n        display: inline-block;\n        font-family: Arial, sans-serif;\n        font-size: 28px;\n        line-height: 125%;\n        font-weight: 700;\n        padding-top: 10px;\n        padding-bottom: 10px;\n        margin: 0;\n      }\n\n      .flexibleImage {\n        height: auto;\n      }\n\n      img.logo {\n        max-width: 100%;\n        max-height: 35px;\n      }\n\n      .properties-table {\n        width: 100%;\n        text-align: left;\n        font-size: 14px;\n        font-weight: 400;\n        font-family: Arial, sans-serif;\n        border-collapse: collapse;\n      }\n\n      .properties-table tr:first-child {\n        border-top: 1px solid rgba(196, 196, 196, 0.2);\n      }\n\n      .properties-table tr:first-child>td {\n        padding-top: 24px;\n      }\n\n      .properties-table tr:last-child {\n        border-bottom: 1px solid rgba(196, 196, 196, 0.2);\n      }\n\n      .properties-table tr:last-child>td {\n        padding-bottom: 24px;\n      }\n\n      .properties-table td {\n        line-height: 24px;\n        vertical-align: top;\n        padding: 4px 15px;\n      }\n\n      .td-right {\n        text-align: right;\n        white-space: nowrap;\n      }\n      .btn-primary {\n        text-decoration: none;\n        color: #FFF;\n        background-color: #348eda;\n        border: solid #348eda;\n        width: 100%;\n        line-height: 2em;\n        font-weight: bold;\n        text-align: center;\n        cursor: pointer;\n        display: inline-block;\n        text-transform: capitalize;\n      }\n      .btn-primary a {\n        color: #fff;\n      }\n    </style>\n  </head>\n\n  <body>\n    <div class=\"wrapper\">\n      <center>\n        <div style=\"-ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; table-layout: fixed; width: 100%; max-width: 448px; padding: 60px 20px; font-size: 14px;\">\n          <table border=\"0\" align=\"center\" width=\"100%\">\n            <tr>\n              <td style=\"padding: 20px;border: 1px solid #c1c1c1;\">\n                <table width=\"100%\" style=\"background-color: #FFFFFF; border-spacing: 0; margin-top: 15px;\">\n                  <tr height=\"80\">\n                    <td align=\"center\" style=\"padding: 20px 0;\">\n                      <img src=\"cid:logo.png\" border=\"0=\" alt=\"authentik logo\" class=\"flexibleImage logo\">\n                    </td>\n                  </tr>\n                  \n<tr>\n  <td align=\"center\">\n    <h1>\n      update_available\n    </h1>\n  </td>\n</tr>\n<tr>\n  <td align=\"center\">\n    <table border=\"0\">\n      <tr>\n        <td align=\"center\" style=\"max-width: 300px; padding: 20px 0; color: #212124;\">\n          Changelog: https://goauthentik.io/docs/releases/2023.10#fixed-in-2023105\n        </td>\n      </tr>\n      \n      <tr>\n        <td>\n          <table class=\"properties-table\" width=\"100%\">\n            <tbody>\n              \n              <tr>\n                <td class=\"td-right\">user_email</td>\n                <td class=\"td-left\">admin@eidash.app</td>\n              </tr>\n              \n              <tr>\n                <td class=\"td-right\">user_username</td>\n                <td class=\"td-left\">akadmin</td>\n              </tr>\n              \n              <tr>\n                <td class=\"td-right\">message</td>\n                <td class=\"td-left\">Changelog: https://goauthentik.io/docs/releases/2023.10#fixed-in-2023105</td>\n              </tr>\n              \n              <tr>\n                <td class=\"td-right\">new_version</td>\n                <td class=\"td-left\">2023.10.5</td>\n              </tr>\n              \n            </tbody>\n          </table>\n        </td>\n      </tr>\n      \n    </table>\n  </td>\n</tr>\n\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <table border=\"0\" style=\"margin-top: 10px;\" width=\"100%\">\n                  <tr>\n                    <td style=\"background: #FAFBFB;\">\n                      <table style=\"width: 100%;\">\n                        \n\n<tr>\n  <td style=\"padding: 20px; font-size: 12px; color: #212124;\" align=\"center\">\n    \n    This email was sent from the notification transport <code>default-email-transport</code>.\n    \n  </td>\n</tr>\n\n\n                      </table>\n                    </td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n            <tr>\n              <td align=\"center\">\n                Powered by <a href=\"https://goauthentik.io?utm_source=authentik&utm_medium=email\">authentik</a>.\n              </td>\n            </tr>\n          </table>\n        </div>\n      </center>\n    </div>\n  </body>\n</html>\n", "message": "Email to admin@eidash.app sent", "subject": "authentik Notification: update_available", "to_email": ["admin@eidash.app"], "from_email": "auth@fyko.net"}',
        NULL,
        '2023-12-25 20:01:01.472675+00',
        '{}',
        '2024-12-24 20:01:01.472115+00',
        true,
        '{"pk": "5cb42376b5764d01bb3447899bc74443", "app": "authentik_tenants", "name": "Tenant fallback", "model_name": "tenant"}'
    );
--
-- Data for Name: authentik_events_notification; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_events_notification
VALUES (
        'b8b16906-3f9c-4d68-b337-5aefde29ac42',
        'alert',
        'Changelog: https://goauthentik.io/docs/releases/2023.10#fixed-in-2023105',
        '2023-12-25 20:01:00.398547+00',
        false,
        '141e6a58-a2f6-469c-b611-1064cd9eefb5',
        5
    );
--
-- Data for Name: authentik_events_notificationrule; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_events_notificationrule
VALUES (
        'a577ea8e-2c71-44a4-8269-390681efe1c8',
        'default-notify-configuration-error',
        'alert',
        '91f0793a-644d-4d2d-a231-c15eb1bee47a'
    );
INSERT INTO public.authentik_events_notificationrule
VALUES (
        '3cde8134-d9ae-4dba-9af5-f0cd988c1f0a',
        'default-notify-update',
        'alert',
        '91f0793a-644d-4d2d-a231-c15eb1bee47a'
    );
INSERT INTO public.authentik_events_notificationrule
VALUES (
        '74f343a3-4d23-4fcd-8f03-2cf4e4da2755',
        'default-notify-exception',
        'alert',
        '91f0793a-644d-4d2d-a231-c15eb1bee47a'
    );
--
-- Data for Name: authentik_events_notificationrule_transports; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_events_notificationrule_transports
VALUES (
        7,
        'a577ea8e-2c71-44a4-8269-390681efe1c8',
        'de7b36e6-5590-413c-a546-b25d33ad3411'
    );
INSERT INTO public.authentik_events_notificationrule_transports
VALUES (
        8,
        'a577ea8e-2c71-44a4-8269-390681efe1c8',
        '31ea6d17-7c58-49e5-a37e-2f7e232a9f05'
    );
INSERT INTO public.authentik_events_notificationrule_transports
VALUES (
        9,
        '3cde8134-d9ae-4dba-9af5-f0cd988c1f0a',
        'de7b36e6-5590-413c-a546-b25d33ad3411'
    );
INSERT INTO public.authentik_events_notificationrule_transports
VALUES (
        10,
        '3cde8134-d9ae-4dba-9af5-f0cd988c1f0a',
        '31ea6d17-7c58-49e5-a37e-2f7e232a9f05'
    );
INSERT INTO public.authentik_events_notificationrule_transports
VALUES (
        11,
        '74f343a3-4d23-4fcd-8f03-2cf4e4da2755',
        'de7b36e6-5590-413c-a546-b25d33ad3411'
    );
INSERT INTO public.authentik_events_notificationrule_transports
VALUES (
        12,
        '74f343a3-4d23-4fcd-8f03-2cf4e4da2755',
        '31ea6d17-7c58-49e5-a37e-2f7e232a9f05'
    );
--
-- Data for Name: authentik_events_notificationtransport; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_events_notificationtransport
VALUES (
        '31ea6d17-7c58-49e5-a37e-2f7e232a9f05',
        'default-email-transport',
        'email',
        '',
        false,
        NULL
    );
INSERT INTO public.authentik_events_notificationtransport
VALUES (
        'de7b36e6-5590-413c-a546-b25d33ad3411',
        'default-local-transport',
        'local',
        '',
        false,
        NULL
    );
--
-- Data for Name: authentik_events_notificationwebhookmapping; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_flows_flow; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_flows_flow
VALUES (
        '6ca67d6a-7dd6-483f-ae62-e1f41fab20f9',
        'default-authenticator-totp-setup',
        'default-authenticator-totp-setup',
        'stage_configuration',
        'f0fb6d6a-927e-41ae-aca9-8c1a5b8b73c9',
        'Setup Two-Factor authentication',
        '',
        false,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'ff23467d-4f67-4042-984c-072d70a57791',
        'Logout',
        'default-invalidation-flow',
        'invalidation',
        '689e8ee9-fde7-42f8-80e3-98120e67d7f8',
        'Default Invalidation Flow',
        '',
        false,
        'stacked',
        'message_continue',
        'none'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        '6d2eb903-2fdb-4f42-8d65-b34140f86b1f',
        'default-oobe-setup',
        'initial-setup',
        'stage_configuration',
        'ad30bf70-e143-4902-a4b3-5f5b95be4f1c',
        'Welcome to authentik!',
        '',
        false,
        'stacked',
        'message_continue',
        'require_superuser'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'd3e39c13-0e36-4e17-ad60-a3b40cd5133f',
        'Authorize Application',
        'default-provider-authorization-explicit-consent',
        'authorization',
        '4b9e6dec-b9dc-4103-8790-e2c3c4309534',
        'Redirecting to %(app)s',
        '',
        false,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        '3e316050-7e43-4c97-86d6-d6bb6102111a',
        'User settings',
        'default-user-settings-flow',
        'stage_configuration',
        'c920bc47-a68e-4e0f-a9ca-0d3bda8e48fd',
        'Update your info',
        '',
        false,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        '1997de94-f12b-423a-9987-fdbc8a345559',
        'default-authenticator-webauthn-setup',
        'default-authenticator-webauthn-setup',
        'stage_configuration',
        '2eca37e6-b603-4cdb-b5e5-6ae2dc531fdb',
        'Setup WebAuthn',
        '',
        false,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'f9a7864e-12e7-4225-ae2b-b8149e30ed3f',
        'Recovery',
        'recovery',
        'recovery',
        '9341a864-87db-4057-b7fa-eaccb0699291',
        'Recovery',
        '',
        false,
        'stacked',
        'message_continue',
        'none'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'a77bbc84-09ef-434a-90b3-85706912ad91',
        'main-page-enrollment',
        'enrollment',
        'enrollment',
        '7aba35a7-953d-4a2b-9c9e-ea8bee7a2c49',
        'Enrollment',
        '',
        true,
        'stacked',
        'message_continue',
        'none'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b',
        'Enrollment Invitation',
        'enrollment-invitation',
        'enrollment',
        'd0211475-6675-4fef-9472-b2f08d4b0038',
        'Enrollment Invitation',
        '',
        true,
        'stacked',
        'message_continue',
        'none'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'a9ccd0cc-506f-4e48-9cfa-288578b133c6',
        'Change Password',
        'default-password-change',
        'stage_configuration',
        '54c41b2e-c7d6-499c-8b0d-d9928414a24e',
        'Change password',
        '',
        false,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'db6e589b-9de0-4d90-900e-6cac393db950',
        'Welcome to authentik! Please select a username.',
        'default-source-enrollment',
        'enrollment',
        'f5752d07-ec01-4edc-947d-40fb48ca5070',
        'Welcome to authentik! Please select a username.',
        '',
        false,
        'stacked',
        'message_continue',
        'none'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'bb342e02-6486-4693-94da-185b4e8878ff',
        'Passwordless Authentication',
        'passwordless-authentication',
        'authentication',
        '6767144c-f731-4258-ab54-008895279479',
        'Passwordless Authentication',
        '',
        false,
        'stacked',
        'message_continue',
        'none'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        '6122946d-fdf7-46cf-b884-96ba2cd2cc25',
        'eidash-application-authorization',
        'eidash-application-authorization',
        'authorization',
        'e3a2a1eb-ee5d-48e8-8e66-c4b597fb8ac6',
        'Wordmesh Application Authorization',
        '',
        true,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        '771a9e4f-58ea-4b30-905a-e4cd49e838e7',
        'Welcome to authentik!',
        'default-authentication-flow',
        'authentication',
        'e2a9042d-f3fc-4ade-b09b-5183921a296a',
        'Welcome to authentik!',
        '',
        true,
        'stacked',
        'message_continue',
        'none'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        '7914ff0e-2e4e-40c4-ab7a-a0d1f502f3e5',
        'Welcome to authentik!',
        'default-source-authentication',
        'authentication',
        '8dd53151-566e-48bf-8d0b-db4b7b98460f',
        'Welcome to authentik!',
        '',
        false,
        'stacked',
        'message_continue',
        'require_unauthenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        '2f970c44-2373-4a92-95e6-592fbe5cefc8',
        'default-authenticator-static-setup',
        'default-authenticator-static-setup',
        'stage_configuration',
        'f9ccd06f-7bb9-4eb0-8f68-1e7d94e8d9a9',
        'Setup Static OTP Tokens',
        '',
        false,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'b816096c-abf7-4b22-99ff-4595188c79bb',
        'Authorize Application',
        'default-provider-authorization-implicit-consent',
        'authorization',
        '43d4573b-6411-40fb-a823-4761114a6b51',
        'Redirecting to %(app)s',
        '',
        false,
        'stacked',
        'message_continue',
        'require_authenticated'
    );
INSERT INTO public.authentik_flows_flow
VALUES (
        'fc6fed90-2515-4068-92d9-e93798e63d28',
        'Pre-Authentication',
        'default-source-pre-authentication',
        'stage_configuration',
        '7f991dae-4528-4fa7-9804-f32e4ee1cdce',
        'Pre-authentication',
        '',
        false,
        'stacked',
        'message_continue',
        'none'
    );
--
-- Data for Name: authentik_flows_flowstagebinding; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '7cd79d75-ed09-45ac-87e6-27560b913650',
        '6bb99cd7-6f48-4621-8d67-db33adf45dcb',
        true,
        0,
        'f9a7864e-12e7-4225-ae2b-b8149e30ed3f',
        '1fd71952-5e8b-45eb-9f51-51031cf37dd3',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '3abdfc21-069b-4cc6-9c0d-e9db55a361ab',
        '7718f812-526c-4b8d-8986-f8bd1561ad3c',
        true,
        10,
        'f9a7864e-12e7-4225-ae2b-b8149e30ed3f',
        'e86d8339-6c5e-4b25-8887-8f7a53a31c08',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '4b902e40-f619-4dab-af38-f681aa53c3d5',
        'eb5af43d-491b-4566-8542-372c8b6a494a',
        true,
        20,
        'f9a7864e-12e7-4225-ae2b-b8149e30ed3f',
        '9d8e83bc-aa73-4527-bc4e-9f8f6949edf5',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'b240b982-e28a-497f-967c-1ad84acc8348',
        '96858285-7f8f-43e2-bd8b-41d0392957e0',
        true,
        30,
        'f9a7864e-12e7-4225-ae2b-b8149e30ed3f',
        'd40af254-c39a-4cf1-bbbb-abef9d4a914c',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '9846e6ec-b72f-403d-97db-4c90816491f7',
        '55f3ece4-6516-44e2-8721-7ebc9ee161fd',
        true,
        10,
        'a77bbc84-09ef-434a-90b3-85706912ad91',
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '09dda759-0413-47a4-beb7-c39bebc284a8',
        '7ab48a5d-efbb-47cf-a708-137ea445f88f',
        true,
        20,
        'a77bbc84-09ef-434a-90b3-85706912ad91',
        '20134ad3-8a27-431e-8caf-6f43d8afac2b',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '634d7a04-af83-43f9-8158-c593452effca',
        '2ef364c3-6f04-4e33-8460-7b97848fe1dc',
        true,
        30,
        'a77bbc84-09ef-434a-90b3-85706912ad91',
        '86b37c28-9062-42e0-975c-b6e17e5d3cec',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '94b30a02-ca8e-4fc9-939f-fa2b7ef475b4',
        '860501cc-fb37-4a55-b8ac-f07b5643607d',
        true,
        10,
        'bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b',
        '5a807e4a-9086-449f-a42b-9bf9e9ee6e0c',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'e93c1cff-0584-4ee6-bd57-5f64ac9efdd2',
        '441450ce-0dbb-4aa1-9057-c6af4a810cd4',
        true,
        20,
        'bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b',
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '686c164f-02c5-45aa-9639-d82df79658af',
        '8c9fc436-92b8-485f-9c62-ee47789798ad',
        true,
        30,
        'bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b',
        '996c98db-5994-4209-8b0d-c04999324417',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '868531b9-9c05-4046-94fa-205d4790f908',
        '31513c6d-238f-43d6-952c-2c28a7adea4e',
        true,
        40,
        'bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b',
        '5cdddbc5-316b-43d8-a9bd-be87434ead39',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '3f4e033d-e069-4980-8aa0-3369e779bd3e',
        '4ea620e7-ca4b-488f-8336-4106bfc8c69e',
        true,
        10,
        'bb342e02-6486-4693-94da-185b4e8878ff',
        'a13c69a1-aaa2-4a94-9df0-c5a945fc29d9',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '9d27f8fa-be9f-4689-8735-33209fa79b69',
        '686f9cca-215d-45f0-9ff1-9f8e89ee0066',
        true,
        20,
        'bb342e02-6486-4693-94da-185b4e8878ff',
        '94ab40bb-99c7-47fe-9a16-de5e62f4f95a',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '74247ae9-8ec7-4e7c-ac87-e623eae619a3',
        'bed21c7a-2d75-40ea-85c4-4dcee51317d1',
        true,
        1,
        'a9ccd0cc-506f-4e48-9cfa-288578b133c6',
        'd40af254-c39a-4cf1-bbbb-abef9d4a914c',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '114c3849-1fd9-4994-bcd0-3022cc178e8a',
        '5dbe01e9-5941-4d06-b34e-6fa6b48ac3de',
        true,
        10,
        '771a9e4f-58ea-4b30-905a-e4cd49e838e7',
        'e2ea28b0-c397-4d3d-bcf3-770bf1a0f63b',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'a949beb4-8221-4d33-b86d-3eacfe309bb4',
        '935d2315-425f-4189-b64e-370a1c4d7e8d',
        true,
        30,
        '771a9e4f-58ea-4b30-905a-e4cd49e838e7',
        'c70cb4fe-15cd-453d-9835-235bdf938fc9',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'd4d6a346-75b4-4b1f-9791-aef4db03665e',
        '49c6639c-2add-42ca-9191-ec2ba645e79a',
        true,
        100,
        '771a9e4f-58ea-4b30-905a-e4cd49e838e7',
        '94ab40bb-99c7-47fe-9a16-de5e62f4f95a',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '2526ec04-9b5e-4b8c-9274-fc04aaf77ae5',
        '83d0cdae-3e47-4e86-9ade-82b0e045e099',
        true,
        0,
        '1997de94-f12b-423a-9987-fdbc8a345559',
        'd5f43dee-d0e7-4811-92cd-20a5788551d9',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '2fd69b17-6efd-498a-8852-70108d7fb6cc',
        '79dc130b-627c-4d72-b6e8-1fa2a43ccd56',
        true,
        0,
        'db6e589b-9de0-4d90-900e-6cac393db950',
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '6f7fd08e-fd29-4636-9845-6d6b1e6d0475',
        '8e89655e-0994-4314-a4b0-1263076e337a',
        true,
        1,
        'db6e589b-9de0-4d90-900e-6cac393db950',
        '20134ad3-8a27-431e-8caf-6f43d8afac2b',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '2cfeaaf7-f298-425e-81cb-b50d2dcb93eb',
        '75b43953-97eb-4254-b5b8-d3405a4d6566',
        true,
        2,
        'db6e589b-9de0-4d90-900e-6cac393db950',
        '5cdddbc5-316b-43d8-a9bd-be87434ead39',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'bae337db-2223-49e5-9f5a-44738c276450',
        '1a46ebf4-48c1-4b8a-b2a6-284453adedac',
        true,
        0,
        '2f970c44-2373-4a92-95e6-592fbe5cefc8',
        '94ca8131-b290-40aa-ab27-4f069787575e',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'b1adefd9-d1e8-4256-bca2-033ea33a981e',
        'df6b70ef-6e7c-48e8-901c-50c862bf2cde',
        true,
        0,
        '7914ff0e-2e4e-40c4-ab7a-a0d1f502f3e5',
        '9a97dab4-6376-476b-b5d8-cda415796b8b',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '2a9ba8dd-870d-446b-9d1c-9f8fc97c5247',
        '953a4950-8da6-40e5-b286-858a1d5b0112',
        false,
        10,
        '6d2eb903-2fdb-4f42-8d65-b34140f86b1f',
        '287aa88d-6663-47b2-9271-d1aede42b23f',
        true,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'b9164d47-8b47-41f2-b651-a09ba7a2a14e',
        'df2c99d0-f291-4be7-bf4d-79d529fd4166',
        true,
        20,
        '6d2eb903-2fdb-4f42-8d65-b34140f86b1f',
        'd40af254-c39a-4cf1-bbbb-abef9d4a914c',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '0ce6555f-1872-41ff-b7f2-6c641509d669',
        '8a4e405f-c2cc-467a-817b-5f85c3231e21',
        false,
        100,
        '6d2eb903-2fdb-4f42-8d65-b34140f86b1f',
        '94ab40bb-99c7-47fe-9a16-de5e62f4f95a',
        true,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '8fcc6c4f-70a0-40af-ab23-8a7ab5f10931',
        'e0a9778e-1e73-4f49-bbeb-13bab2a667d4',
        true,
        0,
        '6ca67d6a-7dd6-483f-ae62-e1f41fab20f9',
        'b2f75b7a-973e-44f0-b692-463d4298b144',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '4156e8eb-f5d2-4078-8759-e92523d0b37f',
        'd7571ddb-cb4a-4ca6-a367-37c0c193f3e5',
        true,
        0,
        'ff23467d-4f67-4042-984c-072d70a57791',
        '69b4befe-4dd1-4eef-adae-5e80af9e4e22',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        'ffb03be8-bfd2-4548-974e-579639ad0c68',
        '03cf6ddb-14fd-46ad-8f73-84e51a8dcccc',
        true,
        0,
        'd3e39c13-0e36-4e17-ad60-a3b40cd5133f',
        '41c09eb2-1942-42d6-9300-72bc19fd9923',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '597b75b2-7a39-469d-80af-e84bf993905b',
        'b20db7ed-4c3a-4251-81cc-9646b6f5e9bf',
        true,
        20,
        '3e316050-7e43-4c97-86d6-d6bb6102111a',
        '5b2e44bb-dfba-4573-b178-1d4dad4918f1',
        false,
        'retry'
    );
INSERT INTO public.authentik_flows_flowstagebinding
VALUES (
        '314af070-6be7-4823-a08c-27df68c4fd41',
        'cf6d33ef-5b0d-4601-9c23-ea94c67df710',
        true,
        100,
        '3e316050-7e43-4c97-86d6-d6bb6102111a',
        '94cdadcf-7be2-4d1e-8ca1-98bc86b09e3e',
        false,
        'retry'
    );
--
-- Data for Name: authentik_flows_flowtoken; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_flows_stage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_flows_stage
VALUES (
        '1fd71952-5e8b-45eb-9f51-51031cf37dd3',
        'recovery-authentication-identification'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'e86d8339-6c5e-4b25-8887-8f7a53a31c08',
        'recovery-email'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '9d8e83bc-aa73-4527-bc4e-9f8f6949edf5',
        'default-password-change-prompt'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        'default-source-enrollment-prompt'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '20134ad3-8a27-431e-8caf-6f43d8afac2b',
        'default-source-enrollment-write'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '86b37c28-9062-42e0-975c-b6e17e5d3cec',
        'email-account-confirmation'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '996c98db-5994-4209-8b0d-c04999324417',
        'enrollment-invitation-write'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '5a807e4a-9086-449f-a42b-9bf9e9ee6e0c',
        'enrollment-invitation'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'c70cb4fe-15cd-453d-9835-235bdf938fc9',
        'default-authentication-mfa-validation'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '08918cad-f650-47af-99ec-0f062e2c5b94',
        'cloudflare-turnstile'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'a13c69a1-aaa2-4a94-9df0-c5a945fc29d9',
        'Passwordless WebAuthn'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'e2ea28b0-c397-4d3d-bcf3-770bf1a0f63b',
        'default-authentication-identification'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '94cdadcf-7be2-4d1e-8ca1-98bc86b09e3e',
        'default-user-settings-write'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '5b2e44bb-dfba-4573-b178-1d4dad4918f1',
        'default-user-settings'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '94ca8131-b290-40aa-ab27-4f069787575e',
        'default-authenticator-static-setup'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '9a97dab4-6376-476b-b5d8-cda415796b8b',
        'default-source-authentication-login'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '37e0326e-2199-4ff6-b5b9-a906941a53f9',
        'default-authentication-password'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'b2f75b7a-973e-44f0-b692-463d4298b144',
        'default-authenticator-totp-setup'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'd5f43dee-d0e7-4811-92cd-20a5788551d9',
        'default-authenticator-webauthn-setup'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '41c09eb2-1942-42d6-9300-72bc19fd9923',
        'default-provider-authorization-consent'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '5cdddbc5-316b-43d8-a9bd-be87434ead39',
        'default-source-enrollment-login'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '287aa88d-6663-47b2-9271-d1aede42b23f',
        'stage-default-oobe-password'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '94ab40bb-99c7-47fe-9a16-de5e62f4f95a',
        'default-authentication-login'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        'd40af254-c39a-4cf1-bbbb-abef9d4a914c',
        'default-password-change-write'
    );
INSERT INTO public.authentik_flows_stage
VALUES (
        '69b4befe-4dd1-4eef-adae-5e80af9e4e22',
        'default-invalidation-logout'
    );
--
-- Data for Name: authentik_install_id; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_install_id
VALUES ('ab75b1a3-69f8-40c1-a5b5-a4a3bd28dada');
--
-- Data for Name: authentik_outposts_dockerserviceconnection; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_outposts_dockerserviceconnection
VALUES (
        '5d538b8b-2708-423c-a15e-ed3f16492e33',
        '/var/run/docker.sock',
        NULL,
        NULL
    );
--
-- Data for Name: authentik_outposts_kubernetesserviceconnection; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_outposts_outpost; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_outposts_outpost
VALUES (
        'd6b1a550-8b2d-4828-8ce8-bdbda9d6038e',
        'authentik Embedded Outpost',
        '{"log_level": "info", "docker_labels": null, "authentik_host": "http://fyko.internal:9000", "docker_network": null, "container_image": null, "docker_map_ports": true, "kubernetes_replicas": 1, "kubernetes_namespace": "default", "authentik_host_browser": "", "object_naming_template": "ak-outpost-%(name)s", "authentik_host_insecure": false, "kubernetes_json_patches": null, "kubernetes_service_type": "ClusterIP", "kubernetes_image_pull_secrets": [], "kubernetes_ingress_class_name": null, "kubernetes_disabled_components": ["deployment", "secret"], "kubernetes_ingress_annotations": {}, "kubernetes_ingress_secret_name": "authentik-outpost-tls"}',
        'proxy',
        NULL,
        'goauthentik.io/outposts/embedded'
    );
--
-- Data for Name: authentik_outposts_outpost_providers; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_outposts_outpostserviceconnection; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_outposts_outpostserviceconnection
VALUES (
        '5d538b8b-2708-423c-a15e-ed3f16492e33',
        'Local Docker connection',
        true
    );
--
-- Data for Name: authentik_policies_dummy_dummypolicy; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_policies_event_matcher_eventmatcherpolicy; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_policies_event_matcher_eventmatcherpolicy
VALUES (
        '472093cd-e512-4bf8-b300-154fd766aadc',
        'configuration_error',
        NULL,
        NULL,
        NULL
    );
INSERT INTO public.authentik_policies_event_matcher_eventmatcherpolicy
VALUES (
        '8188bc3c-2773-4d73-88c7-6558a271317f',
        'update_available',
        NULL,
        NULL,
        NULL
    );
INSERT INTO public.authentik_policies_event_matcher_eventmatcherpolicy
VALUES (
        'a6600a57-2c4c-402f-8119-00d82862e1f6',
        'policy_exception',
        NULL,
        NULL,
        NULL
    );
INSERT INTO public.authentik_policies_event_matcher_eventmatcherpolicy
VALUES (
        '01bc1011-e0fb-43d0-9231-1cf440a9591f',
        'property_mapping_exception',
        NULL,
        NULL,
        NULL
    );
--
-- Data for Name: authentik_policies_expiry_passwordexpirypolicy; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_policies_expression_expressionpolicy; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        'd16d2e00-a6ce-4ebd-abe3-516a5f9f8f92',
        '# This policy sets the user for the currently running flow
# by injecting "pending_user"
akadmin = ak_user_by(username="akadmin")
context["flow_plan"].context["pending_user"] = akadmin
return True'
    );
INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        'de29627c-8a32-43d5-984a-9704ce84f779',
        '# This policy ensures that the setup flow can only be
# executed when the admin user doesn''''t have a password set
akadmin = ak_user_by(username="akadmin")
return not akadmin.has_usable_password()'
    );
INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        '6b64d731-aa2d-4cf8-8466-600d700000bf',
        'from authentik.lib.config import CONFIG
from authentik.core.models import (
    USER_ATTRIBUTE_CHANGE_EMAIL,
    USER_ATTRIBUTE_CHANGE_NAME,
    USER_ATTRIBUTE_CHANGE_USERNAME
)
prompt_data = request.context.get("prompt_data")

if not request.user.group_attributes(request.http_request).get(
    USER_ATTRIBUTE_CHANGE_EMAIL, CONFIG.get_bool("default_user_change_email", True)
):
    if prompt_data.get("email") != request.user.email:
        ak_message("Not allowed to change email address.")
        return False

if not request.user.group_attributes(request.http_request).get(
    USER_ATTRIBUTE_CHANGE_NAME, CONFIG.get_bool("default_user_change_name", True)
):
    if prompt_data.get("name") != request.user.name:
        ak_message("Not allowed to change name.")
        return False

if not request.user.group_attributes(request.http_request).get(
    USER_ATTRIBUTE_CHANGE_USERNAME, CONFIG.get_bool("default_user_change_username", True)
):
    if prompt_data.get("username") != request.user.username:
        ak_message("Not allowed to change username.")
        return False

return True'
    );
INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        '56ff0f29-d7d0-422d-91f4-4d7b4b0846a1',
        '# This policy ensures that the setup flow can only be
# used one time
from authentik.flows.models import Flow, FlowAuthenticationRequirement
Flow.objects.filter(slug="initial-setup").update(
    authentication=FlowAuthenticationRequirement.REQUIRE_SUPERUSER,
)
return True'
    );
INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        'fd6fc500-95fa-4aba-afa2-f3077dd69f18',
        '# This policy ensures that this flow can only be used when the user
# is in a SSO Flow (meaning they come from an external IdP)
return ak_is_sso_flow'
    );
INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        '6dc5b9dd-2bb4-4905-bca3-2e5b299d59f2',
        'flow_plan = request.context.get("flow_plan")
if not flow_plan:
    return True
# If the user does not have a backend attached to it, they haven''t
# been authenticated yet and we need the password stage
return not hasattr(flow_plan.context.get("pending_user"), "backend")'
    );
INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        '5a5ff878-7b1b-4812-9a1e-9305790807ae',
        '# Check if we''''ve not been given a username by the external IdP
# and trigger the enrollment flow
return ''username'' not in context.get(''prompt_data'', {})'
    );
INSERT INTO public.authentik_policies_expression_expressionpolicy
VALUES (
        'fd71186d-14c6-42e4-bb53-f7d8a72f7051',
        '# This policy ensures that this flow can only be used when the user
# is in a SSO Flow (meaning they come from an external IdP)
return ak_is_sso_flow'
    );
--
-- Data for Name: authentik_policies_password_passwordpolicy; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_policies_password_passwordpolicy
VALUES (
        '3b9cb6cb-69d8-4014-a214-ff18053d0011',
        1,
        1,
        1,
        12,
        '!\"#$%&''()*+,-./:;<=>?@[]^_`{|}~',
        'Your password must have at least 1 uppercase character, 1 lowercase character, 1 digit and 1 symbol.',
        'password',
        1,
        true,
        true,
        true,
        0,
        2
    );
--
-- Data for Name: authentik_policies_policy; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-07 00:31:46.212129+00',
        '2023-12-07 00:31:46.212145+00',
        '3b9cb6cb-69d8-4014-a214-ff18053d0011',
        'password-complexity',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:23.266133+00',
        '2023-12-06 23:54:27.495997+00',
        'fd71186d-14c6-42e4-bb53-f7d8a72f7051',
        'default-source-enrollment-if-sso',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:21.851227+00',
        '2023-12-06 23:54:27.84818+00',
        '6b64d731-aa2d-4cf8-8466-600d700000bf',
        'default-user-settings-authorization',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:23.6281+00',
        '2023-12-06 23:54:27.993102+00',
        '472093cd-e512-4bf8-b300-154fd766aadc',
        'default-match-configuration-error',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:23.646127+00',
        '2023-12-06 23:54:28.006701+00',
        '8188bc3c-2773-4d73-88c7-6558a271317f',
        'default-match-update',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:23.663695+00',
        '2023-12-06 23:54:28.020324+00',
        'a6600a57-2c4c-402f-8119-00d82862e1f6',
        'default-match-policy-exception',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:23.666644+00',
        '2023-12-06 23:54:28.022825+00',
        '01bc1011-e0fb-43d0-9231-1cf440a9591f',
        'default-match-property-mapping-exception',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:23.29346+00',
        '2023-12-06 23:54:28.05785+00',
        '6dc5b9dd-2bb4-4905-bca3-2e5b299d59f2',
        'default-authentication-flow-password-stage',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:21.745484+00',
        '2023-12-06 23:54:26.175505+00',
        'fd6fc500-95fa-4aba-afa2-f3077dd69f18',
        'default-source-authentication-if-sso',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:23.263951+00',
        '2023-12-06 23:54:27.493776+00',
        '5a5ff878-7b1b-4812-9a1e-9305790807ae',
        'default-source-enrollment-if-username',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:28.855197+00',
        '2023-12-06 23:54:30.244068+00',
        'd16d2e00-a6ce-4ebd-abe3-516a5f9f8f92',
        'default-oobe-prefill-user',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:28.857232+00',
        '2023-12-06 23:54:30.246362+00',
        'de29627c-8a32-43d5-984a-9704ce84f779',
        'default-oobe-password-usable',
        false
    );
INSERT INTO public.authentik_policies_policy
VALUES (
        '2023-12-06 23:54:28.859234+00',
        '2023-12-06 23:54:30.24871+00',
        '56ff0f29-d7d0-422d-91f4-4d7b4b0846a1',
        'default-oobe-flow-set-authentication',
        false
    );
--
-- Data for Name: authentik_policies_policybinding; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_policies_policybinding
VALUES (
        'ecc4dd75-1516-4da7-a8cf-af4d5d46c77f',
        true,
        0,
        'fd6fc500-95fa-4aba-afa2-f3077dd69f18',
        '8dd53151-566e-48bf-8d0b-db4b7b98460f',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        '761983ad-309a-4772-8752-0039fc6c7056',
        true,
        0,
        'fd71186d-14c6-42e4-bb53-f7d8a72f7051',
        'f5752d07-ec01-4edc-947d-40fb48ca5070',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        '3662722e-538c-4283-aae0-2c80f4b4113a',
        true,
        0,
        '5a5ff878-7b1b-4812-9a1e-9305790807ae',
        '2fd69b17-6efd-498a-8852-70108d7fb6cc',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        '7f982873-2969-48b2-9aff-2f406b8474b8',
        true,
        0,
        'de29627c-8a32-43d5-984a-9704ce84f779',
        'ad30bf70-e143-4902-a4b3-5f5b95be4f1c',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        'b2a47f4c-3415-414a-a1a1-1d7e96f687de',
        true,
        0,
        '472093cd-e512-4bf8-b300-154fd766aadc',
        'a577ea8e-2c71-44a4-8269-390681efe1c8',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        '7c1d9183-0cad-4f08-9a1e-965b6e59cf51',
        true,
        0,
        '8188bc3c-2773-4d73-88c7-6558a271317f',
        '3cde8134-d9ae-4dba-9af5-f0cd988c1f0a',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        '3adba106-1cbf-4622-bafa-c3c68c0a7e04',
        true,
        0,
        'a6600a57-2c4c-402f-8119-00d82862e1f6',
        '74f343a3-4d23-4fcd-8f03-2cf4e4da2755',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        'c2d1c5f9-81d3-4494-ad59-55ed72cd206b',
        true,
        1,
        '01bc1011-e0fb-43d0-9231-1cf440a9591f',
        '74f343a3-4d23-4fcd-8f03-2cf4e4da2755',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        '6ad9fc28-06ee-4235-8fe8-48eed2b4635f',
        true,
        0,
        'd16d2e00-a6ce-4ebd-abe3-516a5f9f8f92',
        'b9164d47-8b47-41f2-b651-a09ba7a2a14e',
        false,
        30,
        NULL,
        NULL,
        false
    );
INSERT INTO public.authentik_policies_policybinding
VALUES (
        '4572f372-7815-4de4-bc8a-03452d0c75ec',
        true,
        0,
        '56ff0f29-d7d0-422d-91f4-4d7b4b0846a1',
        '0ce6555f-1872-41ff-b7f2-6c641509d669',
        false,
        30,
        NULL,
        NULL,
        false
    );
--
-- Data for Name: authentik_policies_policybindingmodel; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('3c7dc5d4-baaa-4286-9a4e-24a813dc63de', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('9341a864-87db-4057-b7fa-eaccb0699291', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('7cd79d75-ed09-45ac-87e6-27560b913650', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('3abdfc21-069b-4cc6-9c0d-e9db55a361ab', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('4b902e40-f619-4dab-af38-f681aa53c3d5', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('b240b982-e28a-497f-967c-1ad84acc8348', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('7aba35a7-953d-4a2b-9c9e-ea8bee7a2c49', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('9846e6ec-b72f-403d-97db-4c90816491f7', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('09dda759-0413-47a4-beb7-c39bebc284a8', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('634d7a04-af83-43f9-8158-c593452effca', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('d0211475-6675-4fef-9472-b2f08d4b0038', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('94b30a02-ca8e-4fc9-939f-fa2b7ef475b4', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('e93c1cff-0584-4ee6-bd57-5f64ac9efdd2', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('686c164f-02c5-45aa-9639-d82df79658af', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('868531b9-9c05-4046-94fa-205d4790f908', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('60313a24-bc55-4ab2-ba2d-611719174ba3', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('6767144c-f731-4258-ab54-008895279479', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('3f4e033d-e069-4980-8aa0-3369e779bd3e', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('9d27f8fa-be9f-4689-8735-33209fa79b69', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('e3a2a1eb-ee5d-48e8-8e66-c4b597fb8ac6', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('3d1bc8cf-4000-491e-9b8f-8fb00fefa686', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('e2a9042d-f3fc-4ade-b09b-5183921a296a', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('f5752d07-ec01-4edc-947d-40fb48ca5070', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('2eca37e6-b603-4cdb-b5e5-6ae2dc531fdb', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('2526ec04-9b5e-4b8c-9274-fc04aaf77ae5', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('2fd69b17-6efd-498a-8852-70108d7fb6cc', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('6f7fd08e-fd29-4636-9845-6d6b1e6d0475', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('2cfeaaf7-f298-425e-81cb-b50d2dcb93eb', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('7f991dae-4528-4fa7-9804-f32e4ee1cdce', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('8dd53151-566e-48bf-8d0b-db4b7b98460f', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('f9ccd06f-7bb9-4eb0-8f68-1e7d94e8d9a9', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('bae337db-2223-49e5-9f5a-44738c276450', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('b1adefd9-d1e8-4256-bca2-033ea33a981e', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('43d4573b-6411-40fb-a823-4761114a6b51', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('ad30bf70-e143-4902-a4b3-5f5b95be4f1c', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('2a9ba8dd-870d-446b-9d1c-9f8fc97c5247', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('b9164d47-8b47-41f2-b651-a09ba7a2a14e', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('689e8ee9-fde7-42f8-80e3-98120e67d7f8', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('0ce6555f-1872-41ff-b7f2-6c641509d669', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('4156e8eb-f5d2-4078-8759-e92523d0b37f', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('c920bc47-a68e-4e0f-a9ca-0d3bda8e48fd', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('597b75b2-7a39-469d-80af-e84bf993905b', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('314af070-6be7-4823-a08c-27df68c4fd41', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('f0fb6d6a-927e-41ae-aca9-8c1a5b8b73c9', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('8fcc6c4f-70a0-40af-ab23-8a7ab5f10931', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('4b9e6dec-b9dc-4103-8790-e2c3c4309534', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('ffb03be8-bfd2-4548-974e-579639ad0c68', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('a577ea8e-2c71-44a4-8269-390681efe1c8', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('54c41b2e-c7d6-499c-8b0d-d9928414a24e', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('3cde8134-d9ae-4dba-9af5-f0cd988c1f0a', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('a2297bf9-69f5-4997-9f40-e8f6f0712b1a', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('74247ae9-8ec7-4e7c-ac87-e623eae619a3', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('74f343a3-4d23-4fcd-8f03-2cf4e4da2755', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('114c3849-1fd9-4994-bcd0-3022cc178e8a', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('a949beb4-8221-4d33-b86d-3eacfe309bb4', 'any');
INSERT INTO public.authentik_policies_policybindingmodel
VALUES ('d4d6a346-75b4-4b1f-9791-aef4db03665e', 'any');
--
-- Data for Name: authentik_policies_reputation_reputation; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_policies_reputation_reputationpolicy; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_ldap_ldapprovider; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_oauth2_accesstoken; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_oauth2_authorizationcode; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_oauth2_devicetoken; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_oauth2_oauth2provider; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_providers_oauth2_oauth2provider
VALUES (
        1,
        'confidential',
        'UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER',
        '9sMbmMQQMTSylz9Bf0575pFKeDgoBBXzQC39u0ZgWHKlJxEpAmoMabHGeNMsquEsLz6H02SbU4Ba2neE1C6WlYWCzJwFaZAxpAKpiEC1RNH4UEjOKXceL0aoyplwQqpY',
        'http://fyko.internal:33939/api/oidc/callback',
        true,
        'days=180',
        '1a191047-4a1f-4c0a-97aa-377af734f948',
        'hashed_user_id',
        'per_provider',
        'minutes=1',
        'hours=12'
    );
--
-- Data for Name: authentik_providers_oauth2_oauth2provider_jwks_sources; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_oauth2_refreshtoken; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        1,
        '2024-06-07 03:06:08.711985+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717729568, "iat": 1702177568, "auth_time": 1702165142, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "I4qNCst8nlTDgNY_fg1mPw", "at_hash": "J7GMSmXnsVCjbffqeh2FYw", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'lp2FdZlpTMDly02XqJTxdXExXzWythI18z6ycMQPeh5Zg3qrjVFadFaiY79lWRFUU0WlbO7srGhgS2vMRtiqPUsfdGftqy50Q3xRM7JtsFSDbmLnNuDvmeTgXbSe1OZY',
        '2023-12-09 23:39:02.661149+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        2,
        '2024-06-07 03:07:31.9308+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717729651, "iat": 1702177652, "auth_time": 1702165142, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "4tZrpjUK5S03MkCEhG1DMw", "at_hash": "o0zrRLxImoWYIn85zPhhyQ", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'KNUkYyQxYU9WW8hVVzCA0aWjrl4OQmPToDiOunm8xK6k8XF0zVH9HCj9BTqac6RBs3ajD554U4UxfzUC4x3Q7aIjx4EuS3HA8ikrfBbD6yarXRqBaXH7ESsM32UD2pyS',
        '2023-12-09 23:39:02.661149+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        3,
        '2024-06-07 03:10:21.866297+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717729821, "iat": 1702177822, "auth_time": 1702165142, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "PbikQbUfnf8Zk936Q08SZQ", "at_hash": "72befcFgblCZNgJ7R6FZYQ", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'DusamEOvglVEL7LeIO6dZcvj4d6LeHjzwehhuD0jEoh49iK8odhF7kFb4fglH8xj35Fxn8uj9sB7sNMICsVqvve3XDoIiWI53FHIOITGhGS0ILptPfqkbTWNzE5ZCza0',
        '2023-12-09 23:39:02.661149+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        4,
        '2024-06-07 03:33:37.099318+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717731217, "iat": 1702179217, "auth_time": 1702178503, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "jf4UynM8f3uR2kc6OTzb_A", "at_hash": "ep1QN7xXUAmdv5kK8PNwbQ", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'GjThiDCvNGUWNtQoIPKNavwOQm362kfhfItd0lPrBwuNkkuNzJanSmU3n31hd1tsm2YT9RcUAxU4jCsKz3PyiwOTT9otQMCEBw64IqkY04EDVtN4PXNJfL5Jw0Jh8YcI',
        '2023-12-10 03:21:43.261801+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        5,
        '2024-06-07 03:35:13.358202+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717731313, "iat": 1702179313, "auth_time": 1702178503, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "ny5ZluZVWnY_MFzZtWJU0g", "at_hash": "2Ktp0eoLMxS1-NZKAWKV-A", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'pglShijvlmVNk7FSexpPymHfXtPAhJuc5RMKHlCSi03rxgwrLsgzQpVfgoWZx4RPbvbGjHWC4TMbnglnyvlxtD14EBblh8f3YaQqgo3ldjWQJGqdtTFkDLVXDwyHkSIO',
        '2023-12-10 03:21:43.261801+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        6,
        '2024-06-07 04:09:41.11169+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717733381, "iat": 1702181381, "auth_time": 1702178503, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "bDec8EtFrr4SHInWQMx_ig", "at_hash": "-F4VOfFyzqO9wrfifQoQcw", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'cWlFe2lfyKFgdy5KDdnPU8XPO8uHoDzt4qMDETT6UGlAa65zAj4KCZXPVkPKt5mOC0VTEgzmYmAOZPytxmchVtwvVI52ka1zV9b4xSe2jt74VZUQDRiJ5sn3bFsNwDtv',
        '2023-12-10 03:21:43.261801+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        7,
        '2024-06-07 04:11:53.936219+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717733513, "iat": 1702181514, "auth_time": 1702178503, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "gUdeVBT3Y0bHkTBrIG1VaQ", "at_hash": "lmQ4O24M_TPY5JAKF3HpKw", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        '0yufO9GUAgyo6plKsaZ7xhgiJI2mgEJHZNZcixhRevD9YcVa6UgWVOMn1GbbZhMdUnb73OOIvZ7lTRpSjkZGSYImcCWNQPVVof01YzLeoImB36cKJ7Yb2PeU90Eg7y6I',
        '2023-12-10 03:21:43.261801+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        8,
        '2024-06-07 04:24:49.29967+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717734289, "iat": 1702182289, "auth_time": 1702178503, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "CAx1f4coj-Dkis6ebpPN6Q", "at_hash": "0sD_0o1RZVUZgt9rI6KzJg", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'lcBdioC8YVyOCIEWJIAUBg62hMOcQajn0GPrtuhkH6HwzQFzLxdxIupg5zHTBPkYuHd7K5U688F6iL7wWZZIXJb9sBrfDeyVys8J6su54yeppmBtSbpWfAAo1kSItmjm',
        '2023-12-10 03:21:43.261801+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        9,
        '2024-06-07 04:26:16.213115+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717734376, "iat": 1702182376, "auth_time": 1702182375, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "UvW4Y0SOZ1_K5MUIfXafUg", "at_hash": "eJFc0VTDsVJ-gyfw_iRmjA", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'Uqtnz8UWu56p4rIrqr5awl1w2tnKoNAJp7Nw2kLZv2ARcOYx7JJFRzJvYZtJmTFmqdA53EaI5XW8gOlDztyf8MlSOhZLQopvx8GZR9Rof0UXDIPztGUkhwJHWOKqkDhp',
        '2023-12-10 04:26:15.542851+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        10,
        '2024-06-07 18:20:29.154312+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717784429, "iat": 1702232429, "auth_time": 1702232428, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "sADSC3Q-mv1D69Rkp44j3A", "at_hash": "ONQ7Yzx6HEgy5Xf6vFjQCw", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'HIlxArAgHJ4H34F5Y614OgSNYY0PGqxmIz1rYz688S4WSBV6yqR3gJw1O3qwGbapXukGawvyqT4JFYh9oNtyMFmup63rVrT8kuCqkNcpvOQAibNXs9znzxxDEKOtrjJG',
        '2023-12-10 18:20:28.675197+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        11,
        '2024-06-07 19:46:37.690951+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717789597, "iat": 1702237597, "auth_time": 1702232428, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "X6KZ5giHZ0G30TJuG20KTA", "at_hash": "U4BI5kK5IyN3zyqE2BLQWA", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        '5BtoNOjraOJqWJNZlTSni0p5JPSnrYlv210BGFaZRAllPIfsKe4nAp7VngxVsqNcDUufVjS6wPHRhnRddhm9UGVNtOg5QBxa2wR8fpCXtRIzYpXT0LqS2muGONoO81ca',
        '2023-12-10 18:20:28.675197+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        12,
        '2024-06-08 00:39:34.934348+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717807174, "iat": 1702255175, "auth_time": 1702232428, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "1waTgSwWkfNvHU_1LAFW6w", "at_hash": "Eu_p16MVsS0gYvmfi0cANQ", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        'JN5AbhOFW57IAn3eip2fdZgKU3cC9UNWkH2riGmhTofjIW6wAZPD2VFQ13EDOWOnjmY36bUJfTgAnjL8wsBm9iIVonTh5P8KIjCFabNjM1ZmuiqhNYAhMC02XybnP9CX',
        '2023-12-10 18:20:28.675197+00'
    );
INSERT INTO public.authentik_providers_oauth2_refreshtoken
VALUES (
        13,
        '2024-06-08 01:08:05.7879+00',
        true,
        'openid profile email',
        '{"iss": "http://fyko.internal:9000/application/o/eidash/", "sub": "26f12894e40d47428bef8fe13b14eed188fad1cebe08901a87b40e074bba3628", "aud": "UTDWTGJBFVcpb7avFeQBWkFYvmdmiH4z3p5PleER", "exp": 1717808885, "iat": 1702256885, "auth_time": 1702232428, "acr": "goauthentik.io/providers/oauth2/default", "amr": null, "c_hash": null, "nonce": "IxFG02HuDv9zDBrFeaZ9hQ", "at_hash": "LyUjr59Pcjpu0L5FkScfEA", "claims": {"email": "admin@eidash.app", "email_verified": true, "name": "authentik Default Admin", "given_name": "authentik Default Admin", "preferred_username": "akadmin", "nickname": "akadmin", "groups": ["authentik Admins"]}}',
        1,
        5,
        false,
        '0OqJF2kl8oIISF2XAGpIqvCRoE8UAedosf2BPtoUGbKUEqgK84rhzfYvdxSEFWJXBfJbx3kMGnafvCc3z5et76zbYfYx5xcDQSzYde6xmNPdofWgAD9n2qxFVxYHZdMR',
        '2023-12-10 18:20:28.675197+00'
    );
--
-- Data for Name: authentik_providers_oauth2_scopemapping; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_providers_oauth2_scopemapping
VALUES (
        '5204bd26-a4ec-4560-9697-3c6ca6405f84',
        'ak_proxy',
        'authentik Proxy - User information'
    );
INSERT INTO public.authentik_providers_oauth2_scopemapping
VALUES (
        '89ab7026-603d-4670-a5ea-951ab52eef6e',
        'openid',
        ''
    );
INSERT INTO public.authentik_providers_oauth2_scopemapping
VALUES (
        '7df38578-030b-410f-9306-e6bb794c734d',
        'email',
        'Email address'
    );
INSERT INTO public.authentik_providers_oauth2_scopemapping
VALUES (
        '857be58d-077b-484d-9882-3e2376e54773',
        'profile',
        'General Profile Information'
    );
--
-- Data for Name: authentik_providers_proxy_proxyprovider; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_radius_radiusprovider; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_saml_samlpropertymapping; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_providers_saml_samlpropertymapping
VALUES (
        '6fc1f60c-9017-49ca-88b8-5e1742b5f083',
        'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn',
        NULL
    );
INSERT INTO public.authentik_providers_saml_samlpropertymapping
VALUES (
        '5f427cda-8eda-4a9b-93dd-883587561111',
        'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name',
        NULL
    );
INSERT INTO public.authentik_providers_saml_samlpropertymapping
VALUES (
        '5277cdbd-9335-492a-99dc-74c077647af3',
        'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress',
        NULL
    );
INSERT INTO public.authentik_providers_saml_samlpropertymapping
VALUES (
        '2352dec3-4d2c-40fa-9293-bae9b2a9bd2a',
        'http://schemas.goauthentik.io/2021/02/saml/username',
        NULL
    );
INSERT INTO public.authentik_providers_saml_samlpropertymapping
VALUES (
        'bf5475d5-a03f-4c05-8515-c220fe20d56a',
        'http://schemas.goauthentik.io/2021/02/saml/uid',
        NULL
    );
INSERT INTO public.authentik_providers_saml_samlpropertymapping
VALUES (
        '16ce8cef-d8df-43d3-a0e9-8a6c258bb951',
        'http://schemas.xmlsoap.org/claims/Group',
        NULL
    );
INSERT INTO public.authentik_providers_saml_samlpropertymapping
VALUES (
        '8dbd2df3-a88f-4cd4-8acd-6dcc449ebd68',
        'http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname',
        NULL
    );
--
-- Data for Name: authentik_providers_saml_samlprovider; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_scim_scimgroup; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_scim_scimmapping; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_providers_scim_scimmapping
VALUES ('01125776-dfb4-4343-8ec3-09d69ffb15d3');
INSERT INTO public.authentik_providers_scim_scimmapping
VALUES ('de2c70a0-ad26-45e3-a425-720b1591ad83');
--
-- Data for Name: authentik_providers_scim_scimprovider; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_scim_scimprovider_property_mappings_group; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_providers_scim_scimuser; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_rbac_role; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_ldap_ldappropertymapping; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES ('1d3afca1-0c6f-45ee-8e5b-c10b6add4b8f', 'path');
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES ('74e3ac3d-5116-4d86-bae1-3cd5d994e60f', 'name');
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES ('4a3da6a9-8e26-4bc3-9882-187a4f3d2dbd', 'email');
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES (
        '4741d912-95ef-468d-923e-ab48938e3135',
        'username'
    );
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES (
        '76ea55e8-2d6d-40e1-b657-325e924014b9',
        'attributes.upn'
    );
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES (
        '20c04e5e-ecab-4089-9fbc-a85ecfec00da',
        'attributes.givenName'
    );
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES (
        '2b8d4be4-40d2-45a1-b1dc-cdacf0ce8f7d',
        'attributes.sn'
    );
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES (
        '798e3f67-212e-44d7-ae24-aaff1859141d',
        'username'
    );
INSERT INTO public.authentik_sources_ldap_ldappropertymapping
VALUES ('0962948a-253a-49a1-955f-c2ff8b4e8c64', 'name');
--
-- Data for Name: authentik_sources_ldap_ldapsource; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_ldap_ldapsource_property_mappings_group; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_oauth_oauthsource; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_oauth_useroauthsourceconnection; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_plex_plexsource; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_plex_plexsourceconnection; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_saml_samlsource; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_sources_saml_usersamlsourceconnection; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_duo_authenticatorduostage; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_duo_duodevice; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_sms_authenticatorsmsstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_sms_smsdevice; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_static_authenticatorstaticstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_authenticator_static_authenticatorstaticstage
VALUES (
        '94ca8131-b290-40aa-ab27-4f069787575e',
        6,
        '2f970c44-2373-4a92-95e6-592fbe5cefc8',
        NULL,
        12
    );
--
-- Data for Name: authentik_stages_authenticator_static_staticdevice; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_static_statictoken; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_totp_authenticatortotpstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_authenticator_totp_authenticatortotpstage
VALUES (
        'b2f75b7a-973e-44f0-b692-463d4298b144',
        6,
        '6ca67d6a-7dd6-483f-ae62-e1f41fab20f9',
        NULL
    );
--
-- Data for Name: authentik_stages_authenticator_totp_totpdevice; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_authenticator_validate_authenticatorvalida3e25; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_authenticator_validate_authenticatorvalida3e25
VALUES (
        1,
        'c70cb4fe-15cd-453d-9835-235bdf938fc9',
        'b2f75b7a-973e-44f0-b692-463d4298b144'
    );
--
-- Data for Name: authentik_stages_authenticator_validate_authenticatorvalida499c; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_authenticator_validate_authenticatorvalida499c
VALUES (
        'c70cb4fe-15cd-453d-9835-235bdf938fc9',
        'skip',
        '{static,totp,webauthn,duo,sms}',
        'seconds=0',
        'preferred'
    );
INSERT INTO public.authentik_stages_authenticator_validate_authenticatorvalida499c
VALUES (
        'a13c69a1-aaa2-4a94-9df0-c5a945fc29d9',
        'skip',
        '{webauthn}',
        'seconds=0',
        'required'
    );
--
-- Data for Name: authentik_stages_authenticator_webauthn_authenticatewebauth4bbe; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_authenticator_webauthn_authenticatewebauth4bbe
VALUES (
        'd5f43dee-d0e7-4811-92cd-20a5788551d9',
        '1997de94-f12b-423a-9987-fdbc8a345559',
        'preferred',
        NULL,
        'preferred',
        NULL
    );
--
-- Data for Name: authentik_stages_authenticator_webauthn_webauthndevice; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_captcha_captchastage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_captcha_captchastage
VALUES (
        '08918cad-f650-47af-99ec-0f062e2c5b94',
        '0x4AAAAAAAOOBoPZ5zRxsF60',
        '0x4AAAAAAAOOBp2tfVPpbtxObmR9dw8bh7I',
        'https://challenges.cloudflare.com/turnstile/v0/siteverify',
        'https://challenges.cloudflare.com/turnstile/v0/api.js'
    );
--
-- Data for Name: authentik_stages_consent_consentstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_consent_consentstage
VALUES (
        '41c09eb2-1942-42d6-9300-72bc19fd9923',
        'weeks=4',
        'expiring'
    );
--
-- Data for Name: authentik_stages_consent_userconsent; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_deny_denystage; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_dummy_dummystage; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_email_emailstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_email_emailstage
VALUES (
        'e86d8339-6c5e-4b25-8887-8f7a53a31c08',
        'localhost',
        25,
        '',
        '',
        false,
        false,
        10,
        'system@authentik.local',
        30,
        'Password Recovery',
        'email/password_reset.html',
        true,
        true
    );
INSERT INTO public.authentik_stages_email_emailstage
VALUES (
        '86b37c28-9062-42e0-975c-b6e17e5d3cec',
        'localhost',
        25,
        '',
        '',
        false,
        false,
        10,
        'system@authentik.local',
        30,
        'Account Confirmation',
        'email/account_confirmation.html',
        true,
        true
    );
--
-- Data for Name: authentik_stages_identification_identificationstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_identification_identificationstage
VALUES (
        '1fd71952-5e8b-45eb-9f51-51031cf37dd3',
        '{username,email}',
        NULL,
        NULL,
        true,
        true,
        NULL,
        false,
        NULL
    );
INSERT INTO public.authentik_stages_identification_identificationstage
VALUES (
        'e2ea28b0-c397-4d3d-bcf3-770bf1a0f63b',
        '{username,email}',
        'a77bbc84-09ef-434a-90b3-85706912ad91',
        'f9a7864e-12e7-4225-ae2b-b8149e30ed3f',
        true,
        true,
        '37e0326e-2199-4ff6-b5b9-a906941a53f9',
        false,
        'bb342e02-6486-4693-94da-185b4e8878ff'
    );
--
-- Data for Name: authentik_stages_identification_identificationstage_sources; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_identification_identificationstage_sources
VALUES (
        1,
        '1fd71952-5e8b-45eb-9f51-51031cf37dd3',
        '3c7dc5d4-baaa-4286-9a4e-24a813dc63de'
    );
--
-- Data for Name: authentik_stages_invitation_invitation; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_invitation_invitation
VALUES (
        'e392ac3d-477b-473a-9d65-b20434113804',
        '2025-12-06 17:54:00+00',
        '{}',
        5,
        false,
        true,
        'testing',
        'bcbfcb4b-a8db-4ce1-bd1c-ee481eb06f8b'
    );
--
-- Data for Name: authentik_stages_invitation_invitationstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_invitation_invitationstage
VALUES ('5a807e4a-9086-449f-a42b-9bf9e9ee6e0c', false);
--
-- Data for Name: authentik_stages_password_passwordstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_password_passwordstage
VALUES (
        '37e0326e-2199-4ff6-b5b9-a906941a53f9',
        '{authentik.core.auth.InbuiltBackend,authentik.sources.ldap.auth.LDAPBackend,authentik.core.auth.TokenBackend}',
        'a9ccd0cc-506f-4e48-9cfa-288578b133c6',
        5
    );
--
-- Data for Name: authentik_stages_prompt_prompt; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        'f1d0d18a-7dbe-44b6-929a-4cc0bba29f4b',
        'username',
        'Username',
        'username',
        true,
        '',
        20,
        '',
        false,
        'username',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '8a878f34-c538-4664-a478-23a039882b6c',
        'username',
        'Username',
        'text',
        true,
        'Username',
        100,
        '',
        false,
        'default-source-enrollment-field-username',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '6f81e3a5-0325-4343-974b-da371c388374',
        'email',
        'Email',
        'email',
        true,
        'johndoe@eidash.app',
        10,
        '',
        false,
        'email',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        'd2430938-b5aa-41f6-99e5-fdd6f101f1ed',
        'password',
        'Password',
        'password',
        true,
        '****************',
        30,
        '',
        false,
        'password',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '1c75f2f8-e71b-431d-a3f4-7698d74276b1',
        'password_repeat',
        'Password (repeat)',
        'password',
        true,
        '****************',
        40,
        '',
        false,
        'password-repeat',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '23aa4f68-ab28-4c58-a09b-b0bcf06afb50',
        'password',
        'Password',
        'password',
        true,
        'Password',
        300,
        '',
        false,
        'default-password-change-field-password',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '84d41f98-1b4f-4263-ae07-6d81e4a1b480',
        'password_repeat',
        'Password (repeat)',
        'password',
        true,
        'Password (repeat)',
        301,
        '',
        false,
        'default-password-change-field-password-repeat',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        'd07debbd-ce47-41c6-a598-eb39238b3390',
        'username',
        'Username',
        'text',
        true,
        'Username',
        200,
        '',
        false,
        'default-user-settings-field-username',
        'try:
    return user.username
except:
    return ''''',
        true
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '18ee7fb7-efd7-4bcf-b7b1-598e2018c4d0',
        'name',
        'Name',
        'text',
        true,
        'Name',
        201,
        '',
        false,
        'default-user-settings-field-name',
        'try:
    return user.name
except:
    return ''''',
        true
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '0799c64b-29ee-4bb8-9429-d5c19a321f17',
        'email',
        'Email',
        'email',
        true,
        'Email',
        202,
        '',
        false,
        'default-user-settings-field-email',
        'try:
    return user.email
except:
    return ''''',
        true
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '75f14513-7be3-4897-b7e7-e0057511c01e',
        'attributes.settings.locale',
        'Locale',
        'ak-locale',
        true,
        'Locale',
        203,
        '',
        false,
        'default-user-settings-field-locale',
        'try:
    return user.attributes.get("settings", {}).get("locale", "")
except:
    return ''''',
        true
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '56dcab72-dad8-4bd4-aa8b-5e4118595cfb',
        'oobe-header-text',
        'oobe-header-text',
        'static',
        true,
        'Welcome to authentik! Please set a password for the default admin user, akadmin.',
        100,
        '',
        false,
        'initial-setup-field-header',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        'd64de06a-015f-4dde-992d-79e656ce3f7a',
        'email',
        'Email',
        'email',
        true,
        'Admin email',
        101,
        '',
        false,
        'initial-setup-field-email',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        '0c43cd2b-b01f-4e1f-9c03-4c8346888d13',
        'password',
        'Password',
        'password',
        true,
        'Password',
        300,
        '',
        false,
        'initial-setup-field-password',
        '',
        false
    );
INSERT INTO public.authentik_stages_prompt_prompt
VALUES (
        'a4da779a-06ab-4575-b23e-2ddb25aea10d',
        'password_repeat',
        'Password (repeat)',
        'password',
        true,
        'Password (repeat)',
        301,
        '',
        false,
        'initial-setup-field-password-repeat',
        '',
        false
    );
--
-- Data for Name: authentik_stages_prompt_promptstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_prompt_promptstage
VALUES ('5b2e44bb-dfba-4573-b178-1d4dad4918f1');
INSERT INTO public.authentik_stages_prompt_promptstage
VALUES ('9d8e83bc-aa73-4527-bc4e-9f8f6949edf5');
INSERT INTO public.authentik_stages_prompt_promptstage
VALUES ('f5195218-f241-440d-a3c4-1fb5ddd26f25');
INSERT INTO public.authentik_stages_prompt_promptstage
VALUES ('287aa88d-6663-47b2-9271-d1aede42b23f');
--
-- Data for Name: authentik_stages_prompt_promptstage_fields; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        7,
        '5b2e44bb-dfba-4573-b178-1d4dad4918f1',
        '75f14513-7be3-4897-b7e7-e0057511c01e'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        8,
        '5b2e44bb-dfba-4573-b178-1d4dad4918f1',
        'd07debbd-ce47-41c6-a598-eb39238b3390'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        9,
        '5b2e44bb-dfba-4573-b178-1d4dad4918f1',
        '18ee7fb7-efd7-4bcf-b7b1-598e2018c4d0'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        10,
        '5b2e44bb-dfba-4573-b178-1d4dad4918f1',
        '0799c64b-29ee-4bb8-9429-d5c19a321f17'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        47,
        '287aa88d-6663-47b2-9271-d1aede42b23f',
        '0c43cd2b-b01f-4e1f-9c03-4c8346888d13'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        48,
        '287aa88d-6663-47b2-9271-d1aede42b23f',
        'a4da779a-06ab-4575-b23e-2ddb25aea10d'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        49,
        '287aa88d-6663-47b2-9271-d1aede42b23f',
        'd64de06a-015f-4dde-992d-79e656ce3f7a'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        50,
        '287aa88d-6663-47b2-9271-d1aede42b23f',
        '56dcab72-dad8-4bd4-aa8b-5e4118595cfb'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        51,
        '9d8e83bc-aa73-4527-bc4e-9f8f6949edf5',
        '1c75f2f8-e71b-431d-a3f4-7698d74276b1'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        52,
        '9d8e83bc-aa73-4527-bc4e-9f8f6949edf5',
        'd2430938-b5aa-41f6-99e5-fdd6f101f1ed'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        53,
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        'f1d0d18a-7dbe-44b6-929a-4cc0bba29f4b'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        54,
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        '6f81e3a5-0325-4343-974b-da371c388374'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        55,
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        '1c75f2f8-e71b-431d-a3f4-7698d74276b1'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_fields
VALUES (
        56,
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        'd2430938-b5aa-41f6-99e5-fdd6f101f1ed'
    );
--
-- Data for Name: authentik_stages_prompt_promptstage_validation_policies; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_prompt_promptstage_validation_policies
VALUES (
        2,
        '5b2e44bb-dfba-4573-b178-1d4dad4918f1',
        '6b64d731-aa2d-4cf8-8466-600d700000bf'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_validation_policies
VALUES (
        3,
        '9d8e83bc-aa73-4527-bc4e-9f8f6949edf5',
        '3b9cb6cb-69d8-4014-a214-ff18053d0011'
    );
INSERT INTO public.authentik_stages_prompt_promptstage_validation_policies
VALUES (
        4,
        'f5195218-f241-440d-a3c4-1fb5ddd26f25',
        '3b9cb6cb-69d8-4014-a214-ff18053d0011'
    );
--
-- Data for Name: authentik_stages_user_delete_userdeletestage; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: authentik_stages_user_login_userloginstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_user_login_userloginstage
VALUES (
        '9a97dab4-6376-476b-b5d8-cda415796b8b',
        'seconds=0',
        false,
        'seconds=0'
    );
INSERT INTO public.authentik_stages_user_login_userloginstage
VALUES (
        '5cdddbc5-316b-43d8-a9bd-be87434ead39',
        'seconds=0',
        false,
        'seconds=0'
    );
INSERT INTO public.authentik_stages_user_login_userloginstage
VALUES (
        '94ab40bb-99c7-47fe-9a16-de5e62f4f95a',
        'seconds=0',
        false,
        'seconds=0'
    );
--
-- Data for Name: authentik_stages_user_logout_userlogoutstage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_user_logout_userlogoutstage
VALUES ('69b4befe-4dd1-4eef-adae-5e80af9e4e22');
--
-- Data for Name: authentik_stages_user_write_userwritestage; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_stages_user_write_userwritestage
VALUES (
        '20134ad3-8a27-431e-8caf-6f43d8afac2b',
        true,
        '1f2fe425-4a9f-455b-86ed-aae193b56ca1',
        '',
        'always_create',
        'external'
    );
INSERT INTO public.authentik_stages_user_write_userwritestage
VALUES (
        '996c98db-5994-4209-8b0d-c04999324417',
        false,
        '1f2fe425-4a9f-455b-86ed-aae193b56ca1',
        '',
        'create_when_required',
        'external'
    );
INSERT INTO public.authentik_stages_user_write_userwritestage
VALUES (
        '94cdadcf-7be2-4d1e-8ca1-98bc86b09e3e',
        false,
        NULL,
        '',
        'never_create',
        'external'
    );
INSERT INTO public.authentik_stages_user_write_userwritestage
VALUES (
        'd40af254-c39a-4cf1-bbbb-abef9d4a914c',
        false,
        NULL,
        '',
        'never_create',
        'external'
    );
--
-- Data for Name: authentik_tenants_tenant; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.authentik_tenants_tenant
VALUES (
        '72dbae58-e1f6-49a7-a819-4f027bc808e4',
        'authentik-default',
        true,
        'authentik',
        '/static/dist/assets/icons/icon_left_brand.svg',
        '771a9e4f-58ea-4b30-905a-e4cd49e838e7',
        'ff23467d-4f67-4042-984c-072d70a57791',
        NULL,
        NULL,
        '/static/dist/assets/icons/icon.png',
        'days=365',
        NULL,
        '3e316050-7e43-4c97-86d6-d6bb6102111a',
        '{}',
        NULL
    );
--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.django_content_type
VALUES (1, 'auth', 'permission');
INSERT INTO public.django_content_type
VALUES (2, 'auth', 'group');
INSERT INTO public.django_content_type
VALUES (3, 'contenttypes', 'contenttype');
INSERT INTO public.django_content_type
VALUES (4, 'sessions', 'session');
INSERT INTO public.django_content_type
VALUES (5, 'authentik_crypto', 'certificatekeypair');
INSERT INTO public.django_content_type
VALUES (6, 'authentik_events', 'event');
INSERT INTO public.django_content_type
VALUES (7, 'authentik_events', 'notificationtransport');
INSERT INTO public.django_content_type
VALUES (8, 'authentik_events', 'notificationrule');
INSERT INTO public.django_content_type
VALUES (9, 'authentik_events', 'notification');
INSERT INTO public.django_content_type
VALUES (
        10,
        'authentik_events',
        'notificationwebhookmapping'
    );
INSERT INTO public.django_content_type
VALUES (11, 'authentik_flows', 'flow');
INSERT INTO public.django_content_type
VALUES (12, 'authentik_flows', 'stage');
INSERT INTO public.django_content_type
VALUES (13, 'authentik_flows', 'flowstagebinding');
INSERT INTO public.django_content_type
VALUES (14, 'authentik_flows', 'flowtoken');
INSERT INTO public.django_content_type
VALUES (15, 'authentik_outposts', 'outpost');
INSERT INTO public.django_content_type
VALUES (
        16,
        'authentik_outposts',
        'outpostserviceconnection'
    );
INSERT INTO public.django_content_type
VALUES (
        17,
        'authentik_outposts',
        'dockerserviceconnection'
    );
INSERT INTO public.django_content_type
VALUES (
        18,
        'authentik_outposts',
        'kubernetesserviceconnection'
    );
INSERT INTO public.django_content_type
VALUES (19, 'authentik_policies_dummy', 'dummypolicy');
INSERT INTO public.django_content_type
VALUES (
        20,
        'authentik_policies_event_matcher',
        'eventmatcherpolicy'
    );
INSERT INTO public.django_content_type
VALUES (
        21,
        'authentik_policies_expiry',
        'passwordexpirypolicy'
    );
INSERT INTO public.django_content_type
VALUES (
        22,
        'authentik_policies_expression',
        'expressionpolicy'
    );
INSERT INTO public.django_content_type
VALUES (
        23,
        'authentik_policies_password',
        'passwordpolicy'
    );
INSERT INTO public.django_content_type
VALUES (
        24,
        'authentik_policies_reputation',
        'reputationpolicy'
    );
INSERT INTO public.django_content_type
VALUES (
        25,
        'authentik_policies_reputation',
        'reputation'
    );
INSERT INTO public.django_content_type
VALUES (26, 'authentik_policies', 'policy');
INSERT INTO public.django_content_type
VALUES (27, 'authentik_policies', 'policybinding');
INSERT INTO public.django_content_type
VALUES (28, 'authentik_policies', 'policybindingmodel');
INSERT INTO public.django_content_type
VALUES (29, 'authentik_providers_ldap', 'ldapprovider');
INSERT INTO public.django_content_type
VALUES (
        30,
        'authentik_providers_oauth2',
        'oauth2provider'
    );
INSERT INTO public.django_content_type
VALUES (31, 'authentik_providers_oauth2', 'scopemapping');
INSERT INTO public.django_content_type
VALUES (32, 'authentik_providers_oauth2', 'refreshtoken');
INSERT INTO public.django_content_type
VALUES (
        33,
        'authentik_providers_oauth2',
        'authorizationcode'
    );
INSERT INTO public.django_content_type
VALUES (34, 'authentik_providers_oauth2', 'devicetoken');
INSERT INTO public.django_content_type
VALUES (35, 'authentik_providers_oauth2', 'accesstoken');
INSERT INTO public.django_content_type
VALUES (36, 'authentik_providers_proxy', 'proxyprovider');
INSERT INTO public.django_content_type
VALUES (
        37,
        'authentik_providers_radius',
        'radiusprovider'
    );
INSERT INTO public.django_content_type
VALUES (
        38,
        'authentik_providers_saml',
        'samlpropertymapping'
    );
INSERT INTO public.django_content_type
VALUES (39, 'authentik_providers_saml', 'samlprovider');
INSERT INTO public.django_content_type
VALUES (40, 'authentik_providers_scim', 'scimmapping');
INSERT INTO public.django_content_type
VALUES (41, 'authentik_providers_scim', 'scimprovider');
INSERT INTO public.django_content_type
VALUES (42, 'authentik_providers_scim', 'scimuser');
INSERT INTO public.django_content_type
VALUES (43, 'authentik_providers_scim', 'scimgroup');
INSERT INTO public.django_content_type
VALUES (44, 'authentik_rbac', 'role');
INSERT INTO public.django_content_type
VALUES (45, 'authentik_rbac', 'systempermission');
INSERT INTO public.django_content_type
VALUES (
        46,
        'authentik_sources_ldap',
        'ldappropertymapping'
    );
INSERT INTO public.django_content_type
VALUES (47, 'authentik_sources_ldap', 'ldapsource');
INSERT INTO public.django_content_type
VALUES (48, 'authentik_sources_oauth', 'oauthsource');
INSERT INTO public.django_content_type
VALUES (
        49,
        'authentik_sources_oauth',
        'useroauthsourceconnection'
    );
INSERT INTO public.django_content_type
VALUES (50, 'authentik_sources_plex', 'plexsource');
INSERT INTO public.django_content_type
VALUES (
        51,
        'authentik_sources_plex',
        'plexsourceconnection'
    );
INSERT INTO public.django_content_type
VALUES (52, 'authentik_sources_saml', 'samlsource');
INSERT INTO public.django_content_type
VALUES (
        53,
        'authentik_sources_saml',
        'usersamlsourceconnection'
    );
INSERT INTO public.django_content_type
VALUES (
        54,
        'authentik_stages_authenticator_duo',
        'authenticatorduostage'
    );
INSERT INTO public.django_content_type
VALUES (
        55,
        'authentik_stages_authenticator_duo',
        'duodevice'
    );
INSERT INTO public.django_content_type
VALUES (
        56,
        'authentik_stages_authenticator_sms',
        'authenticatorsmsstage'
    );
INSERT INTO public.django_content_type
VALUES (
        57,
        'authentik_stages_authenticator_sms',
        'smsdevice'
    );
INSERT INTO public.django_content_type
VALUES (
        58,
        'authentik_stages_authenticator_static',
        'authenticatorstaticstage'
    );
INSERT INTO public.django_content_type
VALUES (
        59,
        'authentik_stages_authenticator_static',
        'staticdevice'
    );
INSERT INTO public.django_content_type
VALUES (
        60,
        'authentik_stages_authenticator_static',
        'statictoken'
    );
INSERT INTO public.django_content_type
VALUES (
        61,
        'authentik_stages_authenticator_totp',
        'authenticatortotpstage'
    );
INSERT INTO public.django_content_type
VALUES (
        62,
        'authentik_stages_authenticator_totp',
        'totpdevice'
    );
INSERT INTO public.django_content_type
VALUES (
        63,
        'authentik_stages_authenticator_validate',
        'authenticatorvalidatestage'
    );
INSERT INTO public.django_content_type
VALUES (
        64,
        'authentik_stages_authenticator_webauthn',
        'webauthndevice'
    );
INSERT INTO public.django_content_type
VALUES (
        65,
        'authentik_stages_authenticator_webauthn',
        'authenticatewebauthnstage'
    );
INSERT INTO public.django_content_type
VALUES (66, 'authentik_stages_captcha', 'captchastage');
INSERT INTO public.django_content_type
VALUES (67, 'authentik_stages_consent', 'consentstage');
INSERT INTO public.django_content_type
VALUES (68, 'authentik_stages_consent', 'userconsent');
INSERT INTO public.django_content_type
VALUES (69, 'authentik_stages_deny', 'denystage');
INSERT INTO public.django_content_type
VALUES (70, 'authentik_stages_dummy', 'dummystage');
INSERT INTO public.django_content_type
VALUES (71, 'authentik_stages_email', 'emailstage');
INSERT INTO public.django_content_type
VALUES (
        72,
        'authentik_stages_identification',
        'identificationstage'
    );
INSERT INTO public.django_content_type
VALUES (
        73,
        'authentik_stages_invitation',
        'invitationstage'
    );
INSERT INTO public.django_content_type
VALUES (74, 'authentik_stages_invitation', 'invitation');
INSERT INTO public.django_content_type
VALUES (75, 'authentik_stages_password', 'passwordstage');
INSERT INTO public.django_content_type
VALUES (76, 'authentik_stages_prompt', 'prompt');
INSERT INTO public.django_content_type
VALUES (77, 'authentik_stages_prompt', 'promptstage');
INSERT INTO public.django_content_type
VALUES (
        78,
        'authentik_stages_user_delete',
        'userdeletestage'
    );
INSERT INTO public.django_content_type
VALUES (
        79,
        'authentik_stages_user_login',
        'userloginstage'
    );
INSERT INTO public.django_content_type
VALUES (
        80,
        'authentik_stages_user_logout',
        'userlogoutstage'
    );
INSERT INTO public.django_content_type
VALUES (
        81,
        'authentik_stages_user_write',
        'userwritestage'
    );
INSERT INTO public.django_content_type
VALUES (82, 'authentik_tenants', 'tenant');
INSERT INTO public.django_content_type
VALUES (83, 'authentik_blueprints', 'blueprintinstance');
INSERT INTO public.django_content_type
VALUES (84, 'guardian', 'groupobjectpermission');
INSERT INTO public.django_content_type
VALUES (85, 'guardian', 'userobjectpermission');
INSERT INTO public.django_content_type
VALUES (86, 'authentik_core', 'user');
INSERT INTO public.django_content_type
VALUES (87, 'authentik_core', 'propertymapping');
INSERT INTO public.django_content_type
VALUES (88, 'authentik_core', 'source');
INSERT INTO public.django_content_type
VALUES (89, 'authentik_core', 'usersourceconnection');
INSERT INTO public.django_content_type
VALUES (90, 'authentik_core', 'token');
INSERT INTO public.django_content_type
VALUES (91, 'authentik_core', 'provider');
INSERT INTO public.django_content_type
VALUES (92, 'authentik_core', 'group');
INSERT INTO public.django_content_type
VALUES (93, 'authentik_core', 'application');
INSERT INTO public.django_content_type
VALUES (94, 'authentik_core', 'authenticatedsession');
INSERT INTO public.django_content_type
VALUES (95, 'authentik_enterprise', 'license');
INSERT INTO public.django_content_type
VALUES (96, 'authentik_enterprise', 'licenseusage');
--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.django_migrations
VALUES (
        1,
        'contenttypes',
        '0001_initial',
        '2023-12-06 23:54:02.128447+00'
    );
INSERT INTO public.django_migrations
VALUES (
        2,
        'contenttypes',
        '0002_remove_content_type_name',
        '2023-12-06 23:54:02.133621+00'
    );
INSERT INTO public.django_migrations
VALUES (
        3,
        'auth',
        '0001_initial',
        '2023-12-06 23:54:02.181571+00'
    );
INSERT INTO public.django_migrations
VALUES (
        4,
        'auth',
        '0002_alter_permission_name_max_length',
        '2023-12-06 23:54:02.187009+00'
    );
INSERT INTO public.django_migrations
VALUES (
        5,
        'auth',
        '0003_alter_user_email_max_length',
        '2023-12-06 23:54:02.191212+00'
    );
INSERT INTO public.django_migrations
VALUES (
        6,
        'auth',
        '0004_alter_user_username_opts',
        '2023-12-06 23:54:02.195062+00'
    );
INSERT INTO public.django_migrations
VALUES (
        7,
        'auth',
        '0005_alter_user_last_login_null',
        '2023-12-06 23:54:02.198973+00'
    );
INSERT INTO public.django_migrations
VALUES (
        8,
        'auth',
        '0006_require_contenttypes_0002',
        '2023-12-06 23:54:02.201752+00'
    );
INSERT INTO public.django_migrations
VALUES (
        9,
        'auth',
        '0007_alter_validators_add_error_messages',
        '2023-12-06 23:54:02.205695+00'
    );
INSERT INTO public.django_migrations
VALUES (
        10,
        'auth',
        '0008_alter_user_username_max_length',
        '2023-12-06 23:54:02.209581+00'
    );
INSERT INTO public.django_migrations
VALUES (
        11,
        'auth',
        '0009_alter_user_last_name_max_length',
        '2023-12-06 23:54:02.213421+00'
    );
INSERT INTO public.django_migrations
VALUES (
        12,
        'auth',
        '0010_alter_group_name_max_length',
        '2023-12-06 23:54:02.21805+00'
    );
INSERT INTO public.django_migrations
VALUES (
        13,
        'auth',
        '0011_update_proxy_permissions',
        '2023-12-06 23:54:02.225939+00'
    );
INSERT INTO public.django_migrations
VALUES (
        14,
        'auth',
        '0012_alter_user_first_name_max_length',
        '2023-12-06 23:54:02.230001+00'
    );
INSERT INTO public.django_migrations
VALUES (
        15,
        'authentik_policies',
        '0001_initial',
        '2023-12-06 23:54:02.261586+00'
    );
INSERT INTO public.django_migrations
VALUES (
        16,
        'authentik_policies',
        '0002_auto_20200528_1647',
        '2023-12-06 23:54:02.283955+00'
    );
INSERT INTO public.django_migrations
VALUES (
        17,
        'authentik_flows',
        '0001_initial',
        '2023-12-06 23:54:02.349344+00'
    );
INSERT INTO public.django_migrations
VALUES (
        18,
        'authentik_flows',
        '0003_auto_20200523_1133',
        '2023-12-06 23:54:02.351813+00'
    );
INSERT INTO public.django_migrations
VALUES (
        19,
        'authentik_flows',
        '0006_auto_20200629_0857',
        '2023-12-06 23:54:02.354123+00'
    );
INSERT INTO public.django_migrations
VALUES (
        20,
        'authentik_flows',
        '0007_auto_20200703_2059',
        '2023-12-06 23:54:02.356524+00'
    );
INSERT INTO public.django_migrations
VALUES (
        21,
        'authentik_blueprints',
        '0001_initial',
        '2023-12-06 23:54:02.53112+00'
    );
INSERT INTO public.django_migrations
VALUES (
        22,
        'authentik_blueprints',
        '0002_blueprintinstance_content',
        '2023-12-06 23:54:02.5373+00'
    );
INSERT INTO public.django_migrations
VALUES (
        23,
        'authentik_blueprints',
        '0003_alter_blueprintinstance_name',
        '2023-12-06 23:54:02.555012+00'
    );
INSERT INTO public.django_migrations
VALUES (
        24,
        'authentik_rbac',
        '0001_initial',
        '2023-12-06 23:54:02.579897+00'
    );
INSERT INTO public.django_migrations
VALUES (
        25,
        'authentik_flows',
        '0008_default_flows',
        '2023-12-06 23:54:02.582538+00'
    );
INSERT INTO public.django_migrations
VALUES (
        26,
        'authentik_flows',
        '0009_source_flows',
        '2023-12-06 23:54:02.585084+00'
    );
INSERT INTO public.django_migrations
VALUES (
        27,
        'authentik_flows',
        '0010_provider_flows',
        '2023-12-06 23:54:02.587728+00'
    );
INSERT INTO public.django_migrations
VALUES (
        28,
        'authentik_flows',
        '0011_flow_title',
        '2023-12-06 23:54:02.596677+00'
    );
INSERT INTO public.django_migrations
VALUES (
        29,
        'authentik_flows',
        '0012_auto_20200908_1542',
        '2023-12-06 23:54:02.638589+00'
    );
INSERT INTO public.django_migrations
VALUES (
        30,
        'authentik_flows',
        '0013_auto_20200924_1605',
        '2023-12-06 23:54:02.639507+00'
    );
INSERT INTO public.django_migrations
VALUES (
        31,
        'authentik_flows',
        '0014_auto_20200925_2332',
        '2023-12-06 23:54:02.64042+00'
    );
INSERT INTO public.django_migrations
VALUES (
        32,
        'authentik_flows',
        '0015_flowstagebinding_evaluate_on_plan',
        '2023-12-06 23:54:02.641233+00'
    );
INSERT INTO public.django_migrations
VALUES (
        33,
        'authentik_flows',
        '0016_auto_20201202_1307',
        '2023-12-06 23:54:02.642001+00'
    );
INSERT INTO public.django_migrations
VALUES (
        34,
        'authentik_flows',
        '0017_auto_20210329_1334',
        '2023-12-06 23:54:02.642752+00'
    );
INSERT INTO public.django_migrations
VALUES (
        35,
        'authentik_flows',
        '0018_oob_flows',
        '2023-12-06 23:54:02.645474+00'
    );
INSERT INTO public.django_migrations
VALUES (
        36,
        'authentik_flows',
        '0019_alter_flow_background',
        '2023-12-06 23:54:02.663409+00'
    );
INSERT INTO public.django_migrations
VALUES (
        37,
        'authentik_flows',
        '0020_flow_compatibility_mode',
        '2023-12-06 23:54:02.664702+00'
    );
INSERT INTO public.django_migrations
VALUES (
        38,
        'authentik_flows',
        '0021_flowstagebinding_invalid_response_action',
        '2023-12-06 23:54:02.666146+00'
    );
INSERT INTO public.django_migrations
VALUES (
        39,
        'authentik_flows',
        '0022_alter_flowstagebinding_invalid_response_action',
        '2023-12-06 23:54:02.667608+00'
    );
INSERT INTO public.django_migrations
VALUES (
        40,
        'authentik_flows',
        '0023_alter_flow_background',
        '2023-12-06 23:54:02.669521+00'
    );
INSERT INTO public.django_migrations
VALUES (
        41,
        'authentik_flows',
        '0024_alter_flow_compatibility_mode',
        '2023-12-06 23:54:02.670758+00'
    );
INSERT INTO public.django_migrations
VALUES (
        42,
        'authentik_crypto',
        '0001_initial',
        '2023-12-06 23:54:02.682071+00'
    );
INSERT INTO public.django_migrations
VALUES (
        43,
        'authentik_core',
        '0001_initial',
        '2023-12-06 23:54:02.901581+00'
    );
INSERT INTO public.django_migrations
VALUES (
        44,
        'authentik_providers_saml',
        '0001_initial',
        '2023-12-06 23:54:02.943328+00'
    );
INSERT INTO public.django_migrations
VALUES (
        45,
        'authentik_providers_saml',
        '0002_default_saml_property_mappings',
        '2023-12-06 23:54:02.946161+00'
    );
INSERT INTO public.django_migrations
VALUES (
        46,
        'authentik_providers_saml',
        '0003_samlprovider_sp_binding',
        '2023-12-06 23:54:02.948803+00'
    );
INSERT INTO public.django_migrations
VALUES (
        47,
        'authentik_providers_saml',
        '0004_auto_20200620_1950',
        '2023-12-06 23:54:02.951436+00'
    );
INSERT INTO public.django_migrations
VALUES (
        48,
        'authentik_providers_saml',
        '0005_remove_samlprovider_processor_path',
        '2023-12-06 23:54:02.953922+00'
    );
INSERT INTO public.django_migrations
VALUES (
        49,
        'authentik_core',
        '0002_auto_20200523_1133',
        '2023-12-06 23:54:03.148416+00'
    );
INSERT INTO public.django_migrations
VALUES (
        50,
        'authentik_core',
        '0003_default_user',
        '2023-12-06 23:54:03.151267+00'
    );
INSERT INTO public.django_migrations
VALUES (
        51,
        'authentik_core',
        '0004_auto_20200703_2213',
        '2023-12-06 23:54:03.153871+00'
    );
INSERT INTO public.django_migrations
VALUES (
        52,
        'authentik_core',
        '0005_token_intent',
        '2023-12-06 23:54:03.156413+00'
    );
INSERT INTO public.django_migrations
VALUES (
        53,
        'authentik_core',
        '0006_auto_20200709_1608',
        '2023-12-06 23:54:03.159045+00'
    );
INSERT INTO public.django_migrations
VALUES (
        54,
        'authentik_core',
        '0007_auto_20200815_1841',
        '2023-12-06 23:54:03.161665+00'
    );
INSERT INTO public.django_migrations
VALUES (
        55,
        'authentik_core',
        '0008_auto_20200824_1532',
        '2023-12-06 23:54:03.164379+00'
    );
INSERT INTO public.django_migrations
VALUES (
        56,
        'authentik_core',
        '0009_group_is_superuser',
        '2023-12-06 23:54:03.167193+00'
    );
INSERT INTO public.django_migrations
VALUES (
        57,
        'authentik_core',
        '0010_auto_20200917_1021',
        '2023-12-06 23:54:03.169853+00'
    );
INSERT INTO public.django_migrations
VALUES (
        58,
        'authentik_core',
        '0011_provider_name_temp',
        '2023-12-06 23:54:03.172495+00'
    );
INSERT INTO public.django_migrations
VALUES (
        59,
        'authentik_providers_saml',
        '0006_remove_samlprovider_name',
        '2023-12-06 23:54:03.189645+00'
    );
INSERT INTO public.django_migrations
VALUES (
        60,
        'authentik_crypto',
        '0002_create_self_signed_kp',
        '2023-12-06 23:54:03.193043+00'
    );
INSERT INTO public.django_migrations
VALUES (
        61,
        'authentik_providers_oauth2',
        '0001_initial',
        '2023-12-06 23:54:03.453205+00'
    );
INSERT INTO public.django_migrations
VALUES (
        62,
        'authentik_providers_oauth2',
        '0002_oauth2provider_sub_mode',
        '2023-12-06 23:54:03.461232+00'
    );
INSERT INTO public.django_migrations
VALUES (
        63,
        'authentik_providers_oauth2',
        '0003_auto_20200916_2129',
        '2023-12-06 23:54:03.471336+00'
    );
INSERT INTO public.django_migrations
VALUES (
        64,
        'authentik_providers_oauth2',
        '0004_remove_oauth2provider_post_logout_redirect_uris',
        '2023-12-06 23:54:03.478223+00'
    );
INSERT INTO public.django_migrations
VALUES (
        65,
        'authentik_providers_oauth2',
        '0005_auto_20200920_1240',
        '2023-12-06 23:54:03.484668+00'
    );
INSERT INTO public.django_migrations
VALUES (
        66,
        'authentik_providers_oauth2',
        '0006_remove_oauth2provider_name',
        '2023-12-06 23:54:03.501575+00'
    );
INSERT INTO public.django_migrations
VALUES (
        67,
        'authentik_core',
        '0012_auto_20201003_1737',
        '2023-12-06 23:54:03.644544+00'
    );
INSERT INTO public.django_migrations
VALUES (
        68,
        'authentik_core',
        '0013_auto_20201003_2132',
        '2023-12-06 23:54:03.645731+00'
    );
INSERT INTO public.django_migrations
VALUES (
        69,
        'authentik_core',
        '0014_auto_20201018_1158',
        '2023-12-06 23:54:03.646783+00'
    );
INSERT INTO public.django_migrations
VALUES (
        70,
        'authentik_core',
        '0015_application_icon',
        '2023-12-06 23:54:03.648607+00'
    );
INSERT INTO public.django_migrations
VALUES (
        71,
        'authentik_core',
        '0016_auto_20201202_2234',
        '2023-12-06 23:54:03.649839+00'
    );
INSERT INTO public.django_migrations
VALUES (
        72,
        'authentik_core',
        '0017_managed',
        '2023-12-06 23:54:03.678432+00'
    );
INSERT INTO public.django_migrations
VALUES (
        73,
        'authentik_core',
        '0018_auto_20210330_1345',
        '2023-12-06 23:54:03.813214+00'
    );
INSERT INTO public.django_migrations
VALUES (
        74,
        'authentik_core',
        '0019_source_managed',
        '2023-12-06 23:54:03.816154+00'
    );
INSERT INTO public.django_migrations
VALUES (
        75,
        'authentik_core',
        '0020_source_user_matching_mode',
        '2023-12-06 23:54:03.818773+00'
    );
INSERT INTO public.django_migrations
VALUES (
        76,
        'authentik_core',
        '0021_alter_application_slug',
        '2023-12-06 23:54:03.821432+00'
    );
INSERT INTO public.django_migrations
VALUES (
        77,
        'authentik_core',
        '0022_authenticatedsession',
        '2023-12-06 23:54:03.824242+00'
    );
INSERT INTO public.django_migrations
VALUES (
        78,
        'authentik_core',
        '0023_alter_application_meta_launch_url',
        '2023-12-06 23:54:03.826851+00'
    );
INSERT INTO public.django_migrations
VALUES (
        79,
        'authentik_core',
        '0024_alter_token_identifier',
        '2023-12-06 23:54:03.829519+00'
    );
INSERT INTO public.django_migrations
VALUES (
        80,
        'authentik_core',
        '0025_alter_application_meta_icon',
        '2023-12-06 23:54:03.832052+00'
    );
INSERT INTO public.django_migrations
VALUES (
        81,
        'authentik_core',
        '0026_alter_application_meta_icon',
        '2023-12-06 23:54:03.834587+00'
    );
INSERT INTO public.django_migrations
VALUES (
        82,
        'authentik_core',
        '0027_bootstrap_token',
        '2023-12-06 23:54:03.837242+00'
    );
INSERT INTO public.django_migrations
VALUES (
        83,
        'authentik_core',
        '0028_alter_token_intent',
        '2023-12-06 23:54:03.839829+00'
    );
INSERT INTO public.django_migrations
VALUES (
        84,
        'authentik_flows',
        '0020_flowtoken',
        '2023-12-06 23:54:03.869359+00'
    );
INSERT INTO public.django_migrations
VALUES (
        85,
        'authentik_flows',
        '0021_auto_20211227_2103',
        '2023-12-06 23:54:03.872516+00'
    );
INSERT INTO public.django_migrations
VALUES (
        86,
        'authentik_flows',
        '0022_flow_layout',
        '2023-12-06 23:54:03.881941+00'
    );
INSERT INTO public.django_migrations
VALUES (
        87,
        'authentik_flows',
        '0023_flow_denied_action',
        '2023-12-06 23:54:03.890903+00'
    );
INSERT INTO public.django_migrations
VALUES (
        88,
        'authentik_flows',
        '0024_flow_authentication',
        '2023-12-06 23:54:03.899354+00'
    );
INSERT INTO public.django_migrations
VALUES (
        89,
        'authentik_flows',
        '0025_alter_flowstagebinding_evaluate_on_plan_and_more',
        '2023-12-06 23:54:03.924029+00'
    );
INSERT INTO public.django_migrations
VALUES (
        90,
        'authentik_core',
        '0019_application_group',
        '2023-12-06 23:54:03.93235+00'
    );
INSERT INTO public.django_migrations
VALUES (
        91,
        'authentik_core',
        '0020_application_open_in_new_tab',
        '2023-12-06 23:54:03.940623+00'
    );
INSERT INTO public.django_migrations
VALUES (
        92,
        'authentik_core',
        '0021_source_user_path_user_path',
        '2023-12-06 23:54:03.959341+00'
    );
INSERT INTO public.django_migrations
VALUES (
        93,
        'authentik_core',
        '0022_alter_group_parent',
        '2023-12-06 23:54:03.976423+00'
    );
INSERT INTO public.django_migrations
VALUES (
        94,
        'authentik_core',
        '0023_source_authentik_c_slug_ccb2e5_idx_and_more',
        '2023-12-06 23:54:04.001726+00'
    );
INSERT INTO public.django_migrations
VALUES (
        95,
        'authentik_core',
        '0024_source_icon',
        '2023-12-06 23:54:04.012111+00'
    );
INSERT INTO public.django_migrations
VALUES (
        96,
        'authentik_core',
        '0025_alter_provider_authorization_flow',
        '2023-12-06 23:54:04.030163+00'
    );
INSERT INTO public.django_migrations
VALUES (
        97,
        'authentik_providers_scim',
        '0001_initial',
        '2023-12-06 23:54:04.304342+00'
    );
INSERT INTO public.django_migrations
VALUES (
        98,
        'authentik_providers_scim',
        '0002_scimuser',
        '2023-12-06 23:54:04.307126+00'
    );
INSERT INTO public.django_migrations
VALUES (
        99,
        'authentik_providers_scim',
        '0003_scimgroup',
        '2023-12-06 23:54:04.309877+00'
    );
INSERT INTO public.django_migrations
VALUES (
        100,
        'authentik_providers_scim',
        '0004_scimprovider_property_mappings_group',
        '2023-12-06 23:54:04.312493+00'
    );
INSERT INTO public.django_migrations
VALUES (
        101,
        'authentik_providers_scim',
        '0005_scimprovider_exclude_users_service_account_and_more',
        '2023-12-06 23:54:04.315198+00'
    );
INSERT INTO public.django_migrations
VALUES (
        102,
        'authentik_providers_scim',
        '0006_rename_parent_group_scimprovider_filter_group',
        '2023-12-06 23:54:04.317862+00'
    );
INSERT INTO public.django_migrations
VALUES (
        103,
        'authentik_providers_ldap',
        '0001_initial',
        '2023-12-06 23:54:04.352961+00'
    );
INSERT INTO public.django_migrations
VALUES (
        104,
        'authentik_providers_ldap',
        '0002_ldapprovider_search_group',
        '2023-12-06 23:54:04.35601+00'
    );
INSERT INTO public.django_migrations
VALUES (
        105,
        'authentik_providers_ldap',
        '0003_auto_20210713_1138',
        '2023-12-06 23:54:04.358895+00'
    );
INSERT INTO public.django_migrations
VALUES (
        106,
        'authentik_providers_ldap',
        '0004_auto_20210713_2115',
        '2023-12-06 23:54:04.361706+00'
    );
INSERT INTO public.django_migrations
VALUES (
        107,
        'authentik_providers_ldap',
        '0005_ldapprovider_search_mode',
        '2023-12-06 23:54:04.36452+00'
    );
INSERT INTO public.django_migrations
VALUES (
        108,
        'authentik_providers_ldap',
        '0002_ldapprovider_bind_mode',
        '2023-12-06 23:54:04.375125+00'
    );
INSERT INTO public.django_migrations
VALUES (
        109,
        'authentik_core',
        '0026_alter_propertymapping_name_alter_provider_name',
        '2023-12-06 23:54:04.439034+00'
    );
INSERT INTO public.django_migrations
VALUES (
        110,
        'authentik_core',
        '0027_alter_user_uuid',
        '2023-12-06 23:54:04.456561+00'
    );
INSERT INTO public.django_migrations
VALUES (
        111,
        'authentik_core',
        '0028_provider_authentication_flow',
        '2023-12-06 23:54:04.47874+00'
    );
INSERT INTO public.django_migrations
VALUES (
        112,
        'authentik_core',
        '0029_provider_backchannel_applications_and_more',
        '2023-12-06 23:54:04.564674+00'
    );
INSERT INTO public.django_migrations
VALUES (
        113,
        'authentik_core',
        '0030_user_type',
        '2023-12-06 23:54:04.59146+00'
    );
INSERT INTO public.django_migrations
VALUES (
        114,
        'authentik_core',
        '0031_alter_user_type',
        '2023-12-06 23:54:04.617462+00'
    );
INSERT INTO public.django_migrations
VALUES (
        115,
        'authentik_core',
        '0032_group_roles',
        '2023-12-06 23:54:04.670079+00'
    );
INSERT INTO public.django_migrations
VALUES (
        116,
        'authentik_crypto',
        '0003_certificatekeypair_managed',
        '2023-12-06 23:54:04.685359+00'
    );
INSERT INTO public.django_migrations
VALUES (
        117,
        'authentik_crypto',
        '0004_alter_certificatekeypair_name',
        '2023-12-06 23:54:04.713857+00'
    );
INSERT INTO public.django_migrations
VALUES (
        118,
        'authentik_enterprise',
        '0001_initial',
        '2023-12-06 23:54:04.740138+00'
    );
INSERT INTO public.django_migrations
VALUES (
        119,
        'authentik_enterprise',
        '0002_rename_users_license_internal_users_and_more',
        '2023-12-06 23:54:04.751888+00'
    );
INSERT INTO public.django_migrations
VALUES (
        120,
        'authentik_policies',
        '0003_auto_20200908_1542',
        '2023-12-06 23:54:04.771306+00'
    );
INSERT INTO public.django_migrations
VALUES (
        121,
        'authentik_policies',
        '0004_policy_execution_logging',
        '2023-12-06 23:54:04.77679+00'
    );
INSERT INTO public.django_migrations
VALUES (
        122,
        'authentik_policies_event_matcher',
        '0001_initial',
        '2023-12-06 23:54:04.802323+00'
    );
INSERT INTO public.django_migrations
VALUES (
        123,
        'authentik_policies_event_matcher',
        '0002_auto_20201230_2046',
        '2023-12-06 23:54:04.805215+00'
    );
INSERT INTO public.django_migrations
VALUES (
        124,
        'authentik_policies_event_matcher',
        '0003_auto_20210110_1907',
        '2023-12-06 23:54:04.808113+00'
    );
INSERT INTO public.django_migrations
VALUES (
        125,
        'authentik_policies_event_matcher',
        '0004_auto_20210112_2158',
        '2023-12-06 23:54:04.81093+00'
    );
INSERT INTO public.django_migrations
VALUES (
        126,
        'authentik_policies_event_matcher',
        '0005_auto_20210202_1821',
        '2023-12-06 23:54:04.813734+00'
    );
INSERT INTO public.django_migrations
VALUES (
        127,
        'authentik_policies_event_matcher',
        '0006_auto_20210203_1134',
        '2023-12-06 23:54:04.81644+00'
    );
INSERT INTO public.django_migrations
VALUES (
        128,
        'authentik_policies_event_matcher',
        '0007_auto_20210209_1657',
        '2023-12-06 23:54:04.819269+00'
    );
INSERT INTO public.django_migrations
VALUES (
        129,
        'authentik_policies_event_matcher',
        '0008_auto_20210213_1640',
        '2023-12-06 23:54:04.822125+00'
    );
INSERT INTO public.django_migrations
VALUES (
        130,
        'authentik_policies_event_matcher',
        '0009_auto_20210215_2159',
        '2023-12-06 23:54:04.82492+00'
    );
INSERT INTO public.django_migrations
VALUES (
        131,
        'authentik_policies_event_matcher',
        '0010_auto_20210222_1821',
        '2023-12-06 23:54:04.827659+00'
    );
INSERT INTO public.django_migrations
VALUES (
        132,
        'authentik_policies_event_matcher',
        '0011_auto_20210302_0856',
        '2023-12-06 23:54:04.830385+00'
    );
INSERT INTO public.django_migrations
VALUES (
        133,
        'authentik_policies_event_matcher',
        '0012_auto_20210323_1339',
        '2023-12-06 23:54:04.833211+00'
    );
INSERT INTO public.django_migrations
VALUES (
        134,
        'authentik_policies_event_matcher',
        '0013_alter_eventmatcherpolicy_app',
        '2023-12-06 23:54:04.835982+00'
    );
INSERT INTO public.django_migrations
VALUES (
        135,
        'authentik_policies_event_matcher',
        '0014_alter_eventmatcherpolicy_app',
        '2023-12-06 23:54:04.839132+00'
    );
INSERT INTO public.django_migrations
VALUES (
        136,
        'authentik_policies_event_matcher',
        '0015_alter_eventmatcherpolicy_app',
        '2023-12-06 23:54:04.841963+00'
    );
INSERT INTO public.django_migrations
VALUES (
        137,
        'authentik_policies_event_matcher',
        '0016_alter_eventmatcherpolicy_action',
        '2023-12-06 23:54:04.844848+00'
    );
INSERT INTO public.django_migrations
VALUES (
        138,
        'authentik_policies_event_matcher',
        '0017_alter_eventmatcherpolicy_action',
        '2023-12-06 23:54:04.847633+00'
    );
INSERT INTO public.django_migrations
VALUES (
        139,
        'authentik_policies_event_matcher',
        '0018_alter_eventmatcherpolicy_action',
        '2023-12-06 23:54:04.850482+00'
    );
INSERT INTO public.django_migrations
VALUES (
        140,
        'authentik_events',
        '0001_initial',
        '2023-12-06 23:54:05.242003+00'
    );
INSERT INTO public.django_migrations
VALUES (
        141,
        'authentik_events',
        '0002_auto_20200918_2116',
        '2023-12-06 23:54:05.245091+00'
    );
INSERT INTO public.django_migrations
VALUES (
        142,
        'authentik_events',
        '0003_auto_20200917_1155',
        '2023-12-06 23:54:05.248336+00'
    );
INSERT INTO public.django_migrations
VALUES (
        143,
        'authentik_events',
        '0004_auto_20200921_1829',
        '2023-12-06 23:54:05.251196+00'
    );
INSERT INTO public.django_migrations
VALUES (
        144,
        'authentik_events',
        '0005_auto_20201005_2139',
        '2023-12-06 23:54:05.254036+00'
    );
INSERT INTO public.django_migrations
VALUES (
        145,
        'authentik_events',
        '0006_auto_20201017_2024',
        '2023-12-06 23:54:05.257308+00'
    );
INSERT INTO public.django_migrations
VALUES (
        146,
        'authentik_events',
        '0007_auto_20201215_0939',
        '2023-12-06 23:54:05.260194+00'
    );
INSERT INTO public.django_migrations
VALUES (
        147,
        'authentik_events',
        '0008_auto_20201220_1651',
        '2023-12-06 23:54:05.263454+00'
    );
INSERT INTO public.django_migrations
VALUES (
        148,
        'authentik_events',
        '0009_auto_20201227_1210',
        '2023-12-06 23:54:05.266453+00'
    );
INSERT INTO public.django_migrations
VALUES (
        149,
        'authentik_events',
        '0010_notification_notificationtransport_notificationrule',
        '2023-12-06 23:54:05.269593+00'
    );
INSERT INTO public.django_migrations
VALUES (
        150,
        'authentik_events',
        '0011_notification_rules_default_v1',
        '2023-12-06 23:54:05.272763+00'
    );
INSERT INTO public.django_migrations
VALUES (
        151,
        'authentik_events',
        '0012_auto_20210202_1821',
        '2023-12-06 23:54:05.275654+00'
    );
INSERT INTO public.django_migrations
VALUES (
        152,
        'authentik_events',
        '0013_auto_20210209_1657',
        '2023-12-06 23:54:05.278506+00'
    );
INSERT INTO public.django_migrations
VALUES (
        153,
        'authentik_events',
        '0014_expiry',
        '2023-12-06 23:54:05.281344+00'
    );
INSERT INTO public.django_migrations
VALUES (
        154,
        'authentik_events',
        '0015_alter_event_action',
        '2023-12-06 23:54:05.284064+00'
    );
INSERT INTO public.django_migrations
VALUES (
        155,
        'authentik_events',
        '0016_add_tenant',
        '2023-12-06 23:54:05.286869+00'
    );
INSERT INTO public.django_migrations
VALUES (
        156,
        'authentik_events',
        '0017_alter_event_action',
        '2023-12-06 23:54:05.289645+00'
    );
INSERT INTO public.django_migrations
VALUES (
        157,
        'authentik_events',
        '0018_auto_20210911_2217',
        '2023-12-06 23:54:05.292457+00'
    );
INSERT INTO public.django_migrations
VALUES (
        158,
        'authentik_events',
        '0019_alter_notificationtransport_webhook_url',
        '2023-12-06 23:54:05.295329+00'
    );
INSERT INTO public.django_migrations
VALUES (
        159,
        'authentik_events',
        '0002_alter_notificationtransport_mode',
        '2023-12-06 23:54:05.317967+00'
    );
INSERT INTO public.django_migrations
VALUES (
        160,
        'authentik_flows',
        '0026_alter_flow_options',
        '2023-12-06 23:54:05.326157+00'
    );
INSERT INTO public.django_migrations
VALUES (
        161,
        'authentik_flows',
        '0027_auto_20231028_1424',
        '2023-12-06 23:54:05.345653+00'
    );
INSERT INTO public.django_migrations
VALUES (
        162,
        'authentik_outposts',
        '0001_initial',
        '2023-12-06 23:54:05.748746+00'
    );
INSERT INTO public.django_migrations
VALUES (
        163,
        'authentik_outposts',
        '0002_auto_20200826_1306',
        '2023-12-06 23:54:05.751807+00'
    );
INSERT INTO public.django_migrations
VALUES (
        164,
        'authentik_outposts',
        '0003_auto_20200827_2108',
        '2023-12-06 23:54:05.754796+00'
    );
INSERT INTO public.django_migrations
VALUES (
        165,
        'authentik_outposts',
        '0004_auto_20200830_1056',
        '2023-12-06 23:54:05.757632+00'
    );
INSERT INTO public.django_migrations
VALUES (
        166,
        'authentik_outposts',
        '0005_auto_20200909_1733',
        '2023-12-06 23:54:05.760541+00'
    );
INSERT INTO public.django_migrations
VALUES (
        167,
        'authentik_outposts',
        '0006_auto_20201003_2239',
        '2023-12-06 23:54:05.763387+00'
    );
INSERT INTO public.django_migrations
VALUES (
        168,
        'authentik_outposts',
        '0007_remove_outpost_channels',
        '2023-12-06 23:54:05.766219+00'
    );
INSERT INTO public.django_migrations
VALUES (
        169,
        'authentik_outposts',
        '0008_auto_20201014_1547',
        '2023-12-06 23:54:05.769059+00'
    );
INSERT INTO public.django_migrations
VALUES (
        170,
        'authentik_outposts',
        '0009_fix_missing_token_identifier',
        '2023-12-06 23:54:05.771881+00'
    );
INSERT INTO public.django_migrations
VALUES (
        171,
        'authentik_outposts',
        '0010_service_connection',
        '2023-12-06 23:54:05.774718+00'
    );
INSERT INTO public.django_migrations
VALUES (
        172,
        'authentik_outposts',
        '0011_docker_tls_auth',
        '2023-12-06 23:54:05.777882+00'
    );
INSERT INTO public.django_migrations
VALUES (
        173,
        'authentik_outposts',
        '0012_service_connection_non_unique',
        '2023-12-06 23:54:05.780781+00'
    );
INSERT INTO public.django_migrations
VALUES (
        174,
        'authentik_outposts',
        '0013_auto_20201203_2009',
        '2023-12-06 23:54:05.783636+00'
    );
INSERT INTO public.django_migrations
VALUES (
        175,
        'authentik_outposts',
        '0014_auto_20201213_1407',
        '2023-12-06 23:54:05.786505+00'
    );
INSERT INTO public.django_migrations
VALUES (
        176,
        'authentik_outposts',
        '0015_auto_20201224_1206',
        '2023-12-06 23:54:05.789351+00'
    );
INSERT INTO public.django_migrations
VALUES (
        177,
        'authentik_outposts',
        '0016_alter_outpost_type',
        '2023-12-06 23:54:05.792201+00'
    );
INSERT INTO public.django_migrations
VALUES (
        178,
        'authentik_outposts',
        '0017_outpost_managed',
        '2023-12-06 23:54:05.795116+00'
    );
INSERT INTO public.django_migrations
VALUES (
        179,
        'authentik_outposts',
        '0018_kubernetesserviceconnection_verify_ssl',
        '2023-12-06 23:54:05.801885+00'
    );
INSERT INTO public.django_migrations
VALUES (
        180,
        'authentik_outposts',
        '0019_alter_outpost_name_and_more',
        '2023-12-06 23:54:05.862494+00'
    );
INSERT INTO public.django_migrations
VALUES (
        181,
        'authentik_outposts',
        '0020_alter_outpost_type',
        '2023-12-06 23:54:05.883212+00'
    );
INSERT INTO public.django_migrations
VALUES (
        182,
        'authentik_policies',
        '0005_binding_group',
        '2023-12-06 23:54:05.964781+00'
    );
INSERT INTO public.django_migrations
VALUES (
        183,
        'authentik_policies',
        '0006_auto_20210329_1334',
        '2023-12-06 23:54:05.970192+00'
    );
INSERT INTO public.django_migrations
VALUES (
        184,
        'authentik_policies',
        '0007_policybindingmodel_policy_engine_mode',
        '2023-12-06 23:54:05.98778+00'
    );
INSERT INTO public.django_migrations
VALUES (
        185,
        'authentik_policies',
        '0008_policybinding_authentik_p_policy__534e15_idx_and_more',
        '2023-12-06 23:54:06.047043+00'
    );
INSERT INTO public.django_migrations
VALUES (
        186,
        'authentik_policies',
        '0009_alter_policy_name',
        '2023-12-06 23:54:06.06717+00'
    );
INSERT INTO public.django_migrations
VALUES (
        187,
        'authentik_policies',
        '0010_alter_policy_name',
        '2023-12-06 23:54:06.113628+00'
    );
INSERT INTO public.django_migrations
VALUES (
        188,
        'authentik_policies',
        '0011_policybinding_failure_result_and_more',
        '2023-12-06 23:54:06.145181+00'
    );
INSERT INTO public.django_migrations
VALUES (
        189,
        'authentik_policies_dummy',
        '0001_initial',
        '2023-12-06 23:54:06.172256+00'
    );
INSERT INTO public.django_migrations
VALUES (
        190,
        'authentik_policies_dummy',
        '0002_dummypolicy_authentik_p_policy__648f9b_idx',
        '2023-12-06 23:54:06.182135+00'
    );
INSERT INTO public.django_migrations
VALUES (
        191,
        'authentik_policies_event_matcher',
        '0019_alter_eventmatcherpolicy_app',
        '2023-12-06 23:54:06.1881+00'
    );
INSERT INTO public.django_migrations
VALUES (
        192,
        'authentik_policies_event_matcher',
        '0020_eventmatcherpolicy_authentik_p_policy__e605cf_idx',
        '2023-12-06 23:54:06.197199+00'
    );
INSERT INTO public.django_migrations
VALUES (
        193,
        'authentik_policies_event_matcher',
        '0021_alter_eventmatcherpolicy_app',
        '2023-12-06 23:54:06.203089+00'
    );
INSERT INTO public.django_migrations
VALUES (
        194,
        'authentik_policies_event_matcher',
        '0022_eventmatcherpolicy_model',
        '2023-12-06 23:54:06.209281+00'
    );
INSERT INTO public.django_migrations
VALUES (
        195,
        'authentik_policies_event_matcher',
        '0023_alter_eventmatcherpolicy_action_and_more',
        '2023-12-06 23:54:06.240017+00'
    );
INSERT INTO public.django_migrations
VALUES (
        196,
        'authentik_policies_expiry',
        '0001_initial',
        '2023-12-06 23:54:06.2671+00'
    );
INSERT INTO public.django_migrations
VALUES (
        197,
        'authentik_policies_expiry',
        '0002_passwordexpirypolicy_authentik_p_policy__cf73a7_idx',
        '2023-12-06 23:54:06.276669+00'
    );
INSERT INTO public.django_migrations
VALUES (
        198,
        'authentik_policies_expression',
        '0001_initial',
        '2023-12-06 23:54:06.460427+00'
    );
INSERT INTO public.django_migrations
VALUES (
        199,
        'authentik_policies_expression',
        '0002_auto_20200926_1156',
        '2023-12-06 23:54:06.48274+00'
    );
INSERT INTO public.django_migrations
VALUES (
        200,
        'authentik_policies_expression',
        '0003_auto_20201203_1223',
        '2023-12-06 23:54:06.503373+00'
    );
INSERT INTO public.django_migrations
VALUES (
        201,
        'authentik_policies_expression',
        '0004_expressionpolicy_authentik_p_policy__fb6feb_idx',
        '2023-12-06 23:54:06.514008+00'
    );
INSERT INTO public.django_migrations
VALUES (
        202,
        'authentik_policies_password',
        '0001_initial',
        '2023-12-06 23:54:06.544401+00'
    );
INSERT INTO public.django_migrations
VALUES (
        203,
        'authentik_policies_password',
        '0002_passwordpolicy_password_field',
        '2023-12-06 23:54:06.551469+00'
    );
INSERT INTO public.django_migrations
VALUES (
        204,
        'authentik_policies_password',
        '0003_passwordpolicy_amount_digits',
        '2023-12-06 23:54:06.57314+00'
    );
INSERT INTO public.django_migrations
VALUES (
        205,
        'authentik_policies_password',
        '0004_passwordpolicy_authentik_p_policy__855e80_idx',
        '2023-12-06 23:54:06.583582+00'
    );
INSERT INTO public.django_migrations
VALUES (
        206,
        'authentik_policies_password',
        '0005_passwordpolicy_check_have_i_been_pwned_and_more',
        '2023-12-06 23:54:06.610174+00'
    );
INSERT INTO public.django_migrations
VALUES (
        207,
        'authentik_policies_reputation',
        '0001_initial',
        '2023-12-06 23:54:06.676287+00'
    );
INSERT INTO public.django_migrations
VALUES (
        208,
        'authentik_policies_reputation',
        '0002_auto_20210529_2046',
        '2023-12-06 23:54:06.731169+00'
    );
INSERT INTO public.django_migrations
VALUES (
        209,
        'authentik_policies_reputation',
        '0003_reputation_delete_ipreputation_delete_userreputation',
        '2023-12-06 23:54:06.752924+00'
    );
INSERT INTO public.django_migrations
VALUES (
        210,
        'authentik_policies_reputation',
        '0004_reputationpolicy_authentik_p_policy__8f0d70_idx',
        '2023-12-06 23:54:06.76358+00'
    );
INSERT INTO public.django_migrations
VALUES (
        211,
        'authentik_policies_reputation',
        '0005_reputation_expires_reputation_expiring',
        '2023-12-06 23:54:06.771785+00'
    );
INSERT INTO public.django_migrations
VALUES (
        212,
        'authentik_providers_ldap',
        '0003_ldapprovider_mfa_support_and_more',
        '2023-12-06 23:54:06.805181+00'
    );
INSERT INTO public.django_migrations
VALUES (
        213,
        'authentik_sources_oauth',
        '0001_initial',
        '2023-12-06 23:54:06.863761+00'
    );
INSERT INTO public.django_migrations
VALUES (
        214,
        'authentik_sources_oauth',
        '0002_auto_20200520_1108',
        '2023-12-06 23:54:06.894291+00'
    );
INSERT INTO public.django_migrations
VALUES (
        215,
        'authentik_sources_oauth',
        '0003_auto_20210416_0726',
        '2023-12-06 23:54:06.914465+00'
    );
INSERT INTO public.django_migrations
VALUES (
        216,
        'authentik_sources_oauth',
        '0004_auto_20210417_1900',
        '2023-12-06 23:54:06.95879+00'
    );
INSERT INTO public.django_migrations
VALUES (
        217,
        'authentik_sources_oauth',
        '0005_update_provider_type_names',
        '2023-12-06 23:54:07.128414+00'
    );
INSERT INTO public.django_migrations
VALUES (
        218,
        'authentik_sources_oauth',
        '0006_oauthsource_additional_scopes',
        '2023-12-06 23:54:07.13839+00'
    );
INSERT INTO public.django_migrations
VALUES (
        219,
        'authentik_sources_oauth',
        '0007_oauthsource_oidc_jwks_oauthsource_oidc_jwks_url_and_more',
        '2023-12-06 23:54:07.160285+00'
    );
INSERT INTO public.django_migrations
VALUES (
        220,
        'authentik_providers_oauth2',
        '0007_auto_20201016_1107',
        '2023-12-06 23:54:07.290265+00'
    );
INSERT INTO public.django_migrations
VALUES (
        221,
        'authentik_providers_oauth2',
        '0008_oauth2provider_issuer_mode',
        '2023-12-06 23:54:07.291865+00'
    );
INSERT INTO public.django_migrations
VALUES (
        222,
        'authentik_providers_oauth2',
        '0009_remove_oauth2provider_response_type',
        '2023-12-06 23:54:07.293563+00'
    );
INSERT INTO public.django_migrations
VALUES (
        223,
        'authentik_providers_oauth2',
        '0010_auto_20201227_1804',
        '2023-12-06 23:54:07.295024+00'
    );
INSERT INTO public.django_migrations
VALUES (
        224,
        'authentik_providers_oauth2',
        '0011_managed',
        '2023-12-06 23:54:07.296399+00'
    );
INSERT INTO public.django_migrations
VALUES (
        225,
        'authentik_providers_oauth2',
        '0012_oauth2provider_access_code_validity',
        '2023-12-06 23:54:07.297799+00'
    );
INSERT INTO public.django_migrations
VALUES (
        226,
        'authentik_providers_oauth2',
        '0013_alter_authorizationcode_nonce',
        '2023-12-06 23:54:07.299327+00'
    );
INSERT INTO public.django_migrations
VALUES (
        227,
        'authentik_providers_oauth2',
        '0014_alter_oauth2provider_rsa_key',
        '2023-12-06 23:54:07.300905+00'
    );
INSERT INTO public.django_migrations
VALUES (
        228,
        'authentik_providers_oauth2',
        '0015_auto_20210703_1313',
        '2023-12-06 23:54:07.302316+00'
    );
INSERT INTO public.django_migrations
VALUES (
        229,
        'authentik_providers_oauth2',
        '0016_alter_authorizationcode_nonce',
        '2023-12-06 23:54:07.303735+00'
    );
INSERT INTO public.django_migrations
VALUES (
        230,
        'authentik_providers_oauth2',
        '0017_alter_oauth2provider_token_validity',
        '2023-12-06 23:54:07.305206+00'
    );
INSERT INTO public.django_migrations
VALUES (
        231,
        'authentik_providers_oauth2',
        '0008_rename_rsa_key_oauth2provider_signing_key_and_more',
        '2023-12-06 23:54:07.326659+00'
    );
INSERT INTO public.django_migrations
VALUES (
        232,
        'authentik_providers_oauth2',
        '0009_oauth2provider_verification_keys_and_more',
        '2023-12-06 23:54:07.388035+00'
    );
INSERT INTO public.django_migrations
VALUES (
        233,
        'authentik_providers_oauth2',
        '0010_alter_oauth2provider_verification_keys',
        '2023-12-06 23:54:07.412389+00'
    );
INSERT INTO public.django_migrations
VALUES (
        234,
        'authentik_providers_oauth2',
        '0011_oauth2provider_jwks_sources_and_more',
        '2023-12-06 23:54:07.472272+00'
    );
INSERT INTO public.django_migrations
VALUES (
        235,
        'authentik_providers_oauth2',
        '0012_remove_oauth2provider_verification_keys',
        '2023-12-06 23:54:07.654653+00'
    );
INSERT INTO public.django_migrations
VALUES (
        236,
        'authentik_providers_oauth2',
        '0013_devicetoken',
        '2023-12-06 23:54:07.699499+00'
    );
INSERT INTO public.django_migrations
VALUES (
        237,
        'authentik_providers_oauth2',
        '0014_alter_refreshtoken_options_and_more',
        '2023-12-06 23:54:07.832446+00'
    );
INSERT INTO public.django_migrations
VALUES (
        238,
        'authentik_providers_oauth2',
        '0015_accesstoken_auth_time_authorizationcode_auth_time_and_more',
        '2023-12-06 23:54:07.886512+00'
    );
INSERT INTO public.django_migrations
VALUES (
        239,
        'authentik_providers_oauth2',
        '0016_alter_refreshtoken_token',
        '2023-12-06 23:54:07.913226+00'
    );
INSERT INTO public.django_migrations
VALUES (
        240,
        'authentik_providers_proxy',
        '0001_initial',
        '2023-12-06 23:54:08.00511+00'
    );
INSERT INTO public.django_migrations
VALUES (
        241,
        'authentik_providers_proxy',
        '0002_proxyprovider_cookie_secret',
        '2023-12-06 23:54:08.008336+00'
    );
INSERT INTO public.django_migrations
VALUES (
        242,
        'authentik_providers_proxy',
        '0003_proxyprovider_certificate',
        '2023-12-06 23:54:08.011547+00'
    );
INSERT INTO public.django_migrations
VALUES (
        243,
        'authentik_providers_proxy',
        '0004_auto_20200913_1947',
        '2023-12-06 23:54:08.014699+00'
    );
INSERT INTO public.django_migrations
VALUES (
        244,
        'authentik_providers_proxy',
        '0005_auto_20200914_1536',
        '2023-12-06 23:54:08.017694+00'
    );
INSERT INTO public.django_migrations
VALUES (
        245,
        'authentik_providers_proxy',
        '0006_proxyprovider_skip_path_regex',
        '2023-12-06 23:54:08.020799+00'
    );
INSERT INTO public.django_migrations
VALUES (
        246,
        'authentik_providers_proxy',
        '0007_auto_20200923_1017',
        '2023-12-06 23:54:08.023818+00'
    );
INSERT INTO public.django_migrations
VALUES (
        247,
        'authentik_providers_proxy',
        '0008_auto_20200930_0810',
        '2023-12-06 23:54:08.026754+00'
    );
INSERT INTO public.django_migrations
VALUES (
        248,
        'authentik_providers_proxy',
        '0009_auto_20201007_1721',
        '2023-12-06 23:54:08.029863+00'
    );
INSERT INTO public.django_migrations
VALUES (
        249,
        'authentik_providers_proxy',
        '0010_auto_20201214_0942',
        '2023-12-06 23:54:08.033373+00'
    );
INSERT INTO public.django_migrations
VALUES (
        250,
        'authentik_providers_proxy',
        '0011_proxyprovider_forward_auth_mode',
        '2023-12-06 23:54:08.036474+00'
    );
INSERT INTO public.django_migrations
VALUES (
        251,
        'authentik_providers_proxy',
        '0012_proxyprovider_cookie_domain',
        '2023-12-06 23:54:08.039579+00'
    );
INSERT INTO public.django_migrations
VALUES (
        252,
        'authentik_providers_proxy',
        '0013_mode',
        '2023-12-06 23:54:08.042578+00'
    );
INSERT INTO public.django_migrations
VALUES (
        253,
        'authentik_providers_proxy',
        '0014_proxy_v2',
        '2023-12-06 23:54:08.045534+00'
    );
INSERT INTO public.django_migrations
VALUES (
        254,
        'authentik_providers_proxy',
        '0015_proxyprovider_receive_header_auth',
        '2023-12-06 23:54:08.057887+00'
    );
INSERT INTO public.django_migrations
VALUES (
        255,
        'authentik_providers_radius',
        '0001_initial',
        '2023-12-06 23:54:08.249039+00'
    );
INSERT INTO public.django_migrations
VALUES (
        256,
        'authentik_providers_radius',
        '0002_radiusprovider_mfa_support',
        '2023-12-06 23:54:08.260501+00'
    );
INSERT INTO public.django_migrations
VALUES (
        257,
        'authentik_providers_saml',
        '0007_samlprovider_verification_kp',
        '2023-12-06 23:54:08.29468+00'
    );
INSERT INTO public.django_migrations
VALUES (
        258,
        'authentik_providers_saml',
        '0008_auto_20201112_1036',
        '2023-12-06 23:54:08.368373+00'
    );
INSERT INTO public.django_migrations
VALUES (
        259,
        'authentik_providers_saml',
        '0009_auto_20201112_2016',
        '2023-12-06 23:54:08.389037+00'
    );
INSERT INTO public.django_migrations
VALUES (
        260,
        'authentik_providers_saml',
        '0010_auto_20201230_2112',
        '2023-12-06 23:54:08.400318+00'
    );
INSERT INTO public.django_migrations
VALUES (
        261,
        'authentik_providers_saml',
        '0011_samlprovider_name_id_mapping',
        '2023-12-06 23:54:08.432804+00'
    );
INSERT INTO public.django_migrations
VALUES (
        262,
        'authentik_providers_saml',
        '0012_managed',
        '2023-12-06 23:54:08.460058+00'
    );
INSERT INTO public.django_migrations
VALUES (
        263,
        'authentik_providers_saml',
        '0013_samlprovider_default_relay_state',
        '2023-12-06 23:54:08.473259+00'
    );
INSERT INTO public.django_migrations
VALUES (
        264,
        'authentik_rbac',
        '0002_systempermission',
        '2023-12-06 23:54:08.477954+00'
    );
INSERT INTO public.django_migrations
VALUES (
        265,
        'authentik_sources_ldap',
        '0001_initial',
        '2023-12-06 23:54:08.873398+00'
    );
INSERT INTO public.django_migrations
VALUES (
        266,
        'authentik_sources_ldap',
        '0002_ldapsource_sync_users',
        '2023-12-06 23:54:08.876919+00'
    );
INSERT INTO public.django_migrations
VALUES (
        267,
        'authentik_sources_ldap',
        '0003_default_ldap_property_mappings',
        '2023-12-06 23:54:08.880367+00'
    );
INSERT INTO public.django_migrations
VALUES (
        268,
        'authentik_sources_ldap',
        '0004_auto_20200524_1146',
        '2023-12-06 23:54:08.883622+00'
    );
INSERT INTO public.django_migrations
VALUES (
        269,
        'authentik_sources_ldap',
        '0005_auto_20200913_1947',
        '2023-12-06 23:54:08.887058+00'
    );
INSERT INTO public.django_migrations
VALUES (
        270,
        'authentik_sources_ldap',
        '0006_auto_20200915_1919',
        '2023-12-06 23:54:08.890404+00'
    );
INSERT INTO public.django_migrations
VALUES (
        271,
        'authentik_sources_ldap',
        '0007_ldapsource_sync_users_password',
        '2023-12-06 23:54:08.893766+00'
    );
INSERT INTO public.django_migrations
VALUES (
        272,
        'authentik_sources_ldap',
        '0008_managed',
        '2023-12-06 23:54:08.897127+00'
    );
INSERT INTO public.django_migrations
VALUES (
        273,
        'authentik_sources_ldap',
        '0009_auto_20210204_1834',
        '2023-12-06 23:54:08.90063+00'
    );
INSERT INTO public.django_migrations
VALUES (
        274,
        'authentik_sources_ldap',
        '0010_auto_20210205_1027',
        '2023-12-06 23:54:08.904184+00'
    );
INSERT INTO public.django_migrations
VALUES (
        275,
        'authentik_sources_ldap',
        '0011_ldapsource_property_mappings_group',
        '2023-12-06 23:54:08.907425+00'
    );
INSERT INTO public.django_migrations
VALUES (
        276,
        'authentik_sources_ldap',
        '0012_auto_20210812_1703',
        '2023-12-06 23:54:08.910708+00'
    );
INSERT INTO public.django_migrations
VALUES (
        277,
        'authentik_sources_ldap',
        '0002_auto_20211203_0900',
        '2023-12-06 23:54:08.96071+00'
    );
INSERT INTO public.django_migrations
VALUES (
        278,
        'authentik_sources_ldap',
        '0003_ldapsource_client_certificate_ldapsource_sni_and_more',
        '2023-12-06 23:54:09.033075+00'
    );
INSERT INTO public.django_migrations
VALUES (
        279,
        'authentik_sources_plex',
        '0001_initial',
        '2023-12-06 23:54:09.103432+00'
    );
INSERT INTO public.django_migrations
VALUES (
        280,
        'authentik_sources_plex',
        '0002_auto_20210505_1717',
        '2023-12-06 23:54:09.128982+00'
    );
INSERT INTO public.django_migrations
VALUES (
        281,
        'authentik_sources_plex',
        '0003_alter_plexsource_plex_token',
        '2023-12-06 23:54:09.139504+00'
    );
INSERT INTO public.django_migrations
VALUES (
        282,
        'authentik_sources_saml',
        '0001_initial',
        '2023-12-06 23:54:09.216462+00'
    );
INSERT INTO public.django_migrations
VALUES (
        283,
        'authentik_sources_saml',
        '0002_auto_20200523_2329',
        '2023-12-06 23:54:09.219946+00'
    );
INSERT INTO public.django_migrations
VALUES (
        284,
        'authentik_sources_saml',
        '0003_auto_20200624_1957',
        '2023-12-06 23:54:09.223159+00'
    );
INSERT INTO public.django_migrations
VALUES (
        285,
        'authentik_sources_saml',
        '0004_auto_20200708_1207',
        '2023-12-06 23:54:09.226343+00'
    );
INSERT INTO public.django_migrations
VALUES (
        286,
        'authentik_sources_saml',
        '0005_samlsource_name_id_policy',
        '2023-12-06 23:54:09.229622+00'
    );
INSERT INTO public.django_migrations
VALUES (
        287,
        'authentik_sources_saml',
        '0006_samlsource_allow_idp_initiated',
        '2023-12-06 23:54:09.232742+00'
    );
INSERT INTO public.django_migrations
VALUES (
        288,
        'authentik_sources_saml',
        '0007_auto_20201112_1055',
        '2023-12-06 23:54:09.235849+00'
    );
INSERT INTO public.django_migrations
VALUES (
        289,
        'authentik_sources_saml',
        '0008_auto_20201112_2016',
        '2023-12-06 23:54:09.238955+00'
    );
INSERT INTO public.django_migrations
VALUES (
        290,
        'authentik_sources_saml',
        '0009_auto_20210301_0949',
        '2023-12-06 23:54:09.24211+00'
    );
INSERT INTO public.django_migrations
VALUES (
        291,
        'authentik_sources_saml',
        '0010_samlsource_pre_authentication_flow',
        '2023-12-06 23:54:09.430366+00'
    );
INSERT INTO public.django_migrations
VALUES (
        292,
        'authentik_sources_saml',
        '0011_auto_20210324_0736',
        '2023-12-06 23:54:09.461037+00'
    );
INSERT INTO public.django_migrations
VALUES (
        293,
        'authentik_sources_saml',
        '0012_usersamlsourceconnection',
        '2023-12-06 23:54:09.501372+00'
    );
INSERT INTO public.django_migrations
VALUES (
        294,
        'authentik_sources_saml',
        '0013_samlsource_verification_kp_and_more',
        '2023-12-06 23:54:09.584199+00'
    );
INSERT INTO public.django_migrations
VALUES (
        295,
        'authentik_stages_authenticator_duo',
        '0001_initial',
        '2023-12-06 23:54:09.665178+00'
    );
INSERT INTO public.django_migrations
VALUES (
        296,
        'authentik_stages_authenticator_duo',
        '0002_default_setup_flow',
        '2023-12-06 23:54:09.668612+00'
    );
INSERT INTO public.django_migrations
VALUES (
        297,
        'authentik_stages_authenticator_duo',
        '0003_duodevice_last_t',
        '2023-12-06 23:54:09.685457+00'
    );
INSERT INTO public.django_migrations
VALUES (
        298,
        'authentik_stages_authenticator_duo',
        '0004_authenticatorduostage_admin_integration_key_and_more',
        '2023-12-06 23:54:09.704773+00'
    );
INSERT INTO public.django_migrations
VALUES (
        299,
        'authentik_stages_authenticator_duo',
        '0005_authenticatorduostage_friendly_name',
        '2023-12-06 23:54:09.715507+00'
    );
INSERT INTO public.django_migrations
VALUES (
        300,
        'authentik_stages_authenticator_sms',
        '0001_initial',
        '2023-12-06 23:54:09.806939+00'
    );
INSERT INTO public.django_migrations
VALUES (
        301,
        'authentik_stages_authenticator_sms',
        '0002_authenticatorsmsstage_from_number',
        '2023-12-06 23:54:09.810699+00'
    );
INSERT INTO public.django_migrations
VALUES (
        302,
        'authentik_stages_authenticator_sms',
        '0003_auto_20211014_0813',
        '2023-12-06 23:54:09.814156+00'
    );
INSERT INTO public.django_migrations
VALUES (
        303,
        'authentik_stages_authenticator_sms',
        '0004_auto_20211014_0936',
        '2023-12-06 23:54:09.817721+00'
    );
INSERT INTO public.django_migrations
VALUES (
        304,
        'authentik_stages_authenticator_sms',
        '0002_alter_authenticatorsmsstage_from_number',
        '2023-12-06 23:54:09.830604+00'
    );
INSERT INTO public.django_migrations
VALUES (
        305,
        'authentik_stages_authenticator_sms',
        '0003_smsdevice_last_used_on',
        '2023-12-06 23:54:09.846472+00'
    );
INSERT INTO public.django_migrations
VALUES (
        306,
        'authentik_stages_authenticator_sms',
        '0004_authenticatorsmsstage_verify_only_and_more',
        '2023-12-06 23:54:09.874965+00'
    );
INSERT INTO public.django_migrations
VALUES (
        307,
        'authentik_stages_authenticator_sms',
        '0005_authenticatorsmsstage_mapping',
        '2023-12-06 23:54:10.08908+00'
    );
INSERT INTO public.django_migrations
VALUES (
        308,
        'authentik_stages_authenticator_sms',
        '0006_authenticatorsmsstage_friendly_name',
        '2023-12-06 23:54:10.104408+00'
    );
INSERT INTO public.django_migrations
VALUES (
        309,
        'authentik_stages_authenticator_static',
        '0001_initial',
        '2023-12-06 23:54:10.145296+00'
    );
INSERT INTO public.django_migrations
VALUES (
        310,
        'authentik_stages_authenticator_static',
        '0002_otpstaticstage_configure_flow',
        '2023-12-06 23:54:10.185065+00'
    );
INSERT INTO public.django_migrations
VALUES (
        311,
        'authentik_stages_authenticator_static',
        '0003_default_setup_flow',
        '2023-12-06 23:54:10.189561+00'
    );
INSERT INTO public.django_migrations
VALUES (
        312,
        'authentik_stages_authenticator_static',
        '0004_auto_20210216_0838',
        '2023-12-06 23:54:10.244091+00'
    );
INSERT INTO public.django_migrations
VALUES (
        313,
        'authentik_stages_authenticator_static',
        '0005_default_setup_flow',
        '2023-12-06 23:54:10.248526+00'
    );
INSERT INTO public.django_migrations
VALUES (
        314,
        'authentik_stages_authenticator_static',
        '0006_authenticatorstaticstage_friendly_name',
        '2023-12-06 23:54:10.264828+00'
    );
INSERT INTO public.django_migrations
VALUES (
        315,
        'authentik_stages_authenticator_static',
        '0007_authenticatorstaticstage_token_length_and_more',
        '2023-12-06 23:54:10.287368+00'
    );
INSERT INTO public.django_migrations
VALUES (
        316,
        'authentik_stages_authenticator_static',
        '0008_initial',
        '2023-12-06 23:54:10.375108+00'
    );
INSERT INTO public.django_migrations
VALUES (
        317,
        'authentik_stages_authenticator_static',
        '0009_throttling',
        '2023-12-06 23:54:10.424012+00'
    );
INSERT INTO public.django_migrations
VALUES (
        318,
        'authentik_stages_authenticator_totp',
        '0001_initial',
        '2023-12-06 23:54:10.463629+00'
    );
INSERT INTO public.django_migrations
VALUES (
        319,
        'authentik_stages_authenticator_totp',
        '0002_auto_20200701_1900',
        '2023-12-06 23:54:10.472623+00'
    );
INSERT INTO public.django_migrations
VALUES (
        320,
        'authentik_stages_authenticator_totp',
        '0003_otptimestage_configure_flow',
        '2023-12-06 23:54:10.512487+00'
    );
INSERT INTO public.django_migrations
VALUES (
        321,
        'authentik_stages_authenticator_totp',
        '0004_default_setup_flow',
        '2023-12-06 23:54:10.517001+00'
    );
INSERT INTO public.django_migrations
VALUES (
        322,
        'authentik_stages_authenticator_totp',
        '0005_auto_20210216_0838',
        '2023-12-06 23:54:10.567557+00'
    );
INSERT INTO public.django_migrations
VALUES (
        323,
        'authentik_stages_authenticator_totp',
        '0006_default_setup_flow',
        '2023-12-06 23:54:10.57231+00'
    );
INSERT INTO public.django_migrations
VALUES (
        324,
        'authentik_stages_authenticator_totp',
        '0007_authenticatortotpstage_friendly_name',
        '2023-12-06 23:54:10.58923+00'
    );
INSERT INTO public.django_migrations
VALUES (
        325,
        'authentik_stages_authenticator_totp',
        '0008_initial',
        '2023-12-06 23:54:10.817991+00'
    );
INSERT INTO public.django_migrations
VALUES (
        326,
        'authentik_stages_authenticator_totp',
        '0009_auto_20190420_0723',
        '2023-12-06 23:54:10.84878+00'
    );
INSERT INTO public.django_migrations
VALUES (
        327,
        'authentik_stages_authenticator_totp',
        '0010_alter_totpdevice_key',
        '2023-12-06 23:54:10.882519+00'
    );
INSERT INTO public.django_migrations
VALUES (
        328,
        'authentik_stages_authenticator_validate',
        '0001_initial',
        '2023-12-06 23:54:10.928489+00'
    );
INSERT INTO public.django_migrations
VALUES (
        329,
        'authentik_stages_authenticator_validate',
        '0002_auto_20210216_0838',
        '2023-12-06 23:54:10.971208+00'
    );
INSERT INTO public.django_migrations
VALUES (
        330,
        'authentik_stages_authenticator_validate',
        '0003_authenticatorvalidatestage_device_classes',
        '2023-12-06 23:54:10.981137+00'
    );
INSERT INTO public.django_migrations
VALUES (
        331,
        'authentik_stages_authenticator_validate',
        '0004_auto_20210301_0949',
        '2023-12-06 23:54:10.991041+00'
    );
INSERT INTO public.django_migrations
VALUES (
        332,
        'authentik_stages_authenticator_validate',
        '0005_authenticatorvalidatestage_configuration_stage',
        '2023-12-06 23:54:11.030478+00'
    );
INSERT INTO public.django_migrations
VALUES (
        333,
        'authentik_stages_authenticator_validate',
        '0006_auto_20210301_1757',
        '2023-12-06 23:54:11.041438+00'
    );
INSERT INTO public.django_migrations
VALUES (
        334,
        'authentik_stages_authenticator_validate',
        '0007_auto_20210403_0927',
        '2023-12-06 23:54:11.05321+00'
    );
INSERT INTO public.django_migrations
VALUES (
        335,
        'authentik_stages_authenticator_validate',
        '0008_alter_authenticatorvalidatestage_device_classes',
        '2023-12-06 23:54:11.063992+00'
    );
INSERT INTO public.django_migrations
VALUES (
        336,
        'authentik_stages_authenticator_validate',
        '0009_default_stage',
        '2023-12-06 23:54:11.068935+00'
    );
INSERT INTO public.django_migrations
VALUES (
        337,
        'authentik_stages_authenticator_validate',
        '0010_remove_authenticatorvalidatestage_configuration_stage_and_more',
        '2023-12-06 23:54:11.187584+00'
    );
INSERT INTO public.django_migrations
VALUES (
        338,
        'authentik_stages_authenticator_validate',
        '0011_authenticatorvalidatestage_last_auth_threshold',
        '2023-12-06 23:54:11.199355+00'
    );
INSERT INTO public.django_migrations
VALUES (
        339,
        'authentik_stages_authenticator_validate',
        '0012_authenticatorvalidatestage_webauthn_user_verification',
        '2023-12-06 23:54:11.210835+00'
    );
INSERT INTO public.django_migrations
VALUES (
        340,
        'authentik_stages_authenticator_webauthn',
        '0001_initial',
        '2023-12-06 23:54:11.461654+00'
    );
INSERT INTO public.django_migrations
VALUES (
        341,
        'authentik_stages_authenticator_webauthn',
        '0002_default_setup_flow',
        '2023-12-06 23:54:11.465448+00'
    );
INSERT INTO public.django_migrations
VALUES (
        342,
        'authentik_stages_authenticator_webauthn',
        '0003_webauthndevice_confirmed',
        '2023-12-06 23:54:11.481528+00'
    );
INSERT INTO public.django_migrations
VALUES (
        343,
        'authentik_stages_authenticator_webauthn',
        '0004_auto_20210304_1850',
        '2023-12-06 23:54:11.495233+00'
    );
INSERT INTO public.django_migrations
VALUES (
        344,
        'authentik_stages_authenticator_webauthn',
        '0005_authenticatewebauthnstage_user_verification',
        '2023-12-06 23:54:11.511961+00'
    );
INSERT INTO public.django_migrations
VALUES (
        345,
        'authentik_stages_authenticator_webauthn',
        '0006_authenticatewebauthnstage_authenticator_attachment_and_more',
        '2023-12-06 23:54:11.534034+00'
    );
INSERT INTO public.django_migrations
VALUES (
        346,
        'authentik_stages_authenticator_webauthn',
        '0007_rename_last_used_on_webauthndevice_last_t',
        '2023-12-06 23:54:11.549298+00'
    );
INSERT INTO public.django_migrations
VALUES (
        347,
        'authentik_stages_authenticator_webauthn',
        '0008_alter_webauthndevice_credential_id',
        '2023-12-06 23:54:11.568376+00'
    );
INSERT INTO public.django_migrations
VALUES (
        348,
        'authentik_stages_authenticator_webauthn',
        '0009_authenticatewebauthnstage_friendly_name',
        '2023-12-06 23:54:11.581836+00'
    );
INSERT INTO public.django_migrations
VALUES (
        349,
        'authentik_stages_captcha',
        '0001_initial',
        '2023-12-06 23:54:11.623826+00'
    );
INSERT INTO public.django_migrations
VALUES (
        350,
        'authentik_stages_captcha',
        '0002_captchastage_api_url_captchastage_js_url_and_more',
        '2023-12-06 23:54:11.650709+00'
    );
INSERT INTO public.django_migrations
VALUES (
        351,
        'authentik_stages_consent',
        '0001_initial',
        '2023-12-06 23:54:11.688432+00'
    );
INSERT INTO public.django_migrations
VALUES (
        352,
        'authentik_stages_consent',
        '0002_auto_20200720_0941',
        '2023-12-06 23:54:11.756731+00'
    );
INSERT INTO public.django_migrations
VALUES (
        353,
        'authentik_stages_consent',
        '0003_auto_20200924_1403',
        '2023-12-06 23:54:11.790143+00'
    );
INSERT INTO public.django_migrations
VALUES (
        354,
        'authentik_stages_consent',
        '0004_alter_userconsent_unique_together_and_more',
        '2023-12-06 23:54:11.839948+00'
    );
INSERT INTO public.django_migrations
VALUES (
        355,
        'authentik_stages_consent',
        '0005_alter_consentstage_mode',
        '2023-12-06 23:54:11.849816+00'
    );
INSERT INTO public.django_migrations
VALUES (
        356,
        'authentik_stages_deny',
        '0001_initial',
        '2023-12-06 23:54:11.889455+00'
    );
INSERT INTO public.django_migrations
VALUES (
        357,
        'authentik_stages_deny',
        '0002_denystage_deny_message',
        '2023-12-06 23:54:11.903923+00'
    );
INSERT INTO public.django_migrations
VALUES (
        358,
        'authentik_stages_dummy',
        '0001_initial',
        '2023-12-06 23:54:12.107753+00'
    );
INSERT INTO public.django_migrations
VALUES (
        359,
        'authentik_stages_dummy',
        '0002_dummystage_throw_error',
        '2023-12-06 23:54:12.119827+00'
    );
INSERT INTO public.django_migrations
VALUES (
        360,
        'authentik_stages_email',
        '0001_initial',
        '2023-12-06 23:54:12.165183+00'
    );
INSERT INTO public.django_migrations
VALUES (
        361,
        'authentik_stages_email',
        '0002_emailstage_use_global_settings',
        '2023-12-06 23:54:12.205199+00'
    );
INSERT INTO public.django_migrations
VALUES (
        362,
        'authentik_stages_email',
        '0003_auto_20210404_1054',
        '2023-12-06 23:54:12.215714+00'
    );
INSERT INTO public.django_migrations
VALUES (
        363,
        'authentik_stages_email',
        '0004_emailstage_activate_user_on_success',
        '2023-12-06 23:54:12.227498+00'
    );
INSERT INTO public.django_migrations
VALUES (
        364,
        'authentik_stages_password',
        '0001_initial',
        '2023-12-06 23:54:12.271053+00'
    );
INSERT INTO public.django_migrations
VALUES (
        365,
        'authentik_stages_password',
        '0002_passwordstage_change_flow',
        '2023-12-06 23:54:12.310159+00'
    );
INSERT INTO public.django_migrations
VALUES (
        366,
        'authentik_stages_password',
        '0003_passwordstage_failed_attempts_before_cancel',
        '2023-12-06 23:54:12.325428+00'
    );
INSERT INTO public.django_migrations
VALUES (
        367,
        'authentik_stages_password',
        '0004_auto_20200925_1057',
        '2023-12-06 23:54:12.373714+00'
    );
INSERT INTO public.django_migrations
VALUES (
        368,
        'authentik_stages_password',
        '0005_auto_20210402_2221',
        '2023-12-06 23:54:12.387295+00'
    );
INSERT INTO public.django_migrations
VALUES (
        369,
        'authentik_stages_identification',
        '0001_initial',
        '2023-12-06 23:54:12.431092+00'
    );
INSERT INTO public.django_migrations
VALUES (
        370,
        'authentik_stages_identification',
        '0002_auto_20200530_2204',
        '2023-12-06 23:54:12.896386+00'
    );
INSERT INTO public.django_migrations
VALUES (
        371,
        'authentik_stages_identification',
        '0003_auto_20200615_1641',
        '2023-12-06 23:54:12.900055+00'
    );
INSERT INTO public.django_migrations
VALUES (
        372,
        'authentik_stages_identification',
        '0004_identificationstage_case_insensitive_matching',
        '2023-12-06 23:54:12.903488+00'
    );
INSERT INTO public.django_migrations
VALUES (
        373,
        'authentik_stages_identification',
        '0005_auto_20201003_1734',
        '2023-12-06 23:54:12.907074+00'
    );
INSERT INTO public.django_migrations
VALUES (
        374,
        'authentik_stages_identification',
        '0006_identificationstage_show_matched_user',
        '2023-12-06 23:54:12.910539+00'
    );
INSERT INTO public.django_migrations
VALUES (
        375,
        'authentik_stages_identification',
        '0007_remove_identificationstage_template',
        '2023-12-06 23:54:12.914015+00'
    );
INSERT INTO public.django_migrations
VALUES (
        376,
        'authentik_stages_identification',
        '0008_alter_identificationstage_user_fields',
        '2023-12-06 23:54:12.917695+00'
    );
INSERT INTO public.django_migrations
VALUES (
        377,
        'authentik_stages_identification',
        '0009_identificationstage_sources',
        '2023-12-06 23:54:12.921147+00'
    );
INSERT INTO public.django_migrations
VALUES (
        378,
        'authentik_stages_identification',
        '0010_identificationstage_password_stage',
        '2023-12-06 23:54:12.924647+00'
    );
INSERT INTO public.django_migrations
VALUES (
        379,
        'authentik_stages_identification',
        '0011_alter_identificationstage_user_fields',
        '2023-12-06 23:54:12.929851+00'
    );
INSERT INTO public.django_migrations
VALUES (
        380,
        'authentik_stages_identification',
        '0012_identificationstage_show_source_labels',
        '2023-12-06 23:54:12.933509+00'
    );
INSERT INTO public.django_migrations
VALUES (
        381,
        'authentik_stages_identification',
        '0013_identificationstage_passwordless_flow',
        '2023-12-06 23:54:12.93792+00'
    );
INSERT INTO public.django_migrations
VALUES (
        382,
        'authentik_stages_invitation',
        '0001_initial',
        '2023-12-06 23:54:13.230681+00'
    );
INSERT INTO public.django_migrations
VALUES (
        383,
        'authentik_stages_invitation',
        '0002_auto_20201225_2143',
        '2023-12-06 23:54:13.234445+00'
    );
INSERT INTO public.django_migrations
VALUES (
        384,
        'authentik_stages_invitation',
        '0003_auto_20201227_1210',
        '2023-12-06 23:54:13.237927+00'
    );
INSERT INTO public.django_migrations
VALUES (
        385,
        'authentik_stages_invitation',
        '0004_invitation_single_use',
        '2023-12-06 23:54:13.241393+00'
    );
INSERT INTO public.django_migrations
VALUES (
        386,
        'authentik_stages_invitation',
        '0005_auto_20210901_1211',
        '2023-12-06 23:54:13.244846+00'
    );
INSERT INTO public.django_migrations
VALUES (
        387,
        'authentik_stages_invitation',
        '0006_invitation_name',
        '2023-12-06 23:54:13.248248+00'
    );
INSERT INTO public.django_migrations
VALUES (
        388,
        'authentik_stages_invitation',
        '0007_invitation_flow',
        '2023-12-06 23:54:13.293326+00'
    );
INSERT INTO public.django_migrations
VALUES (
        389,
        'authentik_stages_password',
        '0006_passwordchange_rename',
        '2023-12-06 23:54:13.297641+00'
    );
INSERT INTO public.django_migrations
VALUES (
        390,
        'authentik_stages_password',
        '0007_app_password',
        '2023-12-06 23:54:13.345808+00'
    );
INSERT INTO public.django_migrations
VALUES (
        391,
        'authentik_stages_password',
        '0008_replace_inbuilt',
        '2023-12-06 23:54:13.383341+00'
    );
INSERT INTO public.django_migrations
VALUES (
        392,
        'authentik_stages_prompt',
        '0001_initial',
        '2023-12-06 23:54:13.482625+00'
    );
INSERT INTO public.django_migrations
VALUES (
        393,
        'authentik_stages_prompt',
        '0002_auto_20200920_1859',
        '2023-12-06 23:54:13.521539+00'
    );
INSERT INTO public.django_migrations
VALUES (
        394,
        'authentik_stages_prompt',
        '0003_auto_20210222_1821',
        '2023-12-06 23:54:13.557737+00'
    );
INSERT INTO public.django_migrations
VALUES (
        395,
        'authentik_stages_prompt',
        '0004_prompt_sub_text',
        '2023-12-06 23:54:13.565912+00'
    );
INSERT INTO public.django_migrations
VALUES (
        396,
        'authentik_stages_prompt',
        '0005_alter_prompt_field_key',
        '2023-12-06 23:54:13.606695+00'
    );
INSERT INTO public.django_migrations
VALUES (
        397,
        'authentik_stages_prompt',
        '0006_alter_prompt_type',
        '2023-12-06 23:54:13.643341+00'
    );
INSERT INTO public.django_migrations
VALUES (
        398,
        'authentik_stages_prompt',
        '0007_prompt_placeholder_expression',
        '2023-12-06 23:54:13.844244+00'
    );
INSERT INTO public.django_migrations
VALUES (
        399,
        'authentik_stages_prompt',
        '0008_alter_prompt_type',
        '2023-12-06 23:54:13.880462+00'
    );
INSERT INTO public.django_migrations
VALUES (
        400,
        'authentik_stages_prompt',
        '0009_prompt_name',
        '2023-12-06 23:54:13.9589+00'
    );
INSERT INTO public.django_migrations
VALUES (
        401,
        'authentik_stages_prompt',
        '0010_alter_prompt_placeholder_alter_prompt_type',
        '2023-12-06 23:54:14.026778+00'
    );
INSERT INTO public.django_migrations
VALUES (
        402,
        'authentik_stages_prompt',
        '0011_prompt_initial_value_prompt_initial_value_expression_and_more',
        '2023-12-06 23:54:14.102917+00'
    );
INSERT INTO public.django_migrations
VALUES (
        403,
        'authentik_stages_user_delete',
        '0001_initial',
        '2023-12-06 23:54:14.154133+00'
    );
INSERT INTO public.django_migrations
VALUES (
        404,
        'authentik_stages_user_login',
        '0001_initial',
        '2023-12-06 23:54:14.345669+00'
    );
INSERT INTO public.django_migrations
VALUES (
        405,
        'authentik_stages_user_login',
        '0002_userloginstage_session_duration',
        '2023-12-06 23:54:14.358263+00'
    );
INSERT INTO public.django_migrations
VALUES (
        406,
        'authentik_stages_user_login',
        '0003_session_duration_delta',
        '2023-12-06 23:54:14.415636+00'
    );
INSERT INTO public.django_migrations
VALUES (
        407,
        'authentik_stages_user_login',
        '0004_userloginstage_terminate_other_sessions',
        '2023-12-06 23:54:14.430029+00'
    );
INSERT INTO public.django_migrations
VALUES (
        408,
        'authentik_stages_user_login',
        '0005_userloginstage_remember_me_offset',
        '2023-12-06 23:54:14.444016+00'
    );
INSERT INTO public.django_migrations
VALUES (
        409,
        'authentik_stages_user_logout',
        '0001_initial',
        '2023-12-06 23:54:14.486232+00'
    );
INSERT INTO public.django_migrations
VALUES (
        410,
        'authentik_stages_user_write',
        '0001_initial',
        '2023-12-06 23:54:14.530335+00'
    );
INSERT INTO public.django_migrations
VALUES (
        411,
        'authentik_stages_user_write',
        '0002_auto_20200918_1653',
        '2023-12-06 23:54:14.566415+00'
    );
INSERT INTO public.django_migrations
VALUES (
        412,
        'authentik_stages_user_write',
        '0003_userwritestage_create_users_as_inactive',
        '2023-12-06 23:54:14.580325+00'
    );
INSERT INTO public.django_migrations
VALUES (
        413,
        'authentik_stages_user_write',
        '0004_userwritestage_create_users_group',
        '2023-12-06 23:54:14.625909+00'
    );
INSERT INTO public.django_migrations
VALUES (
        414,
        'authentik_stages_user_write',
        '0005_userwritestage_user_path_template',
        '2023-12-06 23:54:14.650844+00'
    );
INSERT INTO public.django_migrations
VALUES (
        415,
        'authentik_stages_user_write',
        '0006_userwritestage_can_create_users',
        '2023-12-06 23:54:14.66973+00'
    );
INSERT INTO public.django_migrations
VALUES (
        416,
        'authentik_stages_user_write',
        '0007_remove_userwritestage_can_create_users_and_more',
        '2023-12-06 23:54:14.870699+00'
    );
INSERT INTO public.django_migrations
VALUES (
        417,
        'authentik_stages_user_write',
        '0008_userwritestage_user_type',
        '2023-12-06 23:54:14.889045+00'
    );
INSERT INTO public.django_migrations
VALUES (
        418,
        'authentik_tenants',
        '0001_initial',
        '2023-12-06 23:54:15.008015+00'
    );
INSERT INTO public.django_migrations
VALUES (
        419,
        'authentik_tenants',
        '0002_default',
        '2023-12-06 23:54:15.011672+00'
    );
INSERT INTO public.django_migrations
VALUES (
        420,
        'authentik_tenants',
        '0003_tenant_branding_favicon',
        '2023-12-06 23:54:15.015335+00'
    );
INSERT INTO public.django_migrations
VALUES (
        421,
        'authentik_tenants',
        '0004_tenant_event_retention',
        '2023-12-06 23:54:15.018889+00'
    );
INSERT INTO public.django_migrations
VALUES (
        422,
        'authentik_tenants',
        '0005_tenant_web_certificate',
        '2023-12-06 23:54:15.022902+00'
    );
INSERT INTO public.django_migrations
VALUES (
        423,
        'authentik_tenants',
        '0002_tenant_flow_user_settings',
        '2023-12-06 23:54:15.067122+00'
    );
INSERT INTO public.django_migrations
VALUES (
        424,
        'authentik_tenants',
        '0003_tenant_attributes',
        '2023-12-06 23:54:15.085086+00'
    );
INSERT INTO public.django_migrations
VALUES (
        425,
        'authentik_tenants',
        '0004_tenant_flow_device_code',
        '2023-12-06 23:54:15.128216+00'
    );
INSERT INTO public.django_migrations
VALUES (
        426,
        'guardian',
        '0001_initial',
        '2023-12-06 23:54:15.399443+00'
    );
INSERT INTO public.django_migrations
VALUES (
        427,
        'guardian',
        '0002_generic_permissions_index',
        '2023-12-06 23:54:15.425893+00'
    );
INSERT INTO public.django_migrations
VALUES (
        428,
        'sessions',
        '0001_initial',
        '2023-12-06 23:54:15.449416+00'
    );
INSERT INTO public.django_migrations
VALUES (
        429,
        'authentik_events',
        '0001_squashed_0019_alter_notificationtransport_webhook_url',
        '2023-12-06 23:54:15.45981+00'
    );
INSERT INTO public.django_migrations
VALUES (
        430,
        'authentik_flows',
        '0001_squashed_0007_auto_20200703_2059',
        '2023-12-06 23:54:15.463773+00'
    );
INSERT INTO public.django_migrations
VALUES (
        431,
        'authentik_flows',
        '0012_auto_20200908_1542_squashed_0017_auto_20210329_1334',
        '2023-12-06 23:54:15.468+00'
    );
INSERT INTO public.django_migrations
VALUES (
        432,
        'authentik_flows',
        '0019_alter_flow_background_squashed_0024_alter_flow_compatibility_mode',
        '2023-12-06 23:54:15.472489+00'
    );
INSERT INTO public.django_migrations
VALUES (
        433,
        'authentik_outposts',
        '0001_squashed_0017_outpost_managed',
        '2023-12-06 23:54:15.477039+00'
    );
INSERT INTO public.django_migrations
VALUES (
        434,
        'authentik_policies_event_matcher',
        '0001_squashed_0018_alter_eventmatcherpolicy_action',
        '2023-12-06 23:54:15.480989+00'
    );
INSERT INTO public.django_migrations
VALUES (
        435,
        'authentik_providers_ldap',
        '0001_squashed_0005_ldapprovider_search_mode',
        '2023-12-06 23:54:15.484949+00'
    );
INSERT INTO public.django_migrations
VALUES (
        436,
        'authentik_providers_oauth2',
        '0007_auto_20201016_1107_squashed_0017_alter_oauth2provider_token_validity',
        '2023-12-06 23:54:15.489234+00'
    );
INSERT INTO public.django_migrations
VALUES (
        437,
        'authentik_providers_proxy',
        '0001_squashed_0014_proxy_v2',
        '2023-12-06 23:54:15.493638+00'
    );
INSERT INTO public.django_migrations
VALUES (
        438,
        'authentik_providers_saml',
        '0001_squashed_0005_remove_samlprovider_processor_path',
        '2023-12-06 23:54:15.498047+00'
    );
INSERT INTO public.django_migrations
VALUES (
        439,
        'authentik_providers_scim',
        '0001_squashed_0006_rename_parent_group_scimprovider_filter_group',
        '2023-12-06 23:54:15.502406+00'
    );
INSERT INTO public.django_migrations
VALUES (
        440,
        'authentik_sources_ldap',
        '0001_squashed_0012_auto_20210812_1703',
        '2023-12-06 23:54:15.506656+00'
    );
INSERT INTO public.django_migrations
VALUES (
        441,
        'authentik_sources_saml',
        '0001_squashed_0009_auto_20210301_0949',
        '2023-12-06 23:54:15.511098+00'
    );
INSERT INTO public.django_migrations
VALUES (
        442,
        'authentik_stages_authenticator_sms',
        '0001_squashed_0004_auto_20211014_0936',
        '2023-12-06 23:54:15.5154+00'
    );
INSERT INTO public.django_migrations
VALUES (
        443,
        'authentik_stages_identification',
        '0002_auto_20200530_2204_squashed_0013_identificationstage_passwordless_flow',
        '2023-12-06 23:54:15.519476+00'
    );
INSERT INTO public.django_migrations
VALUES (
        444,
        'authentik_stages_invitation',
        '0001_squashed_0006_invitation_name',
        '2023-12-06 23:54:15.523552+00'
    );
INSERT INTO public.django_migrations
VALUES (
        445,
        'authentik_tenants',
        '0001_squashed_0005_tenant_web_certificate',
        '2023-12-06 23:54:15.527573+00'
    );
INSERT INTO public.django_migrations
VALUES (
        446,
        'authentik_core',
        '0002_auto_20200523_1133_squashed_0011_provider_name_temp',
        '2023-12-06 23:54:15.531451+00'
    );
INSERT INTO public.django_migrations
VALUES (
        447,
        'authentik_core',
        '0012_auto_20201003_1737_squashed_0016_auto_20201202_2234',
        '2023-12-06 23:54:15.535232+00'
    );
INSERT INTO public.django_migrations
VALUES (
        448,
        'authentik_core',
        '0018_auto_20210330_1345_squashed_0028_alter_token_intent',
        '2023-12-06 23:54:15.539361+00'
    );
--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: guardian_groupobjectpermission; Type: TABLE DATA; Schema: public; Owner: authentik
--

--
-- Data for Name: guardian_userobjectpermission; Type: TABLE DATA; Schema: public; Owner: authentik
--

INSERT INTO public.guardian_userobjectpermission
VALUES (
        5,
        'd6b1a550-8b2d-4828-8ce8-bdbda9d6038e',
        15,
        64,
        6
    );
--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);
--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);
--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 397, true);
--
-- Name: authentik_core_group_roles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_core_group_roles_id_seq',
        1,
        false
    );
--
-- Name: authentik_core_provider_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval('public.authentik_core_provider_id_seq', 1, true);
--
-- Name: authentik_core_provider_property_mappings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_core_provider_property_mappings_id_seq',
        3,
        true
    );
--
-- Name: authentik_core_source_property_mappings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_core_source_property_mappings_id_seq',
        1,
        false
    );
--
-- Name: authentik_core_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_core_user_groups_id_seq',
        1,
        false
    );
--
-- Name: authentik_core_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval('public.authentik_core_user_id_seq', 7, true);
--
-- Name: authentik_core_user_pb_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_core_user_pb_groups_id_seq',
        5,
        true
    );
--
-- Name: authentik_core_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_core_user_user_permissions_id_seq',
        5,
        true
    );
--
-- Name: authentik_core_usersourceconnection_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_core_usersourceconnection_id_seq',
        1,
        false
    );
--
-- Name: authentik_events_notificationrule_transports_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_events_notificationrule_transports_id_seq',
        12,
        true
    );
--
-- Name: authentik_outposts_outpost_providers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_outposts_outpost_providers_id_seq',
        1,
        false
    );
--
-- Name: authentik_providers_oauth2_accesstoken_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_providers_oauth2_accesstoken_id_seq',
        13,
        true
    );
--
-- Name: authentik_providers_oauth2_authorizationcode_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_providers_oauth2_authorizationcode_id_seq',
        20,
        true
    );
--
-- Name: authentik_providers_oauth2_devicetoken_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_providers_oauth2_devicetoken_id_seq',
        1,
        false
    );
--
-- Name: authentik_providers_oauth2_oauth2provider_jwks_sources_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_providers_oauth2_oauth2provider_jwks_sources_id_seq',
        1,
        false
    );
--
-- Name: authentik_providers_oauth2_refreshtoken_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_providers_oauth2_refreshtoken_id_seq',
        13,
        true
    );
--
-- Name: authentik_providers_scim_scimprovider_property_mappings__id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_providers_scim_scimprovider_property_mappings__id_seq',
        1,
        false
    );
--
-- Name: authentik_sources_ldap_ldapsource_property_mappings_grou_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_sources_ldap_ldapsource_property_mappings_grou_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_authenticator_duo_duodevice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_authenticator_duo_duodevice_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_authenticator_sms_smsdevice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_authenticator_sms_smsdevice_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_authenticator_static_staticdevice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_authenticator_static_staticdevice_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_authenticator_static_statictoken_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_authenticator_static_statictoken_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_authenticator_totp_totpdevice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_authenticator_totp_totpdevice_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_authenticator_validate_authenticatorval_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_authenticator_validate_authenticatorval_id_seq',
        1,
        true
    );
--
-- Name: authentik_stages_authenticator_webauthn_webauthndevice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_authenticator_webauthn_webauthndevice_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_consent_userconsent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_consent_userconsent_id_seq',
        1,
        false
    );
--
-- Name: authentik_stages_identification_identificationstage_sour_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_identification_identificationstage_sour_id_seq',
        1,
        true
    );
--
-- Name: authentik_stages_prompt_promptstage_fields_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_prompt_promptstage_fields_id_seq',
        56,
        true
    );
--
-- Name: authentik_stages_prompt_promptstage_validation_policies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.authentik_stages_prompt_promptstage_validation_policies_id_seq',
        4,
        true
    );
--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 96, true);
--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 448, true);
--
-- Name: guardian_groupobjectpermission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.guardian_groupobjectpermission_id_seq',
        1,
        false
    );
--
-- Name: guardian_userobjectpermission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: authentik
--

SELECT pg_catalog.setval(
        'public.guardian_userobjectpermission_id_seq',
        5,
        true
    );
--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_group
ADD CONSTRAINT auth_group_name_key UNIQUE (name);
--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_group_permissions
ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);
--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_group_permissions
ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);
--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_group
ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);
--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_permission
ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);
--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_permission
ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);
--
-- Name: authentik_blueprints_blueprintinstance authentik_blueprints_blueprintinstance_managed_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_blueprints_blueprintinstance
ADD CONSTRAINT authentik_blueprints_blueprintinstance_managed_key UNIQUE (managed);
--
-- Name: authentik_blueprints_blueprintinstance authentik_blueprints_blueprintinstance_name_404be626_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_blueprints_blueprintinstance
ADD CONSTRAINT authentik_blueprints_blueprintinstance_name_404be626_uniq UNIQUE (name);
--
-- Name: authentik_blueprints_blueprintinstance authentik_blueprints_blueprintinstance_name_path_982f03b6_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_blueprints_blueprintinstance
ADD CONSTRAINT authentik_blueprints_blueprintinstance_name_path_982f03b6_uniq UNIQUE (name, path);
--
-- Name: authentik_blueprints_blueprintinstance authentik_blueprints_blueprintinstance_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_blueprints_blueprintinstance
ADD CONSTRAINT authentik_blueprints_blueprintinstance_pkey PRIMARY KEY (instance_uuid);
--
-- Name: authentik_core_application authentik_core_application_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_application
ADD CONSTRAINT authentik_core_application_pkey PRIMARY KEY (policybindingmodel_ptr_id);
--
-- Name: authentik_core_application authentik_core_application_provider_id_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_application
ADD CONSTRAINT authentik_core_application_provider_id_key UNIQUE (provider_id);
--
-- Name: authentik_core_application authentik_core_application_slug_ab82d049_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_application
ADD CONSTRAINT authentik_core_application_slug_ab82d049_uniq UNIQUE (slug);
--
-- Name: authentik_core_authenticatedsession authentik_core_authenticatedsession_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_authenticatedsession
ADD CONSTRAINT authentik_core_authenticatedsession_pkey PRIMARY KEY (uuid);
--
-- Name: authentik_core_group authentik_core_group_name_parent_id_bb2177db_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_group
ADD CONSTRAINT authentik_core_group_name_parent_id_bb2177db_uniq UNIQUE (name, parent_id);
--
-- Name: authentik_core_group authentik_core_group_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_group
ADD CONSTRAINT authentik_core_group_pkey PRIMARY KEY (group_uuid);
--
-- Name: authentik_core_group_roles authentik_core_group_roles_group_id_role_id_f2df9be5_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_group_roles
ADD CONSTRAINT authentik_core_group_roles_group_id_role_id_f2df9be5_uniq UNIQUE (group_id, role_id);
--
-- Name: authentik_core_group_roles authentik_core_group_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_group_roles
ADD CONSTRAINT authentik_core_group_roles_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_propertymapping authentik_core_propertymapping_managed_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_propertymapping
ADD CONSTRAINT authentik_core_propertymapping_managed_key UNIQUE (managed);
--
-- Name: authentik_core_propertymapping authentik_core_propertymapping_name_a457d137_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_propertymapping
ADD CONSTRAINT authentik_core_propertymapping_name_a457d137_uniq UNIQUE (name);
--
-- Name: authentik_core_propertymapping authentik_core_propertymapping_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_propertymapping
ADD CONSTRAINT authentik_core_propertymapping_pkey PRIMARY KEY (pm_uuid);
--
-- Name: authentik_core_provider_property_mappings authentik_core_provider__provider_id_propertymapp_cf242fa9_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider_property_mappings
ADD CONSTRAINT authentik_core_provider__provider_id_propertymapp_cf242fa9_uniq UNIQUE (provider_id, propertymapping_id);
--
-- Name: authentik_core_provider authentik_core_provider_name_66fc4ef4_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider
ADD CONSTRAINT authentik_core_provider_name_66fc4ef4_uniq UNIQUE (name);
--
-- Name: authentik_core_provider authentik_core_provider_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider
ADD CONSTRAINT authentik_core_provider_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_provider_property_mappings authentik_core_provider_property_mappings_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider_property_mappings
ADD CONSTRAINT authentik_core_provider_property_mappings_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_source authentik_core_source_managed_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source
ADD CONSTRAINT authentik_core_source_managed_key UNIQUE (managed);
--
-- Name: authentik_core_source authentik_core_source_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source
ADD CONSTRAINT authentik_core_source_pkey PRIMARY KEY (policybindingmodel_ptr_id);
--
-- Name: authentik_core_source_property_mappings authentik_core_source_pr_source_id_propertymappin_f506919a_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source_property_mappings
ADD CONSTRAINT authentik_core_source_pr_source_id_propertymappin_f506919a_uniq UNIQUE (source_id, propertymapping_id);
--
-- Name: authentik_core_source_property_mappings authentik_core_source_property_mappings_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source_property_mappings
ADD CONSTRAINT authentik_core_source_property_mappings_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_source authentik_core_source_slug_e15c7212_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source
ADD CONSTRAINT authentik_core_source_slug_e15c7212_uniq UNIQUE (slug);
--
-- Name: authentik_core_token authentik_core_token_identifier_af152015_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_token
ADD CONSTRAINT authentik_core_token_identifier_af152015_uniq UNIQUE (identifier);
--
-- Name: authentik_core_token authentik_core_token_managed_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_token
ADD CONSTRAINT authentik_core_token_managed_key UNIQUE (managed);
--
-- Name: authentik_core_token authentik_core_token_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_token
ADD CONSTRAINT authentik_core_token_pkey PRIMARY KEY (token_uuid);
--
-- Name: authentik_core_user_groups authentik_core_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_groups
ADD CONSTRAINT authentik_core_user_groups_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_user_groups authentik_core_user_groups_user_id_group_id_fbcd9aac_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_groups
ADD CONSTRAINT authentik_core_user_groups_user_id_group_id_fbcd9aac_uniq UNIQUE (user_id, group_id);
--
-- Name: authentik_core_user_ak_groups authentik_core_user_pb_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_ak_groups
ADD CONSTRAINT authentik_core_user_pb_groups_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_user_ak_groups authentik_core_user_pb_groups_user_id_group_id_fa5d69c3_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_ak_groups
ADD CONSTRAINT authentik_core_user_pb_groups_user_id_group_id_fa5d69c3_uniq UNIQUE (user_id, group_id);
--
-- Name: authentik_core_user authentik_core_user_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user
ADD CONSTRAINT authentik_core_user_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_user_user_permissions authentik_core_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_user_permissions
ADD CONSTRAINT authentik_core_user_user_permissions_pkey PRIMARY KEY (id);
--
-- Name: authentik_core_user_user_permissions authentik_core_user_user_user_id_permission_id_2601a709_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_user_permissions
ADD CONSTRAINT authentik_core_user_user_user_id_permission_id_2601a709_uniq UNIQUE (user_id, permission_id);
--
-- Name: authentik_core_user authentik_core_user_username_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user
ADD CONSTRAINT authentik_core_user_username_key UNIQUE (username);
--
-- Name: authentik_core_user authentik_core_user_uuid_c7a047d9_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user
ADD CONSTRAINT authentik_core_user_uuid_c7a047d9_uniq UNIQUE (uuid);
--
-- Name: authentik_core_usersourceconnection authentik_core_usersourc_user_id_source_id_ad1f5aa7_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_usersourceconnection
ADD CONSTRAINT authentik_core_usersourc_user_id_source_id_ad1f5aa7_uniq UNIQUE (user_id, source_id);
--
-- Name: authentik_core_usersourceconnection authentik_core_usersourceconnection_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_usersourceconnection
ADD CONSTRAINT authentik_core_usersourceconnection_pkey PRIMARY KEY (id);
--
-- Name: authentik_crypto_certificatekeypair authentik_crypto_certificatekeypair_managed_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_crypto_certificatekeypair
ADD CONSTRAINT authentik_crypto_certificatekeypair_managed_key UNIQUE (managed);
--
-- Name: authentik_crypto_certificatekeypair authentik_crypto_certificatekeypair_name_719603a4_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_crypto_certificatekeypair
ADD CONSTRAINT authentik_crypto_certificatekeypair_name_719603a4_uniq UNIQUE (name);
--
-- Name: authentik_crypto_certificatekeypair authentik_crypto_certificatekeypair_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_crypto_certificatekeypair
ADD CONSTRAINT authentik_crypto_certificatekeypair_pkey PRIMARY KEY (kp_uuid);
--
-- Name: authentik_enterprise_license authentik_enterprise_license_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_enterprise_license
ADD CONSTRAINT authentik_enterprise_license_pkey PRIMARY KEY (license_uuid);
--
-- Name: authentik_enterprise_licenseusage authentik_enterprise_licenseusage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_enterprise_licenseusage
ADD CONSTRAINT authentik_enterprise_licenseusage_pkey PRIMARY KEY (usage_uuid);
--
-- Name: authentik_events_event authentik_events_event_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_event
ADD CONSTRAINT authentik_events_event_pkey PRIMARY KEY (event_uuid);
--
-- Name: authentik_events_notificationrule_transports authentik_events_notific_notificationrule_id_noti_e1f5243d_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule_transports
ADD CONSTRAINT authentik_events_notific_notificationrule_id_noti_e1f5243d_uniq UNIQUE (notificationrule_id, notificationtransport_id);
--
-- Name: authentik_events_notification authentik_events_notification_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notification
ADD CONSTRAINT authentik_events_notification_pkey PRIMARY KEY (uuid);
--
-- Name: authentik_events_notificationrule authentik_events_notificationrule_name_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule
ADD CONSTRAINT authentik_events_notificationrule_name_key UNIQUE (name);
--
-- Name: authentik_events_notificationrule authentik_events_notificationrule_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule
ADD CONSTRAINT authentik_events_notificationrule_pkey PRIMARY KEY (policybindingmodel_ptr_id);
--
-- Name: authentik_events_notificationrule_transports authentik_events_notificationrule_transports_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule_transports
ADD CONSTRAINT authentik_events_notificationrule_transports_pkey PRIMARY KEY (id);
--
-- Name: authentik_events_notificationtransport authentik_events_notificationtransport_name_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationtransport
ADD CONSTRAINT authentik_events_notificationtransport_name_key UNIQUE (name);
--
-- Name: authentik_events_notificationtransport authentik_events_notificationtransport_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationtransport
ADD CONSTRAINT authentik_events_notificationtransport_pkey PRIMARY KEY (uuid);
--
-- Name: authentik_events_notificationwebhookmapping authentik_events_notificationwebhookmapping_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationwebhookmapping
ADD CONSTRAINT authentik_events_notificationwebhookmapping_pkey PRIMARY KEY (propertymapping_ptr_id);
--
-- Name: authentik_flows_flow authentik_flows_flow_pbm_id_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flow
ADD CONSTRAINT authentik_flows_flow_pbm_id_key UNIQUE (policybindingmodel_ptr_id);
--
-- Name: authentik_flows_flow authentik_flows_flow_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flow
ADD CONSTRAINT authentik_flows_flow_pkey PRIMARY KEY (flow_uuid);
--
-- Name: authentik_flows_flow authentik_flows_flow_slug_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flow
ADD CONSTRAINT authentik_flows_flow_slug_key UNIQUE (slug);
--
-- Name: authentik_flows_flowstagebinding authentik_flows_flowstag_target_id_stage_id_order_f2150241_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowstagebinding
ADD CONSTRAINT authentik_flows_flowstag_target_id_stage_id_order_f2150241_uniq UNIQUE (target_id, stage_id, "order");
--
-- Name: authentik_flows_flowstagebinding authentik_flows_flowstagebinding_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowstagebinding
ADD CONSTRAINT authentik_flows_flowstagebinding_pkey PRIMARY KEY (fsb_uuid);
--
-- Name: authentik_flows_flowstagebinding authentik_flows_flowstagebinding_policybindingmodel_ptr_id_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowstagebinding
ADD CONSTRAINT authentik_flows_flowstagebinding_policybindingmodel_ptr_id_key UNIQUE (policybindingmodel_ptr_id);
--
-- Name: authentik_flows_flowtoken authentik_flows_flowtoken_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowtoken
ADD CONSTRAINT authentik_flows_flowtoken_pkey PRIMARY KEY (token_ptr_id);
--
-- Name: authentik_flows_stage authentik_flows_stage_name_a2584620_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_stage
ADD CONSTRAINT authentik_flows_stage_name_a2584620_uniq UNIQUE (name);
--
-- Name: authentik_flows_stage authentik_flows_stage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_stage
ADD CONSTRAINT authentik_flows_stage_pkey PRIMARY KEY (stage_uuid);
--
-- Name: authentik_outposts_dockerserviceconnection authentik_outposts_dockerserviceconnection_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_dockerserviceconnection
ADD CONSTRAINT authentik_outposts_dockerserviceconnection_pkey PRIMARY KEY (outpostserviceconnection_ptr_id);
--
-- Name: authentik_outposts_kubernetesserviceconnection authentik_outposts_kubernetesserviceconnection_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_kubernetesserviceconnection
ADD CONSTRAINT authentik_outposts_kubernetesserviceconnection_pkey PRIMARY KEY (outpostserviceconnection_ptr_id);
--
-- Name: authentik_outposts_outpost_providers authentik_outposts_outpo_outpost_id_provider_id_bee0c17e_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost_providers
ADD CONSTRAINT authentik_outposts_outpo_outpost_id_provider_id_bee0c17e_uniq UNIQUE (outpost_id, provider_id);
--
-- Name: authentik_outposts_outpost authentik_outposts_outpost_managed_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost
ADD CONSTRAINT authentik_outposts_outpost_managed_key UNIQUE (managed);
--
-- Name: authentik_outposts_outpost authentik_outposts_outpost_name_b07e0428_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost
ADD CONSTRAINT authentik_outposts_outpost_name_b07e0428_uniq UNIQUE (name);
--
-- Name: authentik_outposts_outpost authentik_outposts_outpost_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost
ADD CONSTRAINT authentik_outposts_outpost_pkey PRIMARY KEY (uuid);
--
-- Name: authentik_outposts_outpost_providers authentik_outposts_outpost_providers_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost_providers
ADD CONSTRAINT authentik_outposts_outpost_providers_pkey PRIMARY KEY (id);
--
-- Name: authentik_outposts_outpostserviceconnection authentik_outposts_outpostserviceconnection_name_ec30b5ea_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpostserviceconnection
ADD CONSTRAINT authentik_outposts_outpostserviceconnection_name_ec30b5ea_uniq UNIQUE (name);
--
-- Name: authentik_outposts_outpostserviceconnection authentik_outposts_outpostserviceconnection_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpostserviceconnection
ADD CONSTRAINT authentik_outposts_outpostserviceconnection_pkey PRIMARY KEY (uuid);
--
-- Name: authentik_policies_dummy_dummypolicy authentik_policies_dummy_dummypolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_dummy_dummypolicy
ADD CONSTRAINT authentik_policies_dummy_dummypolicy_pkey PRIMARY KEY (policy_ptr_id);
--
-- Name: authentik_policies_event_matcher_eventmatcherpolicy authentik_policies_event_matcher_eventmatcherpolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_event_matcher_eventmatcherpolicy
ADD CONSTRAINT authentik_policies_event_matcher_eventmatcherpolicy_pkey PRIMARY KEY (policy_ptr_id);
--
-- Name: authentik_policies_expiry_passwordexpirypolicy authentik_policies_expiry_passwordexpirypolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_expiry_passwordexpirypolicy
ADD CONSTRAINT authentik_policies_expiry_passwordexpirypolicy_pkey PRIMARY KEY (policy_ptr_id);
--
-- Name: authentik_policies_expression_expressionpolicy authentik_policies_expression_expressionpolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_expression_expressionpolicy
ADD CONSTRAINT authentik_policies_expression_expressionpolicy_pkey PRIMARY KEY (policy_ptr_id);
--
-- Name: authentik_policies_password_passwordpolicy authentik_policies_password_passwordpolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_password_passwordpolicy
ADD CONSTRAINT authentik_policies_password_passwordpolicy_pkey PRIMARY KEY (policy_ptr_id);
--
-- Name: authentik_policies_policybinding authentik_policies_polic_policy_id_target_id_orde_0a6ac3bd_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policybinding
ADD CONSTRAINT authentik_policies_polic_policy_id_target_id_orde_0a6ac3bd_uniq UNIQUE (policy_id, target_id, "order");
--
-- Name: authentik_policies_policy authentik_policies_policy_name_48caa747_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policy
ADD CONSTRAINT authentik_policies_policy_name_48caa747_uniq UNIQUE (name);
--
-- Name: authentik_policies_policy authentik_policies_policy_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policy
ADD CONSTRAINT authentik_policies_policy_pkey PRIMARY KEY (policy_uuid);
--
-- Name: authentik_policies_policybinding authentik_policies_policybinding_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policybinding
ADD CONSTRAINT authentik_policies_policybinding_pkey PRIMARY KEY (policy_binding_uuid);
--
-- Name: authentik_policies_policybindingmodel authentik_policies_policybindingmodel_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policybindingmodel
ADD CONSTRAINT authentik_policies_policybindingmodel_pkey PRIMARY KEY (pbm_uuid);
--
-- Name: authentik_policies_reputation_reputation authentik_policies_reput_identifier_ip_d60de75a_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_reputation_reputation
ADD CONSTRAINT authentik_policies_reput_identifier_ip_d60de75a_uniq UNIQUE (identifier, ip);
--
-- Name: authentik_policies_reputation_reputation authentik_policies_reputation_reputation_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_reputation_reputation
ADD CONSTRAINT authentik_policies_reputation_reputation_pkey PRIMARY KEY (reputation_uuid);
--
-- Name: authentik_policies_reputation_reputationpolicy authentik_policies_reputation_reputationpolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_reputation_reputationpolicy
ADD CONSTRAINT authentik_policies_reputation_reputationpolicy_pkey PRIMARY KEY (policy_ptr_id);
--
-- Name: authentik_providers_ldap_ldapprovider authentik_providers_ldap_ldapprovider_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_ldap_ldapprovider
ADD CONSTRAINT authentik_providers_ldap_ldapprovider_pkey PRIMARY KEY (provider_ptr_id);
--
-- Name: authentik_providers_oauth2_oauth2provider_jwks_sources authentik_providers_oaut_oauth2provider_id_oauths_5151c4b7_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider_jwks_sources
ADD CONSTRAINT authentik_providers_oaut_oauth2provider_id_oauths_5151c4b7_uniq UNIQUE (oauth2provider_id, oauthsource_id);
--
-- Name: authentik_providers_oauth2_accesstoken authentik_providers_oauth2_accesstoken_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_accesstoken
ADD CONSTRAINT authentik_providers_oauth2_accesstoken_pkey PRIMARY KEY (id);
--
-- Name: authentik_providers_oauth2_authorizationcode authentik_providers_oauth2_authorizationcode_code_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_authorizationcode
ADD CONSTRAINT authentik_providers_oauth2_authorizationcode_code_key UNIQUE (code);
--
-- Name: authentik_providers_oauth2_authorizationcode authentik_providers_oauth2_authorizationcode_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_authorizationcode
ADD CONSTRAINT authentik_providers_oauth2_authorizationcode_pkey PRIMARY KEY (id);
--
-- Name: authentik_providers_oauth2_devicetoken authentik_providers_oauth2_devicetoken_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_devicetoken
ADD CONSTRAINT authentik_providers_oauth2_devicetoken_pkey PRIMARY KEY (id);
--
-- Name: authentik_providers_oauth2_oauth2provider authentik_providers_oauth2_oauth2provider_client_id_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider
ADD CONSTRAINT authentik_providers_oauth2_oauth2provider_client_id_key UNIQUE (client_id);
--
-- Name: authentik_providers_oauth2_oauth2provider_jwks_sources authentik_providers_oauth2_oauth2provider_jwks_sources_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider_jwks_sources
ADD CONSTRAINT authentik_providers_oauth2_oauth2provider_jwks_sources_pkey PRIMARY KEY (id);
--
-- Name: authentik_providers_oauth2_oauth2provider authentik_providers_oauth2_oauth2provider_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider
ADD CONSTRAINT authentik_providers_oauth2_oauth2provider_pkey PRIMARY KEY (provider_ptr_id);
--
-- Name: authentik_providers_oauth2_refreshtoken authentik_providers_oauth2_refreshtoken_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_refreshtoken
ADD CONSTRAINT authentik_providers_oauth2_refreshtoken_pkey PRIMARY KEY (id);
--
-- Name: authentik_providers_oauth2_scopemapping authentik_providers_oauth2_scopemapping_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_scopemapping
ADD CONSTRAINT authentik_providers_oauth2_scopemapping_pkey PRIMARY KEY (propertymapping_ptr_id);
--
-- Name: authentik_providers_proxy_proxyprovider authentik_providers_proxy_proxyprovider_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_proxy_proxyprovider
ADD CONSTRAINT authentik_providers_proxy_proxyprovider_pkey PRIMARY KEY (oauth2provider_ptr_id);
--
-- Name: authentik_providers_radius_radiusprovider authentik_providers_radius_radiusprovider_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_radius_radiusprovider
ADD CONSTRAINT authentik_providers_radius_radiusprovider_pkey PRIMARY KEY (provider_ptr_id);
--
-- Name: authentik_providers_saml_samlpropertymapping authentik_providers_saml_samlpropertymapping_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_saml_samlpropertymapping
ADD CONSTRAINT authentik_providers_saml_samlpropertymapping_pkey PRIMARY KEY (propertymapping_ptr_id);
--
-- Name: authentik_providers_saml_samlprovider authentik_providers_saml_samlprovider_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_saml_samlprovider
ADD CONSTRAINT authentik_providers_saml_samlprovider_pkey PRIMARY KEY (provider_ptr_id);
--
-- Name: authentik_providers_scim_scimgroup authentik_providers_scim_id_group_id_provider_id_9d50d292_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimgroup
ADD CONSTRAINT authentik_providers_scim_id_group_id_provider_id_9d50d292_uniq UNIQUE (id, group_id, provider_id);
--
-- Name: authentik_providers_scim_scimuser authentik_providers_scim_id_user_id_provider_id_d664a1b5_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimuser
ADD CONSTRAINT authentik_providers_scim_id_user_id_provider_id_d664a1b5_uniq UNIQUE (id, user_id, provider_id);
--
-- Name: authentik_providers_scim_scimgroup authentik_providers_scim_scimgroup_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimgroup
ADD CONSTRAINT authentik_providers_scim_scimgroup_pkey PRIMARY KEY (id);
--
-- Name: authentik_providers_scim_scimmapping authentik_providers_scim_scimmapping_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimmapping
ADD CONSTRAINT authentik_providers_scim_scimmapping_pkey PRIMARY KEY (propertymapping_ptr_id);
--
-- Name: authentik_providers_scim_scimprovider_property_mappings_group authentik_providers_scim_scimprovider_id_property_32317bb5_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimprovider_property_mappings_group
ADD CONSTRAINT authentik_providers_scim_scimprovider_id_property_32317bb5_uniq UNIQUE (scimprovider_id, propertymapping_id);
--
-- Name: authentik_providers_scim_scimprovider authentik_providers_scim_scimprovider_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimprovider
ADD CONSTRAINT authentik_providers_scim_scimprovider_pkey PRIMARY KEY (provider_ptr_id);
--
-- Name: authentik_providers_scim_scimprovider_property_mappings_group authentik_providers_scim_scimprovider_property_mappings_gr_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimprovider_property_mappings_group
ADD CONSTRAINT authentik_providers_scim_scimprovider_property_mappings_gr_pkey PRIMARY KEY (id);
--
-- Name: authentik_providers_scim_scimuser authentik_providers_scim_scimuser_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimuser
ADD CONSTRAINT authentik_providers_scim_scimuser_pkey PRIMARY KEY (id);
--
-- Name: authentik_rbac_role authentik_rbac_role_group_id_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_rbac_role
ADD CONSTRAINT authentik_rbac_role_group_id_key UNIQUE (group_id);
--
-- Name: authentik_rbac_role authentik_rbac_role_name_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_rbac_role
ADD CONSTRAINT authentik_rbac_role_name_key UNIQUE (name);
--
-- Name: authentik_rbac_role authentik_rbac_role_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_rbac_role
ADD CONSTRAINT authentik_rbac_role_pkey PRIMARY KEY (uuid);
--
-- Name: authentik_sources_ldap_ldapsource_property_mappings_group authentik_sources_ldap_l_ldapsource_id_propertyma_98e4fb2b_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource_property_mappings_group
ADD CONSTRAINT authentik_sources_ldap_l_ldapsource_id_propertyma_98e4fb2b_uniq UNIQUE (ldapsource_id, propertymapping_id);
--
-- Name: authentik_sources_ldap_ldappropertymapping authentik_sources_ldap_ldappropertymapping_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldappropertymapping
ADD CONSTRAINT authentik_sources_ldap_ldappropertymapping_pkey PRIMARY KEY (propertymapping_ptr_id);
--
-- Name: authentik_sources_ldap_ldapsource authentik_sources_ldap_ldapsource_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource
ADD CONSTRAINT authentik_sources_ldap_ldapsource_pkey PRIMARY KEY (source_ptr_id);
--
-- Name: authentik_sources_ldap_ldapsource_property_mappings_group authentik_sources_ldap_ldapsource_property_mappings_group_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource_property_mappings_group
ADD CONSTRAINT authentik_sources_ldap_ldapsource_property_mappings_group_pkey PRIMARY KEY (id);
--
-- Name: authentik_sources_oauth_oauthsource authentik_sources_oauth_oauthsource_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_oauth_oauthsource
ADD CONSTRAINT authentik_sources_oauth_oauthsource_pkey PRIMARY KEY (source_ptr_id);
--
-- Name: authentik_sources_oauth_useroauthsourceconnection authentik_sources_oauth_useroauthsourceconnection_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_oauth_useroauthsourceconnection
ADD CONSTRAINT authentik_sources_oauth_useroauthsourceconnection_pkey PRIMARY KEY (usersourceconnection_ptr_id);
--
-- Name: authentik_sources_plex_plexsource authentik_sources_plex_plexsource_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_plex_plexsource
ADD CONSTRAINT authentik_sources_plex_plexsource_pkey PRIMARY KEY (source_ptr_id);
--
-- Name: authentik_sources_plex_plexsourceconnection authentik_sources_plex_plexsourceconnection_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_plex_plexsourceconnection
ADD CONSTRAINT authentik_sources_plex_plexsourceconnection_pkey PRIMARY KEY (usersourceconnection_ptr_id);
--
-- Name: authentik_sources_saml_samlsource authentik_sources_saml_samlsource_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_saml_samlsource
ADD CONSTRAINT authentik_sources_saml_samlsource_pkey PRIMARY KEY (source_ptr_id);
--
-- Name: authentik_sources_saml_usersamlsourceconnection authentik_sources_saml_usersamlsourceconnection_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_saml_usersamlsourceconnection
ADD CONSTRAINT authentik_sources_saml_usersamlsourceconnection_pkey PRIMARY KEY (usersourceconnection_ptr_id);
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida3e25 authentik_stages_authent_authenticatorvalidatesta_efe8bf64_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_validate_authenticatorvalida3e25
ADD CONSTRAINT authentik_stages_authent_authenticatorvalidatesta_efe8bf64_uniq UNIQUE (authenticatorvalidatestage_id, stage_id);
--
-- Name: authentik_stages_authenticator_sms_smsdevice authentik_stages_authent_stage_id_phone_number_73b07db5_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_smsdevice
ADD CONSTRAINT authentik_stages_authent_stage_id_phone_number_73b07db5_uniq UNIQUE (stage_id, phone_number);
--
-- Name: authentik_stages_authenticator_duo_authenticatorduostage authentik_stages_authenticator_duo_authenticatorduostage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_duo_authenticatorduostage
ADD CONSTRAINT authentik_stages_authenticator_duo_authenticatorduostage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_authenticator_duo_duodevice authentik_stages_authenticator_duo_duodevice_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_duo_duodevice
ADD CONSTRAINT authentik_stages_authenticator_duo_duodevice_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_authenticator_sms_authenticatorsmsstage authentik_stages_authenticator_sms_authenticatorsmsstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_authenticatorsmsstage
ADD CONSTRAINT authentik_stages_authenticator_sms_authenticatorsmsstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_authenticator_sms_smsdevice authentik_stages_authenticator_sms_smsdevice_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_smsdevice
ADD CONSTRAINT authentik_stages_authenticator_sms_smsdevice_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_authenticator_static_authenticatorstaticstage authentik_stages_authenticator_static_otpstaticstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_static_authenticatorstaticstage
ADD CONSTRAINT authentik_stages_authenticator_static_otpstaticstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_authenticator_static_staticdevice authentik_stages_authenticator_static_staticdevice_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_static_staticdevice
ADD CONSTRAINT authentik_stages_authenticator_static_staticdevice_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_authenticator_static_statictoken authentik_stages_authenticator_static_statictoken_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_static_statictoken
ADD CONSTRAINT authentik_stages_authenticator_static_statictoken_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_authenticator_totp_authenticatortotpstage authentik_stages_authenticator_totp_otptimestage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_totp_authenticatortotpstage
ADD CONSTRAINT authentik_stages_authenticator_totp_otptimestage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_authenticator_totp_totpdevice authentik_stages_authenticator_totp_totpdevice_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_totp_totpdevice
ADD CONSTRAINT authentik_stages_authenticator_totp_totpdevice_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida3e25 authentik_stages_authenticator_validate_authenticatorvalid_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_validate_authenticatorvalida3e25
ADD CONSTRAINT authentik_stages_authenticator_validate_authenticatorvalid_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida499c authentik_stages_authenticator_validate_otpvalidatestage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_validate_authenticatorvalida499c
ADD CONSTRAINT authentik_stages_authenticator_validate_otpvalidatestage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_authenticator_webauthn_authenticatewebauth4bbe authentik_stages_authenticator_webauthn_authenticatewebaut_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_webauthn_authenticatewebauth4bbe
ADD CONSTRAINT authentik_stages_authenticator_webauthn_authenticatewebaut_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_authenticator_webauthn_webauthndevice authentik_stages_authenticator_webauthn_webau_credential_id_key; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_webauthn_webauthndevice
ADD CONSTRAINT authentik_stages_authenticator_webauthn_webau_credential_id_key UNIQUE (credential_id);
--
-- Name: authentik_stages_authenticator_webauthn_webauthndevice authentik_stages_authenticator_webauthn_webauthndevice_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_webauthn_webauthndevice
ADD CONSTRAINT authentik_stages_authenticator_webauthn_webauthndevice_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_captcha_captchastage authentik_stages_captcha_captchastage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_captcha_captchastage
ADD CONSTRAINT authentik_stages_captcha_captchastage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_consent_consentstage authentik_stages_consent_consentstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_consent_consentstage
ADD CONSTRAINT authentik_stages_consent_consentstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_consent_userconsent authentik_stages_consent_user_id_application_id_p_e44c6458_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_consent_userconsent
ADD CONSTRAINT authentik_stages_consent_user_id_application_id_p_e44c6458_uniq UNIQUE (user_id, application_id, permissions);
--
-- Name: authentik_stages_consent_userconsent authentik_stages_consent_userconsent_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_consent_userconsent
ADD CONSTRAINT authentik_stages_consent_userconsent_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_deny_denystage authentik_stages_deny_denystage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_deny_denystage
ADD CONSTRAINT authentik_stages_deny_denystage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_dummy_dummystage authentik_stages_dummy_dummystage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_dummy_dummystage
ADD CONSTRAINT authentik_stages_dummy_dummystage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_email_emailstage authentik_stages_email_emailstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_email_emailstage
ADD CONSTRAINT authentik_stages_email_emailstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_identification_identificationstage_sources authentik_stages_identif_identificationstage_id_s_cdf0dfc3_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage_sources
ADD CONSTRAINT authentik_stages_identif_identificationstage_id_s_cdf0dfc3_uniq UNIQUE (identificationstage_id, source_id);
--
-- Name: authentik_stages_identification_identificationstage authentik_stages_identification_identificationstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage
ADD CONSTRAINT authentik_stages_identification_identificationstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_identification_identificationstage_sources authentik_stages_identification_identificationstage_source_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage_sources
ADD CONSTRAINT authentik_stages_identification_identificationstage_source_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_invitation_invitation authentik_stages_invitation_invitation_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_invitation_invitation
ADD CONSTRAINT authentik_stages_invitation_invitation_pkey PRIMARY KEY (invite_uuid);
--
-- Name: authentik_stages_invitation_invitationstage authentik_stages_invitation_invitationstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_invitation_invitationstage
ADD CONSTRAINT authentik_stages_invitation_invitationstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_password_passwordstage authentik_stages_password_passwordstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_password_passwordstage
ADD CONSTRAINT authentik_stages_password_passwordstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_prompt_promptstage_validation_policies authentik_stages_prompt__promptstage_id_policy_id_16cd627d_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_validation_policies
ADD CONSTRAINT authentik_stages_prompt__promptstage_id_policy_id_16cd627d_uniq UNIQUE (promptstage_id, policy_id);
--
-- Name: authentik_stages_prompt_promptstage_fields authentik_stages_prompt__promptstage_id_prompt_id_3212c07e_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_fields
ADD CONSTRAINT authentik_stages_prompt__promptstage_id_prompt_id_3212c07e_uniq UNIQUE (promptstage_id, prompt_id);
--
-- Name: authentik_stages_prompt_prompt authentik_stages_prompt_prompt_name_789de039_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_prompt
ADD CONSTRAINT authentik_stages_prompt_prompt_name_789de039_uniq UNIQUE (name);
--
-- Name: authentik_stages_prompt_prompt authentik_stages_prompt_prompt_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_prompt
ADD CONSTRAINT authentik_stages_prompt_prompt_pkey PRIMARY KEY (prompt_uuid);
--
-- Name: authentik_stages_prompt_promptstage_fields authentik_stages_prompt_promptstage_fields_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_fields
ADD CONSTRAINT authentik_stages_prompt_promptstage_fields_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_prompt_promptstage authentik_stages_prompt_promptstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage
ADD CONSTRAINT authentik_stages_prompt_promptstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_prompt_promptstage_validation_policies authentik_stages_prompt_promptstage_validation_policies_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_validation_policies
ADD CONSTRAINT authentik_stages_prompt_promptstage_validation_policies_pkey PRIMARY KEY (id);
--
-- Name: authentik_stages_user_delete_userdeletestage authentik_stages_user_delete_userdeletestage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_delete_userdeletestage
ADD CONSTRAINT authentik_stages_user_delete_userdeletestage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_user_login_userloginstage authentik_stages_user_login_userloginstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_login_userloginstage
ADD CONSTRAINT authentik_stages_user_login_userloginstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_user_logout_userlogoutstage authentik_stages_user_logout_userlogoutstage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_logout_userlogoutstage
ADD CONSTRAINT authentik_stages_user_logout_userlogoutstage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_stages_user_write_userwritestage authentik_stages_user_write_userwritestage_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_write_userwritestage
ADD CONSTRAINT authentik_stages_user_write_userwritestage_pkey PRIMARY KEY (stage_ptr_id);
--
-- Name: authentik_tenants_tenant authentik_tenants_tenant_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_tenant_pkey PRIMARY KEY (tenant_uuid);
--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.django_content_type
ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);
--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.django_content_type
ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);
--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.django_migrations
ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);
--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.django_session
ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);
--
-- Name: guardian_groupobjectpermission guardian_groupobjectperm_group_id_permission_id_o_3f189f7c_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_groupobjectpermission
ADD CONSTRAINT guardian_groupobjectperm_group_id_permission_id_o_3f189f7c_uniq UNIQUE (group_id, permission_id, object_pk);
--
-- Name: guardian_groupobjectpermission guardian_groupobjectpermission_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_groupobjectpermission
ADD CONSTRAINT guardian_groupobjectpermission_pkey PRIMARY KEY (id);
--
-- Name: guardian_userobjectpermission guardian_userobjectpermi_user_id_permission_id_ob_b0b3d2fc_uniq; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_userobjectpermission
ADD CONSTRAINT guardian_userobjectpermi_user_id_permission_id_ob_b0b3d2fc_uniq UNIQUE (user_id, permission_id, object_pk);
--
-- Name: guardian_userobjectpermission guardian_userobjectpermission_pkey; Type: CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_userobjectpermission
ADD CONSTRAINT guardian_userobjectpermission_pkey PRIMARY KEY (id);
--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);
--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);
--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);
--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);
--
-- Name: authentik_blueprints_blueprintinstance_managed_a2959093_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_blueprints_blueprintinstance_managed_a2959093_like ON public.authentik_blueprints_blueprintinstance USING btree (managed text_pattern_ops);
--
-- Name: authentik_blueprints_blueprintinstance_name_404be626_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_blueprints_blueprintinstance_name_404be626_like ON public.authentik_blueprints_blueprintinstance USING btree (name text_pattern_ops);
--
-- Name: authentik_c_identif_d9d032_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_c_identif_d9d032_idx ON public.authentik_core_token USING btree (identifier);
--
-- Name: authentik_c_key_f71355_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_c_key_f71355_idx ON public.authentik_core_token USING btree (key);
--
-- Name: authentik_c_name_affae6_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_c_name_affae6_idx ON public.authentik_core_source USING btree (name);
--
-- Name: authentik_c_slug_ccb2e5_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_c_slug_ccb2e5_idx ON public.authentik_core_source USING btree (slug);
--
-- Name: authentik_core_application_slug_ab82d049_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_application_slug_ab82d049_like ON public.authentik_core_application USING btree (slug varchar_pattern_ops);
--
-- Name: authentik_core_authenticatedsession_user_id_5055b6cf; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_authenticatedsession_user_id_5055b6cf ON public.authentik_core_authenticatedsession USING btree (user_id);
--
-- Name: authentik_core_group_parent_id_c2cd3508; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_group_parent_id_c2cd3508 ON public.authentik_core_group USING btree (parent_id);
--
-- Name: authentik_core_group_roles_group_id_43a283e0; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_group_roles_group_id_43a283e0 ON public.authentik_core_group_roles USING btree (group_id);
--
-- Name: authentik_core_group_roles_role_id_5b9a84fe; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_group_roles_role_id_5b9a84fe ON public.authentik_core_group_roles USING btree (role_id);
--
-- Name: authentik_core_propertymapping_managed_e1718652_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_propertymapping_managed_e1718652_like ON public.authentik_core_propertymapping USING btree (managed text_pattern_ops);
--
-- Name: authentik_core_propertymapping_name_a457d137_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_propertymapping_name_a457d137_like ON public.authentik_core_propertymapping USING btree (name text_pattern_ops);
--
-- Name: authentik_core_provider_authentication_flow_id_49dea03c; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_provider_authentication_flow_id_49dea03c ON public.authentik_core_provider USING btree (authentication_flow_id);
--
-- Name: authentik_core_provider_authorization_flow_id_1482437b; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_provider_authorization_flow_id_1482437b ON public.authentik_core_provider USING btree (authorization_flow_id);
--
-- Name: authentik_core_provider_backchannel_application_id_a972ebd6; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_provider_backchannel_application_id_a972ebd6 ON public.authentik_core_provider USING btree (backchannel_application_id);
--
-- Name: authentik_core_provider_name_66fc4ef4_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_provider_name_66fc4ef4_like ON public.authentik_core_provider USING btree (name text_pattern_ops);
--
-- Name: authentik_core_provider_pr_propertymapping_id_7d1de2b7; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_provider_pr_propertymapping_id_7d1de2b7 ON public.authentik_core_provider_property_mappings USING btree (propertymapping_id);
--
-- Name: authentik_core_provider_property_mappings_provider_id_10e17d5c; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_provider_property_mappings_provider_id_10e17d5c ON public.authentik_core_provider_property_mappings USING btree (provider_id);
--
-- Name: authentik_core_source_authentication_flow_id_2478087b; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_source_authentication_flow_id_2478087b ON public.authentik_core_source USING btree (authentication_flow_id);
--
-- Name: authentik_core_source_enrollment_flow_id_7844a7b3; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_source_enrollment_flow_id_7844a7b3 ON public.authentik_core_source USING btree (enrollment_flow_id);
--
-- Name: authentik_core_source_managed_65965884_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_source_managed_65965884_like ON public.authentik_core_source USING btree (managed text_pattern_ops);
--
-- Name: authentik_core_source_prop_propertymapping_id_f455cf7d; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_source_prop_propertymapping_id_f455cf7d ON public.authentik_core_source_property_mappings USING btree (propertymapping_id);
--
-- Name: authentik_core_source_property_mappings_source_id_66697386; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_source_property_mappings_source_id_66697386 ON public.authentik_core_source_property_mappings USING btree (source_id);
--
-- Name: authentik_core_source_slug_e15c7212_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_source_slug_e15c7212_like ON public.authentik_core_source USING btree (slug varchar_pattern_ops);
--
-- Name: authentik_core_token_identifier_af152015_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_token_identifier_af152015_like ON public.authentik_core_token USING btree (identifier varchar_pattern_ops);
--
-- Name: authentik_core_token_managed_20a845a1_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_token_managed_20a845a1_like ON public.authentik_core_token USING btree (managed text_pattern_ops);
--
-- Name: authentik_core_token_user_id_479d5b79; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_token_user_id_479d5b79 ON public.authentik_core_token USING btree (user_id);
--
-- Name: authentik_core_user_groups_group_id_72ba5f8d; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_user_groups_group_id_72ba5f8d ON public.authentik_core_user_groups USING btree (group_id);
--
-- Name: authentik_core_user_groups_user_id_a2462693; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_user_groups_user_id_a2462693 ON public.authentik_core_user_groups USING btree (user_id);
--
-- Name: authentik_core_user_pb_groups_group_id_344046d2; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_user_pb_groups_group_id_344046d2 ON public.authentik_core_user_ak_groups USING btree (group_id);
--
-- Name: authentik_core_user_pb_groups_user_id_5ce7c1dc; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_user_pb_groups_user_id_5ce7c1dc ON public.authentik_core_user_ak_groups USING btree (user_id);
--
-- Name: authentik_core_user_user_permissions_permission_id_67859147; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_user_user_permissions_permission_id_67859147 ON public.authentik_core_user_user_permissions USING btree (permission_id);
--
-- Name: authentik_core_user_user_permissions_user_id_6e5a5d85; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_user_user_permissions_user_id_6e5a5d85 ON public.authentik_core_user_user_permissions USING btree (user_id);
--
-- Name: authentik_core_user_username_ba8d02c8_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_user_username_ba8d02c8_like ON public.authentik_core_user USING btree (username varchar_pattern_ops);
--
-- Name: authentik_core_usersourceconnection_source_id_450cff14; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_usersourceconnection_source_id_450cff14 ON public.authentik_core_usersourceconnection USING btree (source_id);
--
-- Name: authentik_core_usersourceconnection_user_id_7f305d6f; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_core_usersourceconnection_user_id_7f305d6f ON public.authentik_core_usersourceconnection USING btree (user_id);
--
-- Name: authentik_crypto_certificatekeypair_managed_a997712a_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_crypto_certificatekeypair_managed_a997712a_like ON public.authentik_crypto_certificatekeypair USING btree (managed text_pattern_ops);
--
-- Name: authentik_crypto_certificatekeypair_name_719603a4_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_crypto_certificatekeypair_name_719603a4_like ON public.authentik_crypto_certificatekeypair USING btree (name text_pattern_ops);
--
-- Name: authentik_e_key_523e13_hash; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_e_key_523e13_hash ON public.authentik_enterprise_license USING hash (key);
--
-- Name: authentik_events_notificat_notificationrule_id_eccbe1d6; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notificat_notificationrule_id_eccbe1d6 ON public.authentik_events_notificationrule_transports USING btree (notificationrule_id);
--
-- Name: authentik_events_notificat_notificationtransport_id_62ec0805; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notificat_notificationtransport_id_62ec0805 ON public.authentik_events_notificationrule_transports USING btree (notificationtransport_id);
--
-- Name: authentik_events_notificat_webhook_mapping_id_2a646fb6; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notificat_webhook_mapping_id_2a646fb6 ON public.authentik_events_notificationtransport USING btree (webhook_mapping_id);
--
-- Name: authentik_events_notification_event_id_ac5c4bb7; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notification_event_id_ac5c4bb7 ON public.authentik_events_notification USING btree (event_id);
--
-- Name: authentik_events_notification_user_id_9ea0c690; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notification_user_id_9ea0c690 ON public.authentik_events_notification USING btree (user_id);
--
-- Name: authentik_events_notificationrule_group_id_667f0fe0; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notificationrule_group_id_667f0fe0 ON public.authentik_events_notificationrule USING btree (group_id);
--
-- Name: authentik_events_notificationrule_name_7401a31b_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notificationrule_name_7401a31b_like ON public.authentik_events_notificationrule USING btree (name text_pattern_ops);
--
-- Name: authentik_events_notificationtransport_name_1f0bd605_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_events_notificationtransport_name_1f0bd605_like ON public.authentik_events_notificationtransport USING btree (name text_pattern_ops);
--
-- Name: authentik_flows_flow_slug_3c406d87_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_flows_flow_slug_3c406d87_like ON public.authentik_flows_flow USING btree (slug varchar_pattern_ops);
--
-- Name: authentik_flows_flowstagebinding_stage_id_7a270212; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_flows_flowstagebinding_stage_id_7a270212 ON public.authentik_flows_flowstagebinding USING btree (stage_id);
--
-- Name: authentik_flows_flowstagebinding_target_id_4899c0f8; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_flows_flowstagebinding_target_id_4899c0f8 ON public.authentik_flows_flowstagebinding USING btree (target_id);
--
-- Name: authentik_flows_flowtoken_flow_id_e4c82880; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_flows_flowtoken_flow_id_e4c82880 ON public.authentik_flows_flowtoken USING btree (flow_id);
--
-- Name: authentik_flows_stage_name_a2584620_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_flows_stage_name_a2584620_like ON public.authentik_flows_stage USING btree (name text_pattern_ops);
--
-- Name: authentik_outposts_dockers_tls_authentication_id_942e2224; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_dockers_tls_authentication_id_942e2224 ON public.authentik_outposts_dockerserviceconnection USING btree (tls_authentication_id);
--
-- Name: authentik_outposts_dockers_tls_verification_id_769fac22; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_dockers_tls_verification_id_769fac22 ON public.authentik_outposts_dockerserviceconnection USING btree (tls_verification_id);
--
-- Name: authentik_outposts_outpost_managed_e03db044_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_outpost_managed_e03db044_like ON public.authentik_outposts_outpost USING btree (managed text_pattern_ops);
--
-- Name: authentik_outposts_outpost_name_b07e0428_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_outpost_name_b07e0428_like ON public.authentik_outposts_outpost USING btree (name text_pattern_ops);
--
-- Name: authentik_outposts_outpost_providers_outpost_id_eaaf025b; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_outpost_providers_outpost_id_eaaf025b ON public.authentik_outposts_outpost_providers USING btree (outpost_id);
--
-- Name: authentik_outposts_outpost_providers_provider_id_7c5cb603; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_outpost_providers_provider_id_7c5cb603 ON public.authentik_outposts_outpost_providers USING btree (provider_id);
--
-- Name: authentik_outposts_outpost_service_connection_id_3eafd830; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_outpost_service_connection_id_3eafd830 ON public.authentik_outposts_outpost USING btree (service_connection_id);
--
-- Name: authentik_outposts_outpostserviceconnection_name_ec30b5ea_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_outposts_outpostserviceconnection_name_ec30b5ea_like ON public.authentik_outposts_outpostserviceconnection USING btree (name text_pattern_ops);
--
-- Name: authentik_p_group_i_5d2d24_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_group_i_5d2d24_idx ON public.authentik_policies_policybinding USING btree (group_id);
--
-- Name: authentik_p_policy__534e15_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_policy__534e15_idx ON public.authentik_policies_policybinding USING btree (policy_id);
--
-- Name: authentik_p_policy__648f9b_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_policy__648f9b_idx ON public.authentik_policies_dummy_dummypolicy USING btree (policy_ptr_id);
--
-- Name: authentik_p_policy__855e80_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_policy__855e80_idx ON public.authentik_policies_password_passwordpolicy USING btree (policy_ptr_id);
--
-- Name: authentik_p_policy__8f0d70_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_policy__8f0d70_idx ON public.authentik_policies_reputation_reputationpolicy USING btree (policy_ptr_id);
--
-- Name: authentik_p_policy__cf73a7_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_policy__cf73a7_idx ON public.authentik_policies_expiry_passwordexpirypolicy USING btree (policy_ptr_id);
--
-- Name: authentik_p_policy__e605cf_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_policy__e605cf_idx ON public.authentik_policies_event_matcher_eventmatcherpolicy USING btree (policy_ptr_id);
--
-- Name: authentik_p_policy__fb6feb_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_policy__fb6feb_idx ON public.authentik_policies_expression_expressionpolicy USING btree (policy_ptr_id);
--
-- Name: authentik_p_target__2e4d50_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_target__2e4d50_idx ON public.authentik_policies_policybinding USING btree (target_id);
--
-- Name: authentik_p_user_id_603323_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_p_user_id_603323_idx ON public.authentik_policies_policybinding USING btree (user_id);
--
-- Name: authentik_policies_policy_name_48caa747_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_policies_policy_name_48caa747_like ON public.authentik_policies_policy USING btree (name text_pattern_ops);
--
-- Name: authentik_policies_policybinding_group_id_2afb13ee; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_policies_policybinding_group_id_2afb13ee ON public.authentik_policies_policybinding USING btree (group_id);
--
-- Name: authentik_policies_policybinding_policy_id_c07161e4; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_policies_policybinding_policy_id_c07161e4 ON public.authentik_policies_policybinding USING btree (policy_id);
--
-- Name: authentik_policies_policybinding_target_id_a7075d8d; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_policies_policybinding_target_id_a7075d8d ON public.authentik_policies_policybinding USING btree (target_id);
--
-- Name: authentik_policies_policybinding_user_id_323bebdb; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_policies_policybinding_user_id_323bebdb ON public.authentik_policies_policybinding USING btree (user_id);
--
-- Name: authentik_providers_ldap_ldapprovider_certificate_id_6a7a6af2; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_ldap_ldapprovider_certificate_id_6a7a6af2 ON public.authentik_providers_ldap_ldapprovider USING btree (certificate_id);
--
-- Name: authentik_providers_ldap_ldapprovider_search_group_id_64713cfa; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_ldap_ldapprovider_search_group_id_64713cfa ON public.authentik_providers_ldap_ldapprovider USING btree (search_group_id);
--
-- Name: authentik_providers_oaut_client_id_ae566546_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oaut_client_id_ae566546_like ON public.authentik_providers_oauth2_oauth2provider USING btree (client_id varchar_pattern_ops);
--
-- Name: authentik_providers_oauth2_accesstoken_provider_id_40ef5d24; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_accesstoken_provider_id_40ef5d24 ON public.authentik_providers_oauth2_accesstoken USING btree (provider_id);
--
-- Name: authentik_providers_oauth2_accesstoken_user_id_7261588f; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_accesstoken_user_id_7261588f ON public.authentik_providers_oauth2_accesstoken USING btree (user_id);
--
-- Name: authentik_providers_oauth2_authorizationcode_code_0202addc_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_authorizationcode_code_0202addc_like ON public.authentik_providers_oauth2_authorizationcode USING btree (code varchar_pattern_ops);
--
-- Name: authentik_providers_oauth2_authorizationcode_user_id_c9a35141; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_authorizationcode_user_id_c9a35141 ON public.authentik_providers_oauth2_authorizationcode USING btree (user_id);
--
-- Name: authentik_providers_oauth2_devicetoken_provider_id_bd1ef28a; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_devicetoken_provider_id_bd1ef28a ON public.authentik_providers_oauth2_devicetoken USING btree (provider_id);
--
-- Name: authentik_providers_oauth2_devicetoken_user_id_17317b6d; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_devicetoken_user_id_17317b6d ON public.authentik_providers_oauth2_devicetoken USING btree (user_id);
--
-- Name: authentik_providers_oauth2_oauth2provider_id_c3adf184; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_oauth2provider_id_c3adf184 ON public.authentik_providers_oauth2_oauth2provider_jwks_sources USING btree (oauth2provider_id);
--
-- Name: authentik_providers_oauth2_oauth2provider_rsa_key_id_836efe9f; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_oauth2provider_rsa_key_id_836efe9f ON public.authentik_providers_oauth2_oauth2provider USING btree (signing_key_id);
--
-- Name: authentik_providers_oauth2_oauthsource_id_41457c33; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_oauthsource_id_41457c33 ON public.authentik_providers_oauth2_oauth2provider_jwks_sources USING btree (oauthsource_id);
--
-- Name: authentik_providers_oauth2_provider_id_731a3e62; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_provider_id_731a3e62 ON public.authentik_providers_oauth2_authorizationcode USING btree (provider_id);
--
-- Name: authentik_providers_oauth2_refreshtoken_provider_id_8bf99dba; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_refreshtoken_provider_id_8bf99dba ON public.authentik_providers_oauth2_refreshtoken USING btree (provider_id);
--
-- Name: authentik_providers_oauth2_refreshtoken_user_id_ebdc1143; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_oauth2_refreshtoken_user_id_ebdc1143 ON public.authentik_providers_oauth2_refreshtoken USING btree (user_id);
--
-- Name: authentik_providers_proxy_proxyprovider_certificate_id_b1e0c422; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_proxy_proxyprovider_certificate_id_b1e0c422 ON public.authentik_providers_proxy_proxyprovider USING btree (certificate_id);
--
-- Name: authentik_providers_saml_s_name_id_mapping_id_5d45f77f; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_saml_s_name_id_mapping_id_5d45f77f ON public.authentik_providers_saml_samlprovider USING btree (name_id_mapping_id);
--
-- Name: authentik_providers_saml_s_verification_kp_id_7b0fbd80; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_saml_s_verification_kp_id_7b0fbd80 ON public.authentik_providers_saml_samlprovider USING btree (verification_kp_id);
--
-- Name: authentik_providers_saml_samlprovider_signing_kp_id_f1bce700; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_saml_samlprovider_signing_kp_id_f1bce700 ON public.authentik_providers_saml_samlprovider USING btree (signing_kp_id);
--
-- Name: authentik_providers_scim_s_propertymapping_id_7ea3950a; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_s_propertymapping_id_7ea3950a ON public.authentik_providers_scim_scimprovider_property_mappings_group USING btree (propertymapping_id);
--
-- Name: authentik_providers_scim_s_scimprovider_id_c3c41ae0; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_s_scimprovider_id_c3c41ae0 ON public.authentik_providers_scim_scimprovider_property_mappings_group USING btree (scimprovider_id);
--
-- Name: authentik_providers_scim_scimgroup_group_id_071f6834; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_scimgroup_group_id_071f6834 ON public.authentik_providers_scim_scimgroup USING btree (group_id);
--
-- Name: authentik_providers_scim_scimgroup_id_96ae7587_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_scimgroup_id_96ae7587_like ON public.authentik_providers_scim_scimgroup USING btree (id text_pattern_ops);
--
-- Name: authentik_providers_scim_scimgroup_provider_id_29f58417; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_scimgroup_provider_id_29f58417 ON public.authentik_providers_scim_scimgroup USING btree (provider_id);
--
-- Name: authentik_providers_scim_scimprovider_filter_group_id_1aca1276; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_scimprovider_filter_group_id_1aca1276 ON public.authentik_providers_scim_scimprovider USING btree (filter_group_id);
--
-- Name: authentik_providers_scim_scimuser_id_64507c6f_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_scimuser_id_64507c6f_like ON public.authentik_providers_scim_scimuser USING btree (id text_pattern_ops);
--
-- Name: authentik_providers_scim_scimuser_provider_id_08127ac7; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_scimuser_provider_id_08127ac7 ON public.authentik_providers_scim_scimuser USING btree (provider_id);
--
-- Name: authentik_providers_scim_scimuser_user_id_63e0ca83; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_providers_scim_scimuser_user_id_63e0ca83 ON public.authentik_providers_scim_scimuser USING btree (user_id);
--
-- Name: authentik_rbac_role_name_94e9e999_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_rbac_role_name_94e9e999_like ON public.authentik_rbac_role USING btree (name text_pattern_ops);
--
-- Name: authentik_sources_ldap_lda_client_certificate_id_937bc1c9; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_ldap_lda_client_certificate_id_937bc1c9 ON public.authentik_sources_ldap_ldapsource USING btree (client_certificate_id);
--
-- Name: authentik_sources_ldap_lda_ldapsource_id_4eff95ce; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_ldap_lda_ldapsource_id_4eff95ce ON public.authentik_sources_ldap_ldapsource_property_mappings_group USING btree (ldapsource_id);
--
-- Name: authentik_sources_ldap_lda_propertymapping_id_6d727491; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_ldap_lda_propertymapping_id_6d727491 ON public.authentik_sources_ldap_ldapsource_property_mappings_group USING btree (propertymapping_id);
--
-- Name: authentik_sources_ldap_ldapsource_peer_certificate_id_50528d0a; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_ldap_ldapsource_peer_certificate_id_50528d0a ON public.authentik_sources_ldap_ldapsource USING btree (peer_certificate_id);
--
-- Name: authentik_sources_ldap_ldapsource_sync_parent_group_id_9c730e90; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_ldap_ldapsource_sync_parent_group_id_9c730e90 ON public.authentik_sources_ldap_ldapsource USING btree (sync_parent_group_id);
--
-- Name: authentik_sources_saml_sam_pre_authentication_flow_id_cec52f8b; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_saml_sam_pre_authentication_flow_id_cec52f8b ON public.authentik_sources_saml_samlsource USING btree (pre_authentication_flow_id);
--
-- Name: authentik_sources_saml_samlsource_signing_kp_id_faae605c; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_saml_samlsource_signing_kp_id_faae605c ON public.authentik_sources_saml_samlsource USING btree (signing_kp_id);
--
-- Name: authentik_sources_saml_samlsource_verification_kp_id_f76620d9; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_sources_saml_samlsource_verification_kp_id_f76620d9 ON public.authentik_sources_saml_samlsource USING btree (verification_kp_id);
--
-- Name: authentik_stages_authent_token_d00a592e_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authent_token_d00a592e_like ON public.authentik_stages_authenticator_static_statictoken USING btree (token varchar_pattern_ops);
--
-- Name: authentik_stages_authentic_authenticatorvalidatestage_aff63c61; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_authenticatorvalidatestage_aff63c61 ON public.authentik_stages_authenticator_validate_authenticatorvalida3e25 USING btree (authenticatorvalidatestage_id);
--
-- Name: authentik_stages_authentic_configure_flow_id_0e413e4d; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_configure_flow_id_0e413e4d ON public.authentik_stages_authenticator_static_authenticatorstaticstage USING btree (configure_flow_id);
--
-- Name: authentik_stages_authentic_configure_flow_id_4c667db1; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_configure_flow_id_4c667db1 ON public.authentik_stages_authenticator_duo_authenticatorduostage USING btree (configure_flow_id);
--
-- Name: authentik_stages_authentic_configure_flow_id_b1d83847; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_configure_flow_id_b1d83847 ON public.authentik_stages_authenticator_webauthn_authenticatewebauth4bbe USING btree (configure_flow_id);
--
-- Name: authentik_stages_authentic_configure_flow_id_e6d859e3; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_configure_flow_id_e6d859e3 ON public.authentik_stages_authenticator_totp_authenticatortotpstage USING btree (configure_flow_id);
--
-- Name: authentik_stages_authentic_configure_flow_id_ff974e9e; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_configure_flow_id_ff974e9e ON public.authentik_stages_authenticator_sms_authenticatorsmsstage USING btree (configure_flow_id);
--
-- Name: authentik_stages_authentic_device_id_d6704f09; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_device_id_d6704f09 ON public.authentik_stages_authenticator_static_statictoken USING btree (device_id);
--
-- Name: authentik_stages_authentic_mapping_id_72d070b3; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_mapping_id_72d070b3 ON public.authentik_stages_authenticator_sms_authenticatorsmsstage USING btree (mapping_id);
--
-- Name: authentik_stages_authentic_stage_id_3c37cac7; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_stage_id_3c37cac7 ON public.authentik_stages_authenticator_validate_authenticatorvalida3e25 USING btree (stage_id);
--
-- Name: authentik_stages_authentic_token_d00a592e; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_token_d00a592e ON public.authentik_stages_authenticator_static_statictoken USING btree (token);
--
-- Name: authentik_stages_authentic_user_id_26c9196a; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_user_id_26c9196a ON public.authentik_stages_authenticator_webauthn_webauthndevice USING btree (user_id);
--
-- Name: authentik_stages_authentic_user_id_aa739a9d; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authentic_user_id_aa739a9d ON public.authentik_stages_authenticator_static_staticdevice USING btree (user_id);
--
-- Name: authentik_stages_authenticator_duo_duodevice_stage_id_926e33da; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authenticator_duo_duodevice_stage_id_926e33da ON public.authentik_stages_authenticator_duo_duodevice USING btree (stage_id);
--
-- Name: authentik_stages_authenticator_duo_duodevice_user_id_bd340329; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authenticator_duo_duodevice_user_id_bd340329 ON public.authentik_stages_authenticator_duo_duodevice USING btree (user_id);
--
-- Name: authentik_stages_authenticator_sms_smsdevice_stage_id_35c87fa6; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authenticator_sms_smsdevice_stage_id_35c87fa6 ON public.authentik_stages_authenticator_sms_smsdevice USING btree (stage_id);
--
-- Name: authentik_stages_authenticator_sms_smsdevice_user_id_454934c5; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authenticator_sms_smsdevice_user_id_454934c5 ON public.authentik_stages_authenticator_sms_smsdevice USING btree (user_id);
--
-- Name: authentik_stages_authenticator_totp_totpdevice_user_id_0cdf9e55; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_authenticator_totp_totpdevice_user_id_0cdf9e55 ON public.authentik_stages_authenticator_totp_totpdevice USING btree (user_id);
--
-- Name: authentik_stages_consent_userconsent_application_id_ad55f58e; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_consent_userconsent_application_id_ad55f58e ON public.authentik_stages_consent_userconsent USING btree (application_id);
--
-- Name: authentik_stages_consent_userconsent_user_id_554dc39f; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_consent_userconsent_user_id_554dc39f ON public.authentik_stages_consent_userconsent USING btree (user_id);
--
-- Name: authentik_stages_identific_enrollment_flow_id_930e83ff; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_identific_enrollment_flow_id_930e83ff ON public.authentik_stages_identification_identificationstage USING btree (enrollment_flow_id);
--
-- Name: authentik_stages_identific_identificationstage_id_c119703c; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_identific_identificationstage_id_c119703c ON public.authentik_stages_identification_identificationstage_sources USING btree (identificationstage_id);
--
-- Name: authentik_stages_identific_password_stage_id_8d68497a; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_identific_password_stage_id_8d68497a ON public.authentik_stages_identification_identificationstage USING btree (password_stage_id);
--
-- Name: authentik_stages_identific_passwordless_flow_id_68cf3874; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_identific_passwordless_flow_id_68cf3874 ON public.authentik_stages_identification_identificationstage USING btree (passwordless_flow_id);
--
-- Name: authentik_stages_identific_recovery_flow_id_16f5f1c7; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_identific_recovery_flow_id_16f5f1c7 ON public.authentik_stages_identification_identificationstage USING btree (recovery_flow_id);
--
-- Name: authentik_stages_identific_source_id_9579fda9; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_identific_source_id_9579fda9 ON public.authentik_stages_identification_identificationstage_sources USING btree (source_id);
--
-- Name: authentik_stages_invitation_invitation_created_by_id_87fe9398; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_invitation_invitation_created_by_id_87fe9398 ON public.authentik_stages_invitation_invitation USING btree (created_by_id);
--
-- Name: authentik_stages_invitation_invitation_flow_id_66945236; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_invitation_invitation_flow_id_66945236 ON public.authentik_stages_invitation_invitation USING btree (flow_id);
--
-- Name: authentik_stages_invitation_invitation_name_00580941; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_invitation_invitation_name_00580941 ON public.authentik_stages_invitation_invitation USING btree (name);
--
-- Name: authentik_stages_invitation_invitation_name_00580941_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_invitation_invitation_name_00580941_like ON public.authentik_stages_invitation_invitation USING btree (name varchar_pattern_ops);
--
-- Name: authentik_stages_password_passwordstage_change_flow_id_d56f0f83; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_password_passwordstage_change_flow_id_d56f0f83 ON public.authentik_stages_password_passwordstage USING btree (configure_flow_id);
--
-- Name: authentik_stages_prompt_pr_policy_id_96db92ab; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_prompt_pr_policy_id_96db92ab ON public.authentik_stages_prompt_promptstage_validation_policies USING btree (policy_id);
--
-- Name: authentik_stages_prompt_pr_promptstage_id_cb253bb1; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_prompt_pr_promptstage_id_cb253bb1 ON public.authentik_stages_prompt_promptstage_validation_policies USING btree (promptstage_id);
--
-- Name: authentik_stages_prompt_pr_promptstage_id_d3bd61cc; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_prompt_pr_promptstage_id_d3bd61cc ON public.authentik_stages_prompt_promptstage_fields USING btree (promptstage_id);
--
-- Name: authentik_stages_prompt_prompt_name_789de039_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_prompt_prompt_name_789de039_like ON public.authentik_stages_prompt_prompt USING btree (name text_pattern_ops);
--
-- Name: authentik_stages_prompt_promptstage_fields_prompt_id_8c79d4c1; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_prompt_promptstage_fields_prompt_id_8c79d4c1 ON public.authentik_stages_prompt_promptstage_fields USING btree (prompt_id);
--
-- Name: authentik_stages_user_writ_create_users_group_id_90b7794f; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_stages_user_writ_create_users_group_id_90b7794f ON public.authentik_stages_user_write_userwritestage USING btree (create_users_group_id);
--
-- Name: authentik_tenants_tenant_flow_authentication_id_7a0889f3; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_tenants_tenant_flow_authentication_id_7a0889f3 ON public.authentik_tenants_tenant USING btree (flow_authentication_id);
--
-- Name: authentik_tenants_tenant_flow_device_code_id_c8fa4eb4; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_tenants_tenant_flow_device_code_id_c8fa4eb4 ON public.authentik_tenants_tenant USING btree (flow_device_code_id);
--
-- Name: authentik_tenants_tenant_flow_invalidation_id_cedce4a1; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_tenants_tenant_flow_invalidation_id_cedce4a1 ON public.authentik_tenants_tenant USING btree (flow_invalidation_id);
--
-- Name: authentik_tenants_tenant_flow_recovery_id_a08f1692; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_tenants_tenant_flow_recovery_id_a08f1692 ON public.authentik_tenants_tenant USING btree (flow_recovery_id);
--
-- Name: authentik_tenants_tenant_flow_unenrollment_id_73817e72; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_tenants_tenant_flow_unenrollment_id_73817e72 ON public.authentik_tenants_tenant USING btree (flow_unenrollment_id);
--
-- Name: authentik_tenants_tenant_flow_user_settings_id_7592a467; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_tenants_tenant_flow_user_settings_id_7592a467 ON public.authentik_tenants_tenant USING btree (flow_user_settings_id);
--
-- Name: authentik_tenants_tenant_web_certificate_id_74429583; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX authentik_tenants_tenant_web_certificate_id_74429583 ON public.authentik_tenants_tenant USING btree (web_certificate_id);
--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);
--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);
--
-- Name: guardian_gr_content_ae6aec_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_gr_content_ae6aec_idx ON public.guardian_groupobjectpermission USING btree (content_type_id, object_pk);
--
-- Name: guardian_groupobjectpermission_content_type_id_7ade36b8; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_groupobjectpermission_content_type_id_7ade36b8 ON public.guardian_groupobjectpermission USING btree (content_type_id);
--
-- Name: guardian_groupobjectpermission_group_id_4bbbfb62; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_groupobjectpermission_group_id_4bbbfb62 ON public.guardian_groupobjectpermission USING btree (group_id);
--
-- Name: guardian_groupobjectpermission_permission_id_36572738; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_groupobjectpermission_permission_id_36572738 ON public.guardian_groupobjectpermission USING btree (permission_id);
--
-- Name: guardian_us_content_179ed2_idx; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_us_content_179ed2_idx ON public.guardian_userobjectpermission USING btree (content_type_id, object_pk);
--
-- Name: guardian_userobjectpermission_content_type_id_2e892405; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_userobjectpermission_content_type_id_2e892405 ON public.guardian_userobjectpermission USING btree (content_type_id);
--
-- Name: guardian_userobjectpermission_permission_id_71807bfc; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_userobjectpermission_permission_id_71807bfc ON public.guardian_userobjectpermission USING btree (permission_id);
--
-- Name: guardian_userobjectpermission_user_id_d5c1e964; Type: INDEX; Schema: public; Owner: authentik
--

CREATE INDEX guardian_userobjectpermission_user_id_d5c1e964 ON public.guardian_userobjectpermission USING btree (user_id);
--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_group_permissions
ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_group_permissions
ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.auth_permission
ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_application authentik_core_appli_policybindingmodel_p_a04bee2b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_application
ADD CONSTRAINT authentik_core_appli_policybindingmodel_p_a04bee2b_fk_authentik FOREIGN KEY (policybindingmodel_ptr_id) REFERENCES public.authentik_policies_policybindingmodel(pbm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_application authentik_core_appli_provider_id_357ae6c6_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_application
ADD CONSTRAINT authentik_core_appli_provider_id_357ae6c6_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_authenticatedsession authentik_core_authe_user_id_5055b6cf_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_authenticatedsession
ADD CONSTRAINT authentik_core_authe_user_id_5055b6cf_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_group_roles authentik_core_group_group_id_43a283e0_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_group_roles
ADD CONSTRAINT authentik_core_group_group_id_43a283e0_fk_authentik FOREIGN KEY (group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_group authentik_core_group_parent_id_c2cd3508_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_group
ADD CONSTRAINT authentik_core_group_parent_id_c2cd3508_fk_authentik FOREIGN KEY (parent_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_group_roles authentik_core_group_role_id_5b9a84fe_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_group_roles
ADD CONSTRAINT authentik_core_group_role_id_5b9a84fe_fk_authentik FOREIGN KEY (role_id) REFERENCES public.authentik_rbac_role(uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_provider authentik_core_provi_authentication_flow__49dea03c_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider
ADD CONSTRAINT authentik_core_provi_authentication_flow__49dea03c_fk_authentik FOREIGN KEY (authentication_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_provider authentik_core_provi_authorization_flow_i_1482437b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider
ADD CONSTRAINT authentik_core_provi_authorization_flow_i_1482437b_fk_authentik FOREIGN KEY (authorization_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_provider authentik_core_provi_backchannel_applicat_a972ebd6_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider
ADD CONSTRAINT authentik_core_provi_backchannel_applicat_a972ebd6_fk_authentik FOREIGN KEY (backchannel_application_id) REFERENCES public.authentik_core_application(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_provider_property_mappings authentik_core_provi_propertymapping_id_7d1de2b7_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider_property_mappings
ADD CONSTRAINT authentik_core_provi_propertymapping_id_7d1de2b7_fk_authentik FOREIGN KEY (propertymapping_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_provider_property_mappings authentik_core_provi_provider_id_10e17d5c_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_provider_property_mappings
ADD CONSTRAINT authentik_core_provi_provider_id_10e17d5c_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_source authentik_core_sourc_authentication_flow__2478087b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source
ADD CONSTRAINT authentik_core_sourc_authentication_flow__2478087b_fk_authentik FOREIGN KEY (authentication_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_source authentik_core_sourc_enrollment_flow_id_7844a7b3_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source
ADD CONSTRAINT authentik_core_sourc_enrollment_flow_id_7844a7b3_fk_authentik FOREIGN KEY (enrollment_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_source authentik_core_sourc_policybindingmodel_p_746c4900_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source
ADD CONSTRAINT authentik_core_sourc_policybindingmodel_p_746c4900_fk_authentik FOREIGN KEY (policybindingmodel_ptr_id) REFERENCES public.authentik_policies_policybindingmodel(pbm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_source_property_mappings authentik_core_sourc_propertymapping_id_f455cf7d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source_property_mappings
ADD CONSTRAINT authentik_core_sourc_propertymapping_id_f455cf7d_fk_authentik FOREIGN KEY (propertymapping_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_source_property_mappings authentik_core_sourc_source_id_66697386_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_source_property_mappings
ADD CONSTRAINT authentik_core_sourc_source_id_66697386_fk_authentik FOREIGN KEY (source_id) REFERENCES public.authentik_core_source(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_token authentik_core_token_user_id_479d5b79_fk_authentik_core_user_id; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_token
ADD CONSTRAINT authentik_core_token_user_id_479d5b79_fk_authentik_core_user_id FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_user_ak_groups authentik_core_user__group_id_344046d2_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_ak_groups
ADD CONSTRAINT authentik_core_user__group_id_344046d2_fk_authentik FOREIGN KEY (group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_user_user_permissions authentik_core_user__permission_id_67859147_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_user_permissions
ADD CONSTRAINT authentik_core_user__permission_id_67859147_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_user_ak_groups authentik_core_user__user_id_5ce7c1dc_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_ak_groups
ADD CONSTRAINT authentik_core_user__user_id_5ce7c1dc_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_user_user_permissions authentik_core_user__user_id_6e5a5d85_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_user_permissions
ADD CONSTRAINT authentik_core_user__user_id_6e5a5d85_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_user_groups authentik_core_user__user_id_a2462693_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_groups
ADD CONSTRAINT authentik_core_user__user_id_a2462693_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_user_groups authentik_core_user_groups_group_id_72ba5f8d_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_user_groups
ADD CONSTRAINT authentik_core_user_groups_group_id_72ba5f8d_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_usersourceconnection authentik_core_users_source_id_450cff14_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_usersourceconnection
ADD CONSTRAINT authentik_core_users_source_id_450cff14_fk_authentik FOREIGN KEY (source_id) REFERENCES public.authentik_core_source(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_core_usersourceconnection authentik_core_users_user_id_7f305d6f_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_core_usersourceconnection
ADD CONSTRAINT authentik_core_users_user_id_7f305d6f_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notification authentik_events_not_event_id_ac5c4bb7_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notification
ADD CONSTRAINT authentik_events_not_event_id_ac5c4bb7_fk_authentik FOREIGN KEY (event_id) REFERENCES public.authentik_events_event(event_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notificationrule authentik_events_not_group_id_667f0fe0_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule
ADD CONSTRAINT authentik_events_not_group_id_667f0fe0_fk_authentik FOREIGN KEY (group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notificationrule_transports authentik_events_not_notificationrule_id_eccbe1d6_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule_transports
ADD CONSTRAINT authentik_events_not_notificationrule_id_eccbe1d6_fk_authentik FOREIGN KEY (notificationrule_id) REFERENCES public.authentik_events_notificationrule(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notificationrule_transports authentik_events_not_notificationtranspor_62ec0805_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule_transports
ADD CONSTRAINT authentik_events_not_notificationtranspor_62ec0805_fk_authentik FOREIGN KEY (notificationtransport_id) REFERENCES public.authentik_events_notificationtransport(uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notificationrule authentik_events_not_policybindingmodel_p_74974b98_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationrule
ADD CONSTRAINT authentik_events_not_policybindingmodel_p_74974b98_fk_authentik FOREIGN KEY (policybindingmodel_ptr_id) REFERENCES public.authentik_policies_policybindingmodel(pbm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notificationwebhookmapping authentik_events_not_propertymapping_ptr__56d35fcd_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationwebhookmapping
ADD CONSTRAINT authentik_events_not_propertymapping_ptr__56d35fcd_fk_authentik FOREIGN KEY (propertymapping_ptr_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notification authentik_events_not_user_id_9ea0c690_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notification
ADD CONSTRAINT authentik_events_not_user_id_9ea0c690_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_events_notificationtransport authentik_events_not_webhook_mapping_id_2a646fb6_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_events_notificationtransport
ADD CONSTRAINT authentik_events_not_webhook_mapping_id_2a646fb6_fk_authentik FOREIGN KEY (webhook_mapping_id) REFERENCES public.authentik_events_notificationwebhookmapping(propertymapping_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_flows_flowtoken authentik_flows_flow_flow_id_e4c82880_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowtoken
ADD CONSTRAINT authentik_flows_flow_flow_id_e4c82880_fk_authentik FOREIGN KEY (flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_flows_flowstagebinding authentik_flows_flow_policybindingmodel_p_20d905a6_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowstagebinding
ADD CONSTRAINT authentik_flows_flow_policybindingmodel_p_20d905a6_fk_authentik FOREIGN KEY (policybindingmodel_ptr_id) REFERENCES public.authentik_policies_policybindingmodel(pbm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_flows_flow authentik_flows_flow_policybindingmodel_p_9c3c290f_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flow
ADD CONSTRAINT authentik_flows_flow_policybindingmodel_p_9c3c290f_fk_authentik FOREIGN KEY (policybindingmodel_ptr_id) REFERENCES public.authentik_policies_policybindingmodel(pbm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_flows_flowstagebinding authentik_flows_flow_stage_id_7a270212_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowstagebinding
ADD CONSTRAINT authentik_flows_flow_stage_id_7a270212_fk_authentik FOREIGN KEY (stage_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_flows_flowstagebinding authentik_flows_flow_target_id_4899c0f8_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowstagebinding
ADD CONSTRAINT authentik_flows_flow_target_id_4899c0f8_fk_authentik FOREIGN KEY (target_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_flows_flowtoken authentik_flows_flow_token_ptr_id_e3047c65_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_flows_flowtoken
ADD CONSTRAINT authentik_flows_flow_token_ptr_id_e3047c65_fk_authentik FOREIGN KEY (token_ptr_id) REFERENCES public.authentik_core_token(token_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_outposts_dockerserviceconnection authentik_outposts_d_outpostserviceconnec_35f196a0_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_dockerserviceconnection
ADD CONSTRAINT authentik_outposts_d_outpostserviceconnec_35f196a0_fk_authentik FOREIGN KEY (outpostserviceconnection_ptr_id) REFERENCES public.authentik_outposts_outpostserviceconnection(uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_outposts_dockerserviceconnection authentik_outposts_d_tls_authentication_i_942e2224_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_dockerserviceconnection
ADD CONSTRAINT authentik_outposts_d_tls_authentication_i_942e2224_fk_authentik FOREIGN KEY (tls_authentication_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_outposts_dockerserviceconnection authentik_outposts_d_tls_verification_id_769fac22_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_dockerserviceconnection
ADD CONSTRAINT authentik_outposts_d_tls_verification_id_769fac22_fk_authentik FOREIGN KEY (tls_verification_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_outposts_kubernetesserviceconnection authentik_outposts_k_outpostserviceconnec_f5cf691d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_kubernetesserviceconnection
ADD CONSTRAINT authentik_outposts_k_outpostserviceconnec_f5cf691d_fk_authentik FOREIGN KEY (outpostserviceconnection_ptr_id) REFERENCES public.authentik_outposts_outpostserviceconnection(uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_outposts_outpost_providers authentik_outposts_o_outpost_id_eaaf025b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost_providers
ADD CONSTRAINT authentik_outposts_o_outpost_id_eaaf025b_fk_authentik FOREIGN KEY (outpost_id) REFERENCES public.authentik_outposts_outpost(uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_outposts_outpost_providers authentik_outposts_o_provider_id_7c5cb603_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost_providers
ADD CONSTRAINT authentik_outposts_o_provider_id_7c5cb603_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_outposts_outpost authentik_outposts_o_service_connection_i_3eafd830_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_outposts_outpost
ADD CONSTRAINT authentik_outposts_o_service_connection_i_3eafd830_fk_authentik FOREIGN KEY (service_connection_id) REFERENCES public.authentik_outposts_outpostserviceconnection(uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_dummy_dummypolicy authentik_policies_d_policy_ptr_id_d411c5e4_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_dummy_dummypolicy
ADD CONSTRAINT authentik_policies_d_policy_ptr_id_d411c5e4_fk_authentik FOREIGN KEY (policy_ptr_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_expression_expressionpolicy authentik_policies_e_policy_ptr_id_3fec413c_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_expression_expressionpolicy
ADD CONSTRAINT authentik_policies_e_policy_ptr_id_3fec413c_fk_authentik FOREIGN KEY (policy_ptr_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_expiry_passwordexpirypolicy authentik_policies_e_policy_ptr_id_bad15341_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_expiry_passwordexpirypolicy
ADD CONSTRAINT authentik_policies_e_policy_ptr_id_bad15341_fk_authentik FOREIGN KEY (policy_ptr_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_event_matcher_eventmatcherpolicy authentik_policies_e_policy_ptr_id_f12a3e96_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_event_matcher_eventmatcherpolicy
ADD CONSTRAINT authentik_policies_e_policy_ptr_id_f12a3e96_fk_authentik FOREIGN KEY (policy_ptr_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_policybinding authentik_policies_p_group_id_2afb13ee_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policybinding
ADD CONSTRAINT authentik_policies_p_group_id_2afb13ee_fk_authentik FOREIGN KEY (group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_policybinding authentik_policies_p_policy_id_c07161e4_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policybinding
ADD CONSTRAINT authentik_policies_p_policy_id_c07161e4_fk_authentik FOREIGN KEY (policy_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_password_passwordpolicy authentik_policies_p_policy_ptr_id_6301794d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_password_passwordpolicy
ADD CONSTRAINT authentik_policies_p_policy_ptr_id_6301794d_fk_authentik FOREIGN KEY (policy_ptr_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_policybinding authentik_policies_p_target_id_a7075d8d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policybinding
ADD CONSTRAINT authentik_policies_p_target_id_a7075d8d_fk_authentik FOREIGN KEY (target_id) REFERENCES public.authentik_policies_policybindingmodel(pbm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_policybinding authentik_policies_p_user_id_323bebdb_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_policybinding
ADD CONSTRAINT authentik_policies_p_user_id_323bebdb_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_policies_reputation_reputationpolicy authentik_policies_r_policy_ptr_id_5d5a869c_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_policies_reputation_reputationpolicy
ADD CONSTRAINT authentik_policies_r_policy_ptr_id_5d5a869c_fk_authentik FOREIGN KEY (policy_ptr_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_ldap_ldapprovider authentik_providers__certificate_id_6a7a6af2_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_ldap_ldapprovider
ADD CONSTRAINT authentik_providers__certificate_id_6a7a6af2_fk_authentik FOREIGN KEY (certificate_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_proxy_proxyprovider authentik_providers__certificate_id_b1e0c422_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_proxy_proxyprovider
ADD CONSTRAINT authentik_providers__certificate_id_b1e0c422_fk_authentik FOREIGN KEY (certificate_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimprovider authentik_providers__filter_group_id_1aca1276_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimprovider
ADD CONSTRAINT authentik_providers__filter_group_id_1aca1276_fk_authentik FOREIGN KEY (filter_group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimgroup authentik_providers__group_id_071f6834_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimgroup
ADD CONSTRAINT authentik_providers__group_id_071f6834_fk_authentik FOREIGN KEY (group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_saml_samlprovider authentik_providers__name_id_mapping_id_5d45f77f_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_saml_samlprovider
ADD CONSTRAINT authentik_providers__name_id_mapping_id_5d45f77f_fk_authentik FOREIGN KEY (name_id_mapping_id) REFERENCES public.authentik_providers_saml_samlpropertymapping(propertymapping_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_oauth2provider_jwks_sources authentik_providers__oauth2provider_id_c3adf184_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider_jwks_sources
ADD CONSTRAINT authentik_providers__oauth2provider_id_c3adf184_fk_authentik FOREIGN KEY (oauth2provider_id) REFERENCES public.authentik_providers_oauth2_oauth2provider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_proxy_proxyprovider authentik_providers__oauth2provider_ptr_i_eb747e01_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_proxy_proxyprovider
ADD CONSTRAINT authentik_providers__oauth2provider_ptr_i_eb747e01_fk_authentik FOREIGN KEY (oauth2provider_ptr_id) REFERENCES public.authentik_providers_oauth2_oauth2provider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_oauth2provider_jwks_sources authentik_providers__oauthsource_id_41457c33_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider_jwks_sources
ADD CONSTRAINT authentik_providers__oauthsource_id_41457c33_fk_authentik FOREIGN KEY (oauthsource_id) REFERENCES public.authentik_sources_oauth_oauthsource(source_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimprovider_property_mappings_group authentik_providers__propertymapping_id_7ea3950a_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimprovider_property_mappings_group
ADD CONSTRAINT authentik_providers__propertymapping_id_7ea3950a_fk_authentik FOREIGN KEY (propertymapping_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_scopemapping authentik_providers__propertymapping_ptr__37f1d926_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_scopemapping
ADD CONSTRAINT authentik_providers__propertymapping_ptr__37f1d926_fk_authentik FOREIGN KEY (propertymapping_ptr_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_saml_samlpropertymapping authentik_providers__propertymapping_ptr__812e8cfb_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_saml_samlpropertymapping
ADD CONSTRAINT authentik_providers__propertymapping_ptr__812e8cfb_fk_authentik FOREIGN KEY (propertymapping_ptr_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimmapping authentik_providers__propertymapping_ptr__bd79ae32_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimmapping
ADD CONSTRAINT authentik_providers__propertymapping_ptr__bd79ae32_fk_authentik FOREIGN KEY (propertymapping_ptr_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimuser authentik_providers__provider_id_08127ac7_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimuser
ADD CONSTRAINT authentik_providers__provider_id_08127ac7_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_providers_scim_scimprovider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimgroup authentik_providers__provider_id_29f58417_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimgroup
ADD CONSTRAINT authentik_providers__provider_id_29f58417_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_providers_scim_scimprovider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_accesstoken authentik_providers__provider_id_40ef5d24_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_accesstoken
ADD CONSTRAINT authentik_providers__provider_id_40ef5d24_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_providers_oauth2_oauth2provider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_authorizationcode authentik_providers__provider_id_731a3e62_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_authorizationcode
ADD CONSTRAINT authentik_providers__provider_id_731a3e62_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_providers_oauth2_oauth2provider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_refreshtoken authentik_providers__provider_id_8bf99dba_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_refreshtoken
ADD CONSTRAINT authentik_providers__provider_id_8bf99dba_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_providers_oauth2_oauth2provider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_devicetoken authentik_providers__provider_id_bd1ef28a_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_devicetoken
ADD CONSTRAINT authentik_providers__provider_id_bd1ef28a_fk_authentik FOREIGN KEY (provider_id) REFERENCES public.authentik_providers_oauth2_oauth2provider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_saml_samlprovider authentik_providers__provider_ptr_id_677ac81a_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_saml_samlprovider
ADD CONSTRAINT authentik_providers__provider_ptr_id_677ac81a_fk_authentik FOREIGN KEY (provider_ptr_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_oauth2provider authentik_providers__provider_ptr_id_76903270_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider
ADD CONSTRAINT authentik_providers__provider_ptr_id_76903270_fk_authentik FOREIGN KEY (provider_ptr_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimprovider authentik_providers__provider_ptr_id_77bcf9bd_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimprovider
ADD CONSTRAINT authentik_providers__provider_ptr_id_77bcf9bd_fk_authentik FOREIGN KEY (provider_ptr_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_radius_radiusprovider authentik_providers__provider_ptr_id_908e5d8a_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_radius_radiusprovider
ADD CONSTRAINT authentik_providers__provider_ptr_id_908e5d8a_fk_authentik FOREIGN KEY (provider_ptr_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_ldap_ldapprovider authentik_providers__provider_ptr_id_deae38fd_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_ldap_ldapprovider
ADD CONSTRAINT authentik_providers__provider_ptr_id_deae38fd_fk_authentik FOREIGN KEY (provider_ptr_id) REFERENCES public.authentik_core_provider(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimprovider_property_mappings_group authentik_providers__scimprovider_id_c3c41ae0_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimprovider_property_mappings_group
ADD CONSTRAINT authentik_providers__scimprovider_id_c3c41ae0_fk_authentik FOREIGN KEY (scimprovider_id) REFERENCES public.authentik_providers_scim_scimprovider(provider_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_ldap_ldapprovider authentik_providers__search_group_id_64713cfa_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_ldap_ldapprovider
ADD CONSTRAINT authentik_providers__search_group_id_64713cfa_fk_authentik FOREIGN KEY (search_group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_oauth2provider authentik_providers__signing_key_id_4189c2f3_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_oauth2provider
ADD CONSTRAINT authentik_providers__signing_key_id_4189c2f3_fk_authentik FOREIGN KEY (signing_key_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_saml_samlprovider authentik_providers__signing_kp_id_f1bce700_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_saml_samlprovider
ADD CONSTRAINT authentik_providers__signing_kp_id_f1bce700_fk_authentik FOREIGN KEY (signing_kp_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_devicetoken authentik_providers__user_id_17317b6d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_devicetoken
ADD CONSTRAINT authentik_providers__user_id_17317b6d_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_scim_scimuser authentik_providers__user_id_63e0ca83_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_scim_scimuser
ADD CONSTRAINT authentik_providers__user_id_63e0ca83_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_accesstoken authentik_providers__user_id_7261588f_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_accesstoken
ADD CONSTRAINT authentik_providers__user_id_7261588f_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_authorizationcode authentik_providers__user_id_c9a35141_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_authorizationcode
ADD CONSTRAINT authentik_providers__user_id_c9a35141_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_oauth2_refreshtoken authentik_providers__user_id_ebdc1143_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_oauth2_refreshtoken
ADD CONSTRAINT authentik_providers__user_id_ebdc1143_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_providers_saml_samlprovider authentik_providers__verification_kp_id_7b0fbd80_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_providers_saml_samlprovider
ADD CONSTRAINT authentik_providers__verification_kp_id_7b0fbd80_fk_authentik FOREIGN KEY (verification_kp_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_rbac_role authentik_rbac_role_group_id_d8509027_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_rbac_role
ADD CONSTRAINT authentik_rbac_role_group_id_d8509027_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_ldap_ldapsource authentik_sources_ld_client_certificate_i_937bc1c9_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource
ADD CONSTRAINT authentik_sources_ld_client_certificate_i_937bc1c9_fk_authentik FOREIGN KEY (client_certificate_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_ldap_ldapsource_property_mappings_group authentik_sources_ld_ldapsource_id_4eff95ce_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource_property_mappings_group
ADD CONSTRAINT authentik_sources_ld_ldapsource_id_4eff95ce_fk_authentik FOREIGN KEY (ldapsource_id) REFERENCES public.authentik_sources_ldap_ldapsource(source_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_ldap_ldapsource authentik_sources_ld_peer_certificate_id_50528d0a_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource
ADD CONSTRAINT authentik_sources_ld_peer_certificate_id_50528d0a_fk_authentik FOREIGN KEY (peer_certificate_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_ldap_ldapsource_property_mappings_group authentik_sources_ld_propertymapping_id_6d727491_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource_property_mappings_group
ADD CONSTRAINT authentik_sources_ld_propertymapping_id_6d727491_fk_authentik FOREIGN KEY (propertymapping_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_ldap_ldappropertymapping authentik_sources_ld_propertymapping_ptr__559cd35b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldappropertymapping
ADD CONSTRAINT authentik_sources_ld_propertymapping_ptr__559cd35b_fk_authentik FOREIGN KEY (propertymapping_ptr_id) REFERENCES public.authentik_core_propertymapping(pm_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_ldap_ldapsource authentik_sources_ld_source_ptr_id_264402b5_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource
ADD CONSTRAINT authentik_sources_ld_source_ptr_id_264402b5_fk_authentik FOREIGN KEY (source_ptr_id) REFERENCES public.authentik_core_source(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_ldap_ldapsource authentik_sources_ld_sync_parent_group_id_9c730e90_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_ldap_ldapsource
ADD CONSTRAINT authentik_sources_ld_sync_parent_group_id_9c730e90_fk_authentik FOREIGN KEY (sync_parent_group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_oauth_oauthsource authentik_sources_oa_source_ptr_id_eb45d674_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_oauth_oauthsource
ADD CONSTRAINT authentik_sources_oa_source_ptr_id_eb45d674_fk_authentik FOREIGN KEY (source_ptr_id) REFERENCES public.authentik_core_source(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_oauth_useroauthsourceconnection authentik_sources_oa_usersourceconnection_e9ae7a6b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_oauth_useroauthsourceconnection
ADD CONSTRAINT authentik_sources_oa_usersourceconnection_e9ae7a6b_fk_authentik FOREIGN KEY (usersourceconnection_ptr_id) REFERENCES public.authentik_core_usersourceconnection(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_plex_plexsource authentik_sources_pl_source_ptr_id_b52adfc2_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_plex_plexsource
ADD CONSTRAINT authentik_sources_pl_source_ptr_id_b52adfc2_fk_authentik FOREIGN KEY (source_ptr_id) REFERENCES public.authentik_core_source(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_plex_plexsourceconnection authentik_sources_pl_usersourceconnection_ff3dd805_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_plex_plexsourceconnection
ADD CONSTRAINT authentik_sources_pl_usersourceconnection_ff3dd805_fk_authentik FOREIGN KEY (usersourceconnection_ptr_id) REFERENCES public.authentik_core_usersourceconnection(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_saml_samlsource authentik_sources_sa_pre_authentication_f_cec52f8b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_saml_samlsource
ADD CONSTRAINT authentik_sources_sa_pre_authentication_f_cec52f8b_fk_authentik FOREIGN KEY (pre_authentication_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_saml_samlsource authentik_sources_sa_signing_kp_id_faae605c_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_saml_samlsource
ADD CONSTRAINT authentik_sources_sa_signing_kp_id_faae605c_fk_authentik FOREIGN KEY (signing_kp_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_saml_samlsource authentik_sources_sa_source_ptr_id_3381b214_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_saml_samlsource
ADD CONSTRAINT authentik_sources_sa_source_ptr_id_3381b214_fk_authentik FOREIGN KEY (source_ptr_id) REFERENCES public.authentik_core_source(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_saml_usersamlsourceconnection authentik_sources_sa_usersourceconnection_b6d9dcfe_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_saml_usersamlsourceconnection
ADD CONSTRAINT authentik_sources_sa_usersourceconnection_b6d9dcfe_fk_authentik FOREIGN KEY (usersourceconnection_ptr_id) REFERENCES public.authentik_core_usersourceconnection(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_sources_saml_samlsource authentik_sources_sa_verification_kp_id_f76620d9_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_sources_saml_samlsource
ADD CONSTRAINT authentik_sources_sa_verification_kp_id_f76620d9_fk_authentik FOREIGN KEY (verification_kp_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida3e25 authentik_stages_aut_authenticatorvalidat_aff63c61_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_validate_authenticatorvalida3e25
ADD CONSTRAINT authentik_stages_aut_authenticatorvalidat_aff63c61_fk_authentik FOREIGN KEY (authenticatorvalidatestage_id) REFERENCES public.authentik_stages_authenticator_validate_authenticatorvalida499c(stage_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_static_authenticatorstaticstage authentik_stages_aut_configure_flow_id_0e413e4d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_static_authenticatorstaticstage
ADD CONSTRAINT authentik_stages_aut_configure_flow_id_0e413e4d_fk_authentik FOREIGN KEY (configure_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_duo_authenticatorduostage authentik_stages_aut_configure_flow_id_4c667db1_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_duo_authenticatorduostage
ADD CONSTRAINT authentik_stages_aut_configure_flow_id_4c667db1_fk_authentik FOREIGN KEY (configure_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_webauthn_authenticatewebauth4bbe authentik_stages_aut_configure_flow_id_b1d83847_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_webauthn_authenticatewebauth4bbe
ADD CONSTRAINT authentik_stages_aut_configure_flow_id_b1d83847_fk_authentik FOREIGN KEY (configure_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_totp_authenticatortotpstage authentik_stages_aut_configure_flow_id_e6d859e3_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_totp_authenticatortotpstage
ADD CONSTRAINT authentik_stages_aut_configure_flow_id_e6d859e3_fk_authentik FOREIGN KEY (configure_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_sms_authenticatorsmsstage authentik_stages_aut_configure_flow_id_ff974e9e_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_authenticatorsmsstage
ADD CONSTRAINT authentik_stages_aut_configure_flow_id_ff974e9e_fk_authentik FOREIGN KEY (configure_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_static_statictoken authentik_stages_aut_device_id_d6704f09_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_static_statictoken
ADD CONSTRAINT authentik_stages_aut_device_id_d6704f09_fk_authentik FOREIGN KEY (device_id) REFERENCES public.authentik_stages_authenticator_static_staticdevice(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_sms_authenticatorsmsstage authentik_stages_aut_mapping_id_72d070b3_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_authenticatorsmsstage
ADD CONSTRAINT authentik_stages_aut_mapping_id_72d070b3_fk_authentik FOREIGN KEY (mapping_id) REFERENCES public.authentik_events_notificationwebhookmapping(propertymapping_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_sms_smsdevice authentik_stages_aut_stage_id_35c87fa6_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_smsdevice
ADD CONSTRAINT authentik_stages_aut_stage_id_35c87fa6_fk_authentik FOREIGN KEY (stage_id) REFERENCES public.authentik_stages_authenticator_sms_authenticatorsmsstage(stage_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida3e25 authentik_stages_aut_stage_id_3c37cac7_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_validate_authenticatorvalida3e25
ADD CONSTRAINT authentik_stages_aut_stage_id_3c37cac7_fk_authentik FOREIGN KEY (stage_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_duo_duodevice authentik_stages_aut_stage_id_926e33da_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_duo_duodevice
ADD CONSTRAINT authentik_stages_aut_stage_id_926e33da_fk_authentik FOREIGN KEY (stage_id) REFERENCES public.authentik_stages_authenticator_duo_authenticatorduostage(stage_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_sms_authenticatorsmsstage authentik_stages_aut_stage_ptr_id_4ebb9914_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_authenticatorsmsstage
ADD CONSTRAINT authentik_stages_aut_stage_ptr_id_4ebb9914_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_webauthn_authenticatewebauth4bbe authentik_stages_aut_stage_ptr_id_67d6ca22_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_webauthn_authenticatewebauth4bbe
ADD CONSTRAINT authentik_stages_aut_stage_ptr_id_67d6ca22_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_duo_authenticatorduostage authentik_stages_aut_stage_ptr_id_7835ea46_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_duo_authenticatorduostage
ADD CONSTRAINT authentik_stages_aut_stage_ptr_id_7835ea46_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_totp_authenticatortotpstage authentik_stages_aut_stage_ptr_id_9e1575b0_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_totp_authenticatortotpstage
ADD CONSTRAINT authentik_stages_aut_stage_ptr_id_9e1575b0_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_static_authenticatorstaticstage authentik_stages_aut_stage_ptr_id_a719c9e1_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_static_authenticatorstaticstage
ADD CONSTRAINT authentik_stages_aut_stage_ptr_id_a719c9e1_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_validate_authenticatorvalida499c authentik_stages_aut_stage_ptr_id_d44614a3_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_validate_authenticatorvalida499c
ADD CONSTRAINT authentik_stages_aut_stage_ptr_id_d44614a3_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_totp_totpdevice authentik_stages_aut_user_id_0cdf9e55_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_totp_totpdevice
ADD CONSTRAINT authentik_stages_aut_user_id_0cdf9e55_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_webauthn_webauthndevice authentik_stages_aut_user_id_26c9196a_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_webauthn_webauthndevice
ADD CONSTRAINT authentik_stages_aut_user_id_26c9196a_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_sms_smsdevice authentik_stages_aut_user_id_454934c5_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_sms_smsdevice
ADD CONSTRAINT authentik_stages_aut_user_id_454934c5_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_static_staticdevice authentik_stages_aut_user_id_aa739a9d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_static_staticdevice
ADD CONSTRAINT authentik_stages_aut_user_id_aa739a9d_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_authenticator_duo_duodevice authentik_stages_aut_user_id_bd340329_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_authenticator_duo_duodevice
ADD CONSTRAINT authentik_stages_aut_user_id_bd340329_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_captcha_captchastage authentik_stages_cap_stage_ptr_id_6328c33b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_captcha_captchastage
ADD CONSTRAINT authentik_stages_cap_stage_ptr_id_6328c33b_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_consent_userconsent authentik_stages_con_application_id_ad55f58e_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_consent_userconsent
ADD CONSTRAINT authentik_stages_con_application_id_ad55f58e_fk_authentik FOREIGN KEY (application_id) REFERENCES public.authentik_core_application(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_consent_consentstage authentik_stages_con_stage_ptr_id_492add69_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_consent_consentstage
ADD CONSTRAINT authentik_stages_con_stage_ptr_id_492add69_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_consent_userconsent authentik_stages_con_user_id_554dc39f_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_consent_userconsent
ADD CONSTRAINT authentik_stages_con_user_id_554dc39f_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_deny_denystage authentik_stages_den_stage_ptr_id_5290ec0e_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_deny_denystage
ADD CONSTRAINT authentik_stages_den_stage_ptr_id_5290ec0e_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_dummy_dummystage authentik_stages_dum_stage_ptr_id_7d72bd43_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_dummy_dummystage
ADD CONSTRAINT authentik_stages_dum_stage_ptr_id_7d72bd43_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_email_emailstage authentik_stages_ema_stage_ptr_id_7355e8a2_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_email_emailstage
ADD CONSTRAINT authentik_stages_ema_stage_ptr_id_7355e8a2_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_identification_identificationstage authentik_stages_ide_enrollment_flow_id_930e83ff_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage
ADD CONSTRAINT authentik_stages_ide_enrollment_flow_id_930e83ff_fk_authentik FOREIGN KEY (enrollment_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_identification_identificationstage_sources authentik_stages_ide_identificationstage__c119703c_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage_sources
ADD CONSTRAINT authentik_stages_ide_identificationstage__c119703c_fk_authentik FOREIGN KEY (identificationstage_id) REFERENCES public.authentik_stages_identification_identificationstage(stage_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_identification_identificationstage authentik_stages_ide_password_stage_id_8d68497a_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage
ADD CONSTRAINT authentik_stages_ide_password_stage_id_8d68497a_fk_authentik FOREIGN KEY (password_stage_id) REFERENCES public.authentik_stages_password_passwordstage(stage_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_identification_identificationstage authentik_stages_ide_passwordless_flow_id_68cf3874_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage
ADD CONSTRAINT authentik_stages_ide_passwordless_flow_id_68cf3874_fk_authentik FOREIGN KEY (passwordless_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_identification_identificationstage authentik_stages_ide_recovery_flow_id_16f5f1c7_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage
ADD CONSTRAINT authentik_stages_ide_recovery_flow_id_16f5f1c7_fk_authentik FOREIGN KEY (recovery_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_identification_identificationstage_sources authentik_stages_ide_source_id_9579fda9_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage_sources
ADD CONSTRAINT authentik_stages_ide_source_id_9579fda9_fk_authentik FOREIGN KEY (source_id) REFERENCES public.authentik_core_source(policybindingmodel_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_identification_identificationstage authentik_stages_ide_stage_ptr_id_da7dad55_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_identification_identificationstage
ADD CONSTRAINT authentik_stages_ide_stage_ptr_id_da7dad55_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_invitation_invitation authentik_stages_inv_created_by_id_87fe9398_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_invitation_invitation
ADD CONSTRAINT authentik_stages_inv_created_by_id_87fe9398_fk_authentik FOREIGN KEY (created_by_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_invitation_invitation authentik_stages_inv_flow_id_66945236_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_invitation_invitation
ADD CONSTRAINT authentik_stages_inv_flow_id_66945236_fk_authentik FOREIGN KEY (flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_invitation_invitationstage authentik_stages_inv_stage_ptr_id_fcaca395_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_invitation_invitationstage
ADD CONSTRAINT authentik_stages_inv_stage_ptr_id_fcaca395_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_password_passwordstage authentik_stages_pas_configure_flow_id_2a91be83_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_password_passwordstage
ADD CONSTRAINT authentik_stages_pas_configure_flow_id_2a91be83_fk_authentik FOREIGN KEY (configure_flow_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_password_passwordstage authentik_stages_pas_stage_ptr_id_46eda438_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_password_passwordstage
ADD CONSTRAINT authentik_stages_pas_stage_ptr_id_46eda438_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_prompt_promptstage_validation_policies authentik_stages_pro_policy_id_96db92ab_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_validation_policies
ADD CONSTRAINT authentik_stages_pro_policy_id_96db92ab_fk_authentik FOREIGN KEY (policy_id) REFERENCES public.authentik_policies_policy(policy_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_prompt_promptstage_fields authentik_stages_pro_prompt_id_8c79d4c1_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_fields
ADD CONSTRAINT authentik_stages_pro_prompt_id_8c79d4c1_fk_authentik FOREIGN KEY (prompt_id) REFERENCES public.authentik_stages_prompt_prompt(prompt_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_prompt_promptstage_validation_policies authentik_stages_pro_promptstage_id_cb253bb1_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_validation_policies
ADD CONSTRAINT authentik_stages_pro_promptstage_id_cb253bb1_fk_authentik FOREIGN KEY (promptstage_id) REFERENCES public.authentik_stages_prompt_promptstage(stage_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_prompt_promptstage_fields authentik_stages_pro_promptstage_id_d3bd61cc_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage_fields
ADD CONSTRAINT authentik_stages_pro_promptstage_id_d3bd61cc_fk_authentik FOREIGN KEY (promptstage_id) REFERENCES public.authentik_stages_prompt_promptstage(stage_ptr_id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_prompt_promptstage authentik_stages_pro_stage_ptr_id_285415b5_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_prompt_promptstage
ADD CONSTRAINT authentik_stages_pro_stage_ptr_id_285415b5_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_user_write_userwritestage authentik_stages_use_create_users_group_i_90b7794f_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_write_userwritestage
ADD CONSTRAINT authentik_stages_use_create_users_group_i_90b7794f_fk_authentik FOREIGN KEY (create_users_group_id) REFERENCES public.authentik_core_group(group_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_user_write_userwritestage authentik_stages_use_stage_ptr_id_2cc319e1_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_write_userwritestage
ADD CONSTRAINT authentik_stages_use_stage_ptr_id_2cc319e1_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_user_delete_userdeletestage authentik_stages_use_stage_ptr_id_61292077_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_delete_userdeletestage
ADD CONSTRAINT authentik_stages_use_stage_ptr_id_61292077_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_user_login_userloginstage authentik_stages_use_stage_ptr_id_b1bc035b_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_login_userloginstage
ADD CONSTRAINT authentik_stages_use_stage_ptr_id_b1bc035b_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_stages_user_logout_userlogoutstage authentik_stages_use_stage_ptr_id_c7d7012d_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_stages_user_logout_userlogoutstage
ADD CONSTRAINT authentik_stages_use_stage_ptr_id_c7d7012d_fk_authentik FOREIGN KEY (stage_ptr_id) REFERENCES public.authentik_flows_stage(stage_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_tenants_tenant authentik_tenants_te_flow_authentication__7a0889f3_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_te_flow_authentication__7a0889f3_fk_authentik FOREIGN KEY (flow_authentication_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_tenants_tenant authentik_tenants_te_flow_device_code_id_c8fa4eb4_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_te_flow_device_code_id_c8fa4eb4_fk_authentik FOREIGN KEY (flow_device_code_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_tenants_tenant authentik_tenants_te_flow_invalidation_id_cedce4a1_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_te_flow_invalidation_id_cedce4a1_fk_authentik FOREIGN KEY (flow_invalidation_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_tenants_tenant authentik_tenants_te_flow_recovery_id_a08f1692_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_te_flow_recovery_id_a08f1692_fk_authentik FOREIGN KEY (flow_recovery_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_tenants_tenant authentik_tenants_te_flow_unenrollment_id_73817e72_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_te_flow_unenrollment_id_73817e72_fk_authentik FOREIGN KEY (flow_unenrollment_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_tenants_tenant authentik_tenants_te_flow_user_settings_i_7592a467_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_te_flow_user_settings_i_7592a467_fk_authentik FOREIGN KEY (flow_user_settings_id) REFERENCES public.authentik_flows_flow(flow_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: authentik_tenants_tenant authentik_tenants_te_web_certificate_id_74429583_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.authentik_tenants_tenant
ADD CONSTRAINT authentik_tenants_te_web_certificate_id_74429583_fk_authentik FOREIGN KEY (web_certificate_id) REFERENCES public.authentik_crypto_certificatekeypair(kp_uuid) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: guardian_groupobjectpermission guardian_groupobject_content_type_id_7ade36b8_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_groupobjectpermission
ADD CONSTRAINT guardian_groupobject_content_type_id_7ade36b8_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: guardian_groupobjectpermission guardian_groupobject_group_id_4bbbfb62_fk_auth_grou; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_groupobjectpermission
ADD CONSTRAINT guardian_groupobject_group_id_4bbbfb62_fk_auth_grou FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: guardian_groupobjectpermission guardian_groupobject_permission_id_36572738_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_groupobjectpermission
ADD CONSTRAINT guardian_groupobject_permission_id_36572738_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: guardian_userobjectpermission guardian_userobjectp_content_type_id_2e892405_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_userobjectpermission
ADD CONSTRAINT guardian_userobjectp_content_type_id_2e892405_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: guardian_userobjectpermission guardian_userobjectp_permission_id_71807bfc_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_userobjectpermission
ADD CONSTRAINT guardian_userobjectp_permission_id_71807bfc_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;
--
-- Name: guardian_userobjectpermission guardian_userobjectp_user_id_d5c1e964_fk_authentik; Type: FK CONSTRAINT; Schema: public; Owner: authentik
--

ALTER TABLE ONLY public.guardian_userobjectpermission
ADD CONSTRAINT guardian_userobjectp_user_id_d5c1e964_fk_authentik FOREIGN KEY (user_id) REFERENCES public.authentik_core_user(id) DEFERRABLE INITIALLY DEFERRED;
--
-- PostgreSQL database dump complete
--
